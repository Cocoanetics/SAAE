warning: '--enable-test-discovery' option is deprecated; tests are automatically discovered on all platforms
Planning build
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -emit-module -experimental-skip-non-inlinable-function-bodies-without-types /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPlugin.swift /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPluginError.swift /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/PackagePlugin+Helpers.swift -target arm64-apple-macosx14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/PluginAPI -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -g -debug-info-format=dwarf -dwarf-version=4 -swift-version 5 -package-description-version 5.8.0 -new-driver-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -serialize-diagnostics-path /Users/oliver/Developer/SAAE/.build/plugins/cache/GenerateManual.dia -empty-abi-descriptor -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/oliver/Developer/SAAE -module-name GenerateManual -disable-clang-spi -target-sdk-version 15.5 -target-sdk-name macosx15.5 -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -emit-module-doc-path /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManual-1.swiftdoc -emit-module-source-info-path /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManual-1.swiftsourceinfo -parse-as-library -o /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManual-1.swiftmodule -emit-abi-descriptor-path /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManual-1.abi.json
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPlugin.swift /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPluginError.swift /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/PackagePlugin+Helpers.swift -target arm64-apple-macosx14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/PluginAPI -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -g -debug-info-format=dwarf -dwarf-version=4 -swift-version 5 -package-description-version 5.8.0 -new-driver-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -serialize-diagnostics-path /Users/oliver/Developer/SAAE/.build/plugins/cache/GenerateManual.dia -empty-abi-descriptor -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/oliver/Developer/SAAE -module-name GenerateManual -disable-clang-spi -target-sdk-version 15.5 -target-sdk-name macosx15.5 -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -parse-as-library -o /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManualPlugin-1.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPlugin.swift -primary-file /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPluginError.swift /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/PackagePlugin+Helpers.swift -target arm64-apple-macosx14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/PluginAPI -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -g -debug-info-format=dwarf -dwarf-version=4 -swift-version 5 -package-description-version 5.8.0 -new-driver-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -serialize-diagnostics-path /Users/oliver/Developer/SAAE/.build/plugins/cache/GenerateManual.dia -empty-abi-descriptor -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/oliver/Developer/SAAE -module-name GenerateManual -disable-clang-spi -target-sdk-version 15.5 -target-sdk-name macosx15.5 -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -parse-as-library -o /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManualPluginError-1.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPlugin.swift /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/GenerateManualPluginError.swift -primary-file /Users/oliver/Developer/SAAE/.build/checkouts/swift-argument-parser/Plugins/GenerateManual/PackagePlugin+Helpers.swift -target arm64-apple-macosx14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/PluginAPI -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -g -debug-info-format=dwarf -dwarf-version=4 -swift-version 5 -package-description-version 5.8.0 -new-driver-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -serialize-diagnostics-path /Users/oliver/Developer/SAAE/.build/plugins/cache/GenerateManual.dia -empty-abi-descriptor -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/oliver/Developer/SAAE -module-name GenerateManual -disable-clang-spi -target-sdk-version 15.5 -target-sdk-name macosx15.5 -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -external-plugin-path '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server' -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -parse-as-library -o /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/PackagePlugin+Helpers-1.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -Wl,-add_ast_path,/var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManual-1.swiftmodule /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManualPlugin-1.o /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/GenerateManualPluginError-1.o /var/folders/p6/yjr64jk546q_qh942bm7clp80000gn/T/TemporaryDirectory.1znFxS/PackagePlugin+Helpers-1.o -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks --sysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk --target=arm64-apple-macosx14.0 -L /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/lib/swift -L /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/PluginAPI -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -lPackagePlugin -Xlinker -rpath -Xlinker /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/PluginAPI -o /Users/oliver/Developer/SAAE/.build/plugins/cache/GenerateManual
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/dsymutil /Users/oliver/Developer/SAAE/.build/plugins/cache/GenerateManual -o /Users/oliver/Developer/SAAE/.build/plugins/cache/GenerateManual.dSYM
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx14.0
[1/1] Compiling plugin GenerateManual
Building for debugging...
Write auxiliary file /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/swift-version--58304C5D6DBC2206.txt
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax600 -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftSyntax600.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax600.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax600.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax600.build/SwiftSyntax600-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax510 -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftSyntax510.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax510.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax510.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax510.build/SwiftSyntax510-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax600 -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftSyntax600.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax600-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax600-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax600-tool.build/SwiftSyntax600-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax510 -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftSyntax510.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax510-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax510-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax510-tool.build/SwiftSyntax510-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax509 -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftSyntax509.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax509.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax509.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax509.build/SwiftSyntax509-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name Yams -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/Yams.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Yams.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Yams.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.13 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Yams.build/Yams-Swift.h -swift-version 5 -Xcc -DYAML_DECLARE_STATIC -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax509 -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftSyntax509.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax509-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax509-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax509-tool.build/SwiftSyntax509-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name ArgumentParserToolInfo -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/ArgumentParserToolInfo.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ArgumentParserToolInfo.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ArgumentParserToolInfo.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.13 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ArgumentParserToolInfo.build/ArgumentParserToolInfo-Swift.h -swift-version 5 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.13
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftSyntax.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax-tool.build/SwiftSyntax-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntax -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftSyntax.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntax.build/SwiftSyntax-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name ArgumentParser -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/ArgumentParser.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ArgumentParser.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ArgumentParser.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.13 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ArgumentParser.build/ArgumentParser-Swift.h -swift-version 5 -enable-experimental-feature StrictConcurrency -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.13
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.13
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftBasicFormat -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftBasicFormat.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftBasicFormat-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftBasicFormat-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftBasicFormat-tool.build/SwiftBasicFormat-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftDiagnostics -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftDiagnostics.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftDiagnostics-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftDiagnostics-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftDiagnostics-tool.build/SwiftDiagnostics-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftParser -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftParser.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParser-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParser-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParser-tool.build/SwiftParser-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftBasicFormat -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftBasicFormat.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftBasicFormat.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftBasicFormat.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftBasicFormat.build/SwiftBasicFormat-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftDiagnostics -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftDiagnostics.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftDiagnostics.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftDiagnostics.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftDiagnostics.build/SwiftDiagnostics-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftParser -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftParser.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParser.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParser.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParser.build/SwiftParser-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftOperators -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftOperators.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftOperators-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftOperators-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftOperators-tool.build/SwiftOperators-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftParserDiagnostics -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftParserDiagnostics.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParserDiagnostics-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParserDiagnostics-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParserDiagnostics-tool.build/SwiftParserDiagnostics-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftParserDiagnostics -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SwiftParserDiagnostics.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParserDiagnostics.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParserDiagnostics.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftParserDiagnostics.build/SwiftParserDiagnostics-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SAAE -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SAAE.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/SAAE-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -package-name saae
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntaxBuilder -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftSyntaxBuilder.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxBuilder-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxBuilder-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxBuilder-tool.build/SwiftSyntaxBuilder-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -emit-module -experimental-skip-non-inlinable-function-bodies-without-types /Users/oliver/Developer/SAAE/Sources/SAAE/CodeOverview.swift /Users/oliver/Developer/SAAE/Sources/SAAE/DeclarationOverview.swift /Users/oliver/Developer/SAAE/Sources/SAAE/DeclarationVisitor.swift /Users/oliver/Developer/SAAE/Sources/SAAE/Documentation.swift /Users/oliver/Developer/SAAE/Sources/SAAE/ImportVisitor.swift /Users/oliver/Developer/SAAE/Sources/SAAE/OutputFormat.swift /Users/oliver/Developer/SAAE/Sources/SAAE/ProjectOverview.swift /Users/oliver/Developer/SAAE/Sources/SAAE/SAAEError.swift /Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift /Users/oliver/Developer/SAAE/Sources/SAAE/VisibilityLevel.swift -target arm64-apple-macosx10.15 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -enable-testing -g -debug-info-format=dwarf -dwarf-version=4 -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -swift-version 6 -Onone -D SWIFT_PACKAGE -D DEBUG -new-driver-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -empty-abi-descriptor -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/oliver/Developer/SAAE -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -module-name SAAE -package-name saae -disable-clang-spi -target-sdk-version 15.5 -target-sdk-name macosx15.5 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -emit-module-doc-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SAAE.swiftdoc -emit-module-source-info-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SAAE.swiftsourceinfo -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/SAAE-Swift.h -emit-dependencies-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/SAAE.emit-module.d -parse-as-library -o /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SAAE.swiftmodule -emit-abi-descriptor-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules/SAAE.abi.json
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/oliver/Developer/SAAE/Sources/SAAE/CodeOverview.swift /Users/oliver/Developer/SAAE/Sources/SAAE/DeclarationOverview.swift /Users/oliver/Developer/SAAE/Sources/SAAE/DeclarationVisitor.swift /Users/oliver/Developer/SAAE/Sources/SAAE/Documentation.swift /Users/oliver/Developer/SAAE/Sources/SAAE/ImportVisitor.swift /Users/oliver/Developer/SAAE/Sources/SAAE/OutputFormat.swift /Users/oliver/Developer/SAAE/Sources/SAAE/ProjectOverview.swift /Users/oliver/Developer/SAAE/Sources/SAAE/SAAEError.swift -primary-file /Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift /Users/oliver/Developer/SAAE/Sources/SAAE/VisibilityLevel.swift -emit-dependencies-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/SyntaxTree.d -emit-reference-dependencies-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/SyntaxTree.swiftdeps -target arm64-apple-macosx10.15 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -enable-testing -g -debug-info-format=dwarf -dwarf-version=4 -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -swift-version 6 -Onone -D SWIFT_PACKAGE -D DEBUG -new-driver-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -empty-abi-descriptor -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/oliver/Developer/SAAE -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/Yams/Sources/CYaml/include -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -module-name SAAE -package-name saae -disable-clang-spi -target-sdk-version 15.5 -target-sdk-name macosx15.5 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -parse-as-library -o /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SAAE.build/SyntaxTree.swift.o -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -index-system-modules
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntaxMacros -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftSyntaxMacros.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxMacros-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxMacros-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxMacros-tool.build/SwiftSyntaxMacros-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftSyntaxMacroExpansion -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftSyntaxMacroExpansion.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxMacroExpansion-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxMacroExpansion-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftSyntaxMacroExpansion-tool.build/SwiftSyntaxMacroExpansion-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftCompilerPluginMessageHandling -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftCompilerPluginMessageHandling.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftCompilerPluginMessageHandling-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftCompilerPluginMessageHandling-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftCompilerPluginMessageHandling-tool.build/SwiftCompilerPluginMessageHandling-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name SwiftCompilerPlugin -emit-dependencies -emit-module -emit-module-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool/SwiftCompilerPlugin.swiftmodule -output-file-map /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftCompilerPlugin-tool.build/output-file-map.json -parse-as-library -incremental -c @/Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftCompilerPlugin-tool.build/sources -I /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/Modules-tool -target arm64-apple-macosx10.15 -v -enable-batch-mode -index-store-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/index/store -Onone -enable-testing -j12 -DSWIFT_PACKAGE -DDEBUG -Xcc -fmodule-map-file=/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include/module.modulemap -Xcc -I -Xcc /Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/_SwiftSyntaxCShims/include -module-cache-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/ModuleCache -parseable-output -parse-as-library -emit-objc-header -emit-objc-header-path /Users/oliver/Developer/SAAE/.build/arm64-apple-macosx/debug/SwiftCompilerPlugin-tool.build/SwiftCompilerPlugin-Swift.h -swift-version 6 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -g -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -suppress-warnings
error: emit-module command failed with exit code 1 (use -v to see invocation)
/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:679:19: error: method does not override any method from its superclass
677 |     }
678 | 
679 |     override func visitAny(_ node: Syntax) -> SyntaxVisitorContinueKind {
    |                   `- error: method does not override any method from its superclass
680 |         currentIndex += 1
681 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:691:19: error: method does not override any method from its superclass
689 |     }
690 | 
691 |     override func visitPost(_ node: Syntax) {
    |                   `- error: method does not override any method from its superclass
692 |         _ = currentPath.popLast()
693 |     }

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxVisitor.swift:50:13: note: potential overridden instance method 'visitPost' here
  48 |   /// The function called after visiting ``AccessorBlockSyntax`` and its descendants.
  49 |   ///   - node: the node we just finished visiting.
  50 |   open func visitPost(_ node: AccessorBlockSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  51 |   }
  52 |   
     :
  60 |   /// The function called after visiting ``AccessorDeclListSyntax`` and its descendants.
  61 |   ///   - node: the node we just finished visiting.
  62 |   open func visitPost(_ node: AccessorDeclListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  63 |   }
  64 |   
     :
  72 |   /// The function called after visiting ``AccessorDeclSyntax`` and its descendants.
  73 |   ///   - node: the node we just finished visiting.
  74 |   open func visitPost(_ node: AccessorDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  75 |   }
  76 |   
     :
  84 |   /// The function called after visiting ``AccessorEffectSpecifiersSyntax`` and its descendants.
  85 |   ///   - node: the node we just finished visiting.
  86 |   open func visitPost(_ node: AccessorEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  87 |   }
  88 |   
     :
  96 |   /// The function called after visiting ``AccessorParametersSyntax`` and its descendants.
  97 |   ///   - node: the node we just finished visiting.
  98 |   open func visitPost(_ node: AccessorParametersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  99 |   }
 100 |   
     :
 108 |   /// The function called after visiting ``ActorDeclSyntax`` and its descendants.
 109 |   ///   - node: the node we just finished visiting.
 110 |   open func visitPost(_ node: ActorDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 111 |   }
 112 |   
     :
 120 |   /// The function called after visiting ``ArrayElementListSyntax`` and its descendants.
 121 |   ///   - node: the node we just finished visiting.
 122 |   open func visitPost(_ node: ArrayElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 123 |   }
 124 |   
     :
 132 |   /// The function called after visiting ``ArrayElementSyntax`` and its descendants.
 133 |   ///   - node: the node we just finished visiting.
 134 |   open func visitPost(_ node: ArrayElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 135 |   }
 136 |   
     :
 144 |   /// The function called after visiting ``ArrayExprSyntax`` and its descendants.
 145 |   ///   - node: the node we just finished visiting.
 146 |   open func visitPost(_ node: ArrayExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 147 |   }
 148 |   
     :
 156 |   /// The function called after visiting ``ArrayTypeSyntax`` and its descendants.
 157 |   ///   - node: the node we just finished visiting.
 158 |   open func visitPost(_ node: ArrayTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 159 |   }
 160 |   
     :
 168 |   /// The function called after visiting ``ArrowExprSyntax`` and its descendants.
 169 |   ///   - node: the node we just finished visiting.
 170 |   open func visitPost(_ node: ArrowExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 171 |   }
 172 |   
     :
 180 |   /// The function called after visiting ``AsExprSyntax`` and its descendants.
 181 |   ///   - node: the node we just finished visiting.
 182 |   open func visitPost(_ node: AsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 183 |   }
 184 |   
     :
 192 |   /// The function called after visiting ``AssignmentExprSyntax`` and its descendants.
 193 |   ///   - node: the node we just finished visiting.
 194 |   open func visitPost(_ node: AssignmentExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 195 |   }
 196 |   
     :
 204 |   /// The function called after visiting ``AssociatedTypeDeclSyntax`` and its descendants.
 205 |   ///   - node: the node we just finished visiting.
 206 |   open func visitPost(_ node: AssociatedTypeDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 207 |   }
 208 |   
     :
 216 |   /// The function called after visiting ``AttributeListSyntax`` and its descendants.
 217 |   ///   - node: the node we just finished visiting.
 218 |   open func visitPost(_ node: AttributeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 219 |   }
 220 |   
     :
 228 |   /// The function called after visiting ``AttributeSyntax`` and its descendants.
 229 |   ///   - node: the node we just finished visiting.
 230 |   open func visitPost(_ node: AttributeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 231 |   }
 232 |   
     :
 240 |   /// The function called after visiting ``AttributedTypeSyntax`` and its descendants.
 241 |   ///   - node: the node we just finished visiting.
 242 |   open func visitPost(_ node: AttributedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 243 |   }
 244 |   
     :
 252 |   /// The function called after visiting ``AvailabilityArgumentListSyntax`` and its descendants.
 253 |   ///   - node: the node we just finished visiting.
 254 |   open func visitPost(_ node: AvailabilityArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 255 |   }
 256 |   
     :
 264 |   /// The function called after visiting ``AvailabilityArgumentSyntax`` and its descendants.
 265 |   ///   - node: the node we just finished visiting.
 266 |   open func visitPost(_ node: AvailabilityArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 267 |   }
 268 |   
     :
 276 |   /// The function called after visiting ``AvailabilityConditionSyntax`` and its descendants.
 277 |   ///   - node: the node we just finished visiting.
 278 |   open func visitPost(_ node: AvailabilityConditionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 279 |   }
 280 |   
     :
 288 |   /// The function called after visiting ``AvailabilityLabeledArgumentSyntax`` and its descendants.
 289 |   ///   - node: the node we just finished visiting.
 290 |   open func visitPost(_ node: AvailabilityLabeledArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 291 |   }
 292 |   
     :
 300 |   /// The function called after visiting ``AwaitExprSyntax`` and its descendants.
 301 |   ///   - node: the node we just finished visiting.
 302 |   open func visitPost(_ node: AwaitExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 303 |   }
 304 |   
     :
 312 |   /// The function called after visiting ``BackDeployedAttributeArgumentsSyntax`` and its descendants.
 313 |   ///   - node: the node we just finished visiting.
 314 |   open func visitPost(_ node: BackDeployedAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 315 |   }
 316 |   
     :
 324 |   /// The function called after visiting ``BinaryOperatorExprSyntax`` and its descendants.
 325 |   ///   - node: the node we just finished visiting.
 326 |   open func visitPost(_ node: BinaryOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 327 |   }
 328 |   
     :
 336 |   /// The function called after visiting ``BooleanLiteralExprSyntax`` and its descendants.
 337 |   ///   - node: the node we just finished visiting.
 338 |   open func visitPost(_ node: BooleanLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 339 |   }
 340 |   
     :
 348 |   /// The function called after visiting ``BorrowExprSyntax`` and its descendants.
 349 |   ///   - node: the node we just finished visiting.
 350 |   open func visitPost(_ node: BorrowExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 351 |   }
 352 |   
     :
 360 |   /// The function called after visiting ``BreakStmtSyntax`` and its descendants.
 361 |   ///   - node: the node we just finished visiting.
 362 |   open func visitPost(_ node: BreakStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 363 |   }
 364 |   
     :
 372 |   /// The function called after visiting `_CanImportExprSyntax` and its descendants.
 373 |   ///   - node: the node we just finished visiting.
 374 |   open func visitPost(_ node: _CanImportExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 375 |   }
 376 |   
     :
 384 |   /// The function called after visiting `_CanImportVersionInfoSyntax` and its descendants.
 385 |   ///   - node: the node we just finished visiting.
 386 |   open func visitPost(_ node: _CanImportVersionInfoSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 387 |   }
 388 |   
     :
 396 |   /// The function called after visiting ``CatchClauseListSyntax`` and its descendants.
 397 |   ///   - node: the node we just finished visiting.
 398 |   open func visitPost(_ node: CatchClauseListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 399 |   }
 400 |   
     :
 408 |   /// The function called after visiting ``CatchClauseSyntax`` and its descendants.
 409 |   ///   - node: the node we just finished visiting.
 410 |   open func visitPost(_ node: CatchClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 411 |   }
 412 |   
     :
 420 |   /// The function called after visiting ``CatchItemListSyntax`` and its descendants.
 421 |   ///   - node: the node we just finished visiting.
 422 |   open func visitPost(_ node: CatchItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 423 |   }
 424 |   
     :
 432 |   /// The function called after visiting ``CatchItemSyntax`` and its descendants.
 433 |   ///   - node: the node we just finished visiting.
 434 |   open func visitPost(_ node: CatchItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 435 |   }
 436 |   
     :
 444 |   /// The function called after visiting ``ClassDeclSyntax`` and its descendants.
 445 |   ///   - node: the node we just finished visiting.
 446 |   open func visitPost(_ node: ClassDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 447 |   }
 448 |   
     :
 456 |   /// The function called after visiting ``ClassRestrictionTypeSyntax`` and its descendants.
 457 |   ///   - node: the node we just finished visiting.
 458 |   open func visitPost(_ node: ClassRestrictionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 459 |   }
 460 |   
     :
 468 |   /// The function called after visiting ``ClosureCaptureClauseSyntax`` and its descendants.
 469 |   ///   - node: the node we just finished visiting.
 470 |   open func visitPost(_ node: ClosureCaptureClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 471 |   }
 472 |   
     :
 480 |   /// The function called after visiting ``ClosureCaptureListSyntax`` and its descendants.
 481 |   ///   - node: the node we just finished visiting.
 482 |   open func visitPost(_ node: ClosureCaptureListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 483 |   }
 484 |   
     :
 492 |   /// The function called after visiting ``ClosureCaptureSpecifierSyntax`` and its descendants.
 493 |   ///   - node: the node we just finished visiting.
 494 |   open func visitPost(_ node: ClosureCaptureSpecifierSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 495 |   }
 496 |   
     :
 504 |   /// The function called after visiting ``ClosureCaptureSyntax`` and its descendants.
 505 |   ///   - node: the node we just finished visiting.
 506 |   open func visitPost(_ node: ClosureCaptureSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 507 |   }
 508 |   
     :
 516 |   /// The function called after visiting ``ClosureExprSyntax`` and its descendants.
 517 |   ///   - node: the node we just finished visiting.
 518 |   open func visitPost(_ node: ClosureExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 519 |   }
 520 |   
     :
 528 |   /// The function called after visiting ``ClosureParameterClauseSyntax`` and its descendants.
 529 |   ///   - node: the node we just finished visiting.
 530 |   open func visitPost(_ node: ClosureParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 531 |   }
 532 |   
     :
 540 |   /// The function called after visiting ``ClosureParameterListSyntax`` and its descendants.
 541 |   ///   - node: the node we just finished visiting.
 542 |   open func visitPost(_ node: ClosureParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 543 |   }
 544 |   
     :
 552 |   /// The function called after visiting ``ClosureParameterSyntax`` and its descendants.
 553 |   ///   - node: the node we just finished visiting.
 554 |   open func visitPost(_ node: ClosureParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 555 |   }
 556 |   
     :
 564 |   /// The function called after visiting ``ClosureShorthandParameterListSyntax`` and its descendants.
 565 |   ///   - node: the node we just finished visiting.
 566 |   open func visitPost(_ node: ClosureShorthandParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 567 |   }
 568 |   
     :
 576 |   /// The function called after visiting ``ClosureShorthandParameterSyntax`` and its descendants.
 577 |   ///   - node: the node we just finished visiting.
 578 |   open func visitPost(_ node: ClosureShorthandParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 579 |   }
 580 |   
     :
 588 |   /// The function called after visiting ``ClosureSignatureSyntax`` and its descendants.
 589 |   ///   - node: the node we just finished visiting.
 590 |   open func visitPost(_ node: ClosureSignatureSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 591 |   }
 592 |   
     :
 600 |   /// The function called after visiting ``CodeBlockItemListSyntax`` and its descendants.
 601 |   ///   - node: the node we just finished visiting.
 602 |   open func visitPost(_ node: CodeBlockItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 603 |   }
 604 |   
     :
 612 |   /// The function called after visiting ``CodeBlockItemSyntax`` and its descendants.
 613 |   ///   - node: the node we just finished visiting.
 614 |   open func visitPost(_ node: CodeBlockItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 615 |   }
 616 |   
     :
 624 |   /// The function called after visiting ``CodeBlockSyntax`` and its descendants.
 625 |   ///   - node: the node we just finished visiting.
 626 |   open func visitPost(_ node: CodeBlockSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 627 |   }
 628 |   
     :
 636 |   /// The function called after visiting ``CompositionTypeElementListSyntax`` and its descendants.
 637 |   ///   - node: the node we just finished visiting.
 638 |   open func visitPost(_ node: CompositionTypeElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 639 |   }
 640 |   
     :
 648 |   /// The function called after visiting ``CompositionTypeElementSyntax`` and its descendants.
 649 |   ///   - node: the node we just finished visiting.
 650 |   open func visitPost(_ node: CompositionTypeElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 651 |   }
 652 |   
     :
 660 |   /// The function called after visiting ``CompositionTypeSyntax`` and its descendants.
 661 |   ///   - node: the node we just finished visiting.
 662 |   open func visitPost(_ node: CompositionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 663 |   }
 664 |   
     :
 672 |   /// The function called after visiting ``ConditionElementListSyntax`` and its descendants.
 673 |   ///   - node: the node we just finished visiting.
 674 |   open func visitPost(_ node: ConditionElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 675 |   }
 676 |   
     :
 684 |   /// The function called after visiting ``ConditionElementSyntax`` and its descendants.
 685 |   ///   - node: the node we just finished visiting.
 686 |   open func visitPost(_ node: ConditionElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 687 |   }
 688 |   
     :
 696 |   /// The function called after visiting ``ConformanceRequirementSyntax`` and its descendants.
 697 |   ///   - node: the node we just finished visiting.
 698 |   open func visitPost(_ node: ConformanceRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 699 |   }
 700 |   
     :
 708 |   /// The function called after visiting ``ConsumeExprSyntax`` and its descendants.
 709 |   ///   - node: the node we just finished visiting.
 710 |   open func visitPost(_ node: ConsumeExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 711 |   }
 712 |   
     :
 720 |   /// The function called after visiting ``ContinueStmtSyntax`` and its descendants.
 721 |   ///   - node: the node we just finished visiting.
 722 |   open func visitPost(_ node: ContinueStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 723 |   }
 724 |   
     :
 732 |   /// The function called after visiting ``ConventionAttributeArgumentsSyntax`` and its descendants.
 733 |   ///   - node: the node we just finished visiting.
 734 |   open func visitPost(_ node: ConventionAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 735 |   }
 736 |   
     :
 744 |   /// The function called after visiting ``ConventionWitnessMethodAttributeArgumentsSyntax`` and its descendants.
 745 |   ///   - node: the node we just finished visiting.
 746 |   open func visitPost(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 747 |   }
 748 |   
     :
 756 |   /// The function called after visiting ``CopyExprSyntax`` and its descendants.
 757 |   ///   - node: the node we just finished visiting.
 758 |   open func visitPost(_ node: CopyExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 759 |   }
 760 |   
     :
 768 |   /// The function called after visiting ``DeclModifierDetailSyntax`` and its descendants.
 769 |   ///   - node: the node we just finished visiting.
 770 |   open func visitPost(_ node: DeclModifierDetailSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 771 |   }
 772 |   
     :
 780 |   /// The function called after visiting ``DeclModifierListSyntax`` and its descendants.
 781 |   ///   - node: the node we just finished visiting.
 782 |   open func visitPost(_ node: DeclModifierListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 783 |   }
 784 |   
     :
 792 |   /// The function called after visiting ``DeclModifierSyntax`` and its descendants.
 793 |   ///   - node: the node we just finished visiting.
 794 |   open func visitPost(_ node: DeclModifierSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 795 |   }
 796 |   
     :
 804 |   /// The function called after visiting ``DeclNameArgumentListSyntax`` and its descendants.
 805 |   ///   - node: the node we just finished visiting.
 806 |   open func visitPost(_ node: DeclNameArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 807 |   }
 808 |   
     :
 816 |   /// The function called after visiting ``DeclNameArgumentSyntax`` and its descendants.
 817 |   ///   - node: the node we just finished visiting.
 818 |   open func visitPost(_ node: DeclNameArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 819 |   }
 820 |   
     :
 828 |   /// The function called after visiting ``DeclNameArgumentsSyntax`` and its descendants.
 829 |   ///   - node: the node we just finished visiting.
 830 |   open func visitPost(_ node: DeclNameArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 831 |   }
 832 |   
     :
 840 |   /// The function called after visiting ``DeclReferenceExprSyntax`` and its descendants.
 841 |   ///   - node: the node we just finished visiting.
 842 |   open func visitPost(_ node: DeclReferenceExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 843 |   }
 844 |   
     :
 852 |   /// The function called after visiting ``DeferStmtSyntax`` and its descendants.
 853 |   ///   - node: the node we just finished visiting.
 854 |   open func visitPost(_ node: DeferStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 855 |   }
 856 |   
     :
 864 |   /// The function called after visiting ``DeinitializerDeclSyntax`` and its descendants.
 865 |   ///   - node: the node we just finished visiting.
 866 |   open func visitPost(_ node: DeinitializerDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 867 |   }
 868 |   
     :
 876 |   /// The function called after visiting ``DeinitializerEffectSpecifiersSyntax`` and its descendants.
 877 |   ///   - node: the node we just finished visiting.
 878 |   open func visitPost(_ node: DeinitializerEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 879 |   }
 880 |   
     :
 888 |   /// The function called after visiting ``DerivativeAttributeArgumentsSyntax`` and its descendants.
 889 |   ///   - node: the node we just finished visiting.
 890 |   open func visitPost(_ node: DerivativeAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 891 |   }
 892 |   
     :
 900 |   /// The function called after visiting ``DesignatedTypeListSyntax`` and its descendants.
 901 |   ///   - node: the node we just finished visiting.
 902 |   open func visitPost(_ node: DesignatedTypeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 903 |   }
 904 |   
     :
 912 |   /// The function called after visiting ``DesignatedTypeSyntax`` and its descendants.
 913 |   ///   - node: the node we just finished visiting.
 914 |   open func visitPost(_ node: DesignatedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 915 |   }
 916 |   
     :
 924 |   /// The function called after visiting ``DictionaryElementListSyntax`` and its descendants.
 925 |   ///   - node: the node we just finished visiting.
 926 |   open func visitPost(_ node: DictionaryElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 927 |   }
 928 |   
     :
 936 |   /// The function called after visiting ``DictionaryElementSyntax`` and its descendants.
 937 |   ///   - node: the node we just finished visiting.
 938 |   open func visitPost(_ node: DictionaryElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 939 |   }
 940 |   
     :
 948 |   /// The function called after visiting ``DictionaryExprSyntax`` and its descendants.
 949 |   ///   - node: the node we just finished visiting.
 950 |   open func visitPost(_ node: DictionaryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 951 |   }
 952 |   
     :
 960 |   /// The function called after visiting ``DictionaryTypeSyntax`` and its descendants.
 961 |   ///   - node: the node we just finished visiting.
 962 |   open func visitPost(_ node: DictionaryTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 963 |   }
 964 |   
     :
 972 |   /// The function called after visiting ``DifferentiabilityArgumentListSyntax`` and its descendants.
 973 |   ///   - node: the node we just finished visiting.
 974 |   open func visitPost(_ node: DifferentiabilityArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 975 |   }
 976 |   
     :
 984 |   /// The function called after visiting ``DifferentiabilityArgumentSyntax`` and its descendants.
 985 |   ///   - node: the node we just finished visiting.
 986 |   open func visitPost(_ node: DifferentiabilityArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 987 |   }
 988 |   
     :
 996 |   /// The function called after visiting ``DifferentiabilityArgumentsSyntax`` and its descendants.
 997 |   ///   - node: the node we just finished visiting.
 998 |   open func visitPost(_ node: DifferentiabilityArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 999 |   }
1000 |   
     :
1008 |   /// The function called after visiting ``DifferentiabilityWithRespectToArgumentSyntax`` and its descendants.
1009 |   ///   - node: the node we just finished visiting.
1010 |   open func visitPost(_ node: DifferentiabilityWithRespectToArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1011 |   }
1012 |   
     :
1020 |   /// The function called after visiting ``DifferentiableAttributeArgumentsSyntax`` and its descendants.
1021 |   ///   - node: the node we just finished visiting.
1022 |   open func visitPost(_ node: DifferentiableAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1023 |   }
1024 |   
     :
1032 |   /// The function called after visiting ``DiscardAssignmentExprSyntax`` and its descendants.
1033 |   ///   - node: the node we just finished visiting.
1034 |   open func visitPost(_ node: DiscardAssignmentExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1035 |   }
1036 |   
     :
1044 |   /// The function called after visiting ``DiscardStmtSyntax`` and its descendants.
1045 |   ///   - node: the node we just finished visiting.
1046 |   open func visitPost(_ node: DiscardStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1047 |   }
1048 |   
     :
1074 |   /// The function called after visiting ``DoStmtSyntax`` and its descendants.
1075 |   ///   - node: the node we just finished visiting.
1076 |   open func visitPost(_ node: DoStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1077 |   }
1078 |   
     :
1086 |   /// The function called after visiting ``DocumentationAttributeArgumentListSyntax`` and its descendants.
1087 |   ///   - node: the node we just finished visiting.
1088 |   open func visitPost(_ node: DocumentationAttributeArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1089 |   }
1090 |   
     :
1098 |   /// The function called after visiting ``DocumentationAttributeArgumentSyntax`` and its descendants.
1099 |   ///   - node: the node we just finished visiting.
1100 |   open func visitPost(_ node: DocumentationAttributeArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1101 |   }
1102 |   
     :
1110 |   /// The function called after visiting ``DynamicReplacementAttributeArgumentsSyntax`` and its descendants.
1111 |   ///   - node: the node we just finished visiting.
1112 |   open func visitPost(_ node: DynamicReplacementAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1113 |   }
1114 |   
     :
1122 |   /// The function called after visiting ``EditorPlaceholderDeclSyntax`` and its descendants.
1123 |   ///   - node: the node we just finished visiting.
1124 |   open func visitPost(_ node: EditorPlaceholderDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1125 |   }
1126 |   
     :
1134 |   /// The function called after visiting ``EditorPlaceholderExprSyntax`` and its descendants.
1135 |   ///   - node: the node we just finished visiting.
1136 |   open func visitPost(_ node: EditorPlaceholderExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1137 |   }
1138 |   
     :
1146 |   /// The function called after visiting ``EffectsAttributeArgumentListSyntax`` and its descendants.
1147 |   ///   - node: the node we just finished visiting.
1148 |   open func visitPost(_ node: EffectsAttributeArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1149 |   }
1150 |   
     :
1158 |   /// The function called after visiting ``EnumCaseDeclSyntax`` and its descendants.
1159 |   ///   - node: the node we just finished visiting.
1160 |   open func visitPost(_ node: EnumCaseDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1161 |   }
1162 |   
     :
1170 |   /// The function called after visiting ``EnumCaseElementListSyntax`` and its descendants.
1171 |   ///   - node: the node we just finished visiting.
1172 |   open func visitPost(_ node: EnumCaseElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1173 |   }
1174 |   
     :
1182 |   /// The function called after visiting ``EnumCaseElementSyntax`` and its descendants.
1183 |   ///   - node: the node we just finished visiting.
1184 |   open func visitPost(_ node: EnumCaseElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1185 |   }
1186 |   
     :
1194 |   /// The function called after visiting ``EnumCaseParameterClauseSyntax`` and its descendants.
1195 |   ///   - node: the node we just finished visiting.
1196 |   open func visitPost(_ node: EnumCaseParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1197 |   }
1198 |   
     :
1206 |   /// The function called after visiting ``EnumCaseParameterListSyntax`` and its descendants.
1207 |   ///   - node: the node we just finished visiting.
1208 |   open func visitPost(_ node: EnumCaseParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1209 |   }
1210 |   
     :
1218 |   /// The function called after visiting ``EnumCaseParameterSyntax`` and its descendants.
1219 |   ///   - node: the node we just finished visiting.
1220 |   open func visitPost(_ node: EnumCaseParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1221 |   }
1222 |   
     :
1230 |   /// The function called after visiting ``EnumDeclSyntax`` and its descendants.
1231 |   ///   - node: the node we just finished visiting.
1232 |   open func visitPost(_ node: EnumDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1233 |   }
1234 |   
     :
1242 |   /// The function called after visiting ``ExposeAttributeArgumentsSyntax`` and its descendants.
1243 |   ///   - node: the node we just finished visiting.
1244 |   open func visitPost(_ node: ExposeAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1245 |   }
1246 |   
     :
1254 |   /// The function called after visiting ``ExprListSyntax`` and its descendants.
1255 |   ///   - node: the node we just finished visiting.
1256 |   open func visitPost(_ node: ExprListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1257 |   }
1258 |   
     :
1266 |   /// The function called after visiting ``ExpressionPatternSyntax`` and its descendants.
1267 |   ///   - node: the node we just finished visiting.
1268 |   open func visitPost(_ node: ExpressionPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1269 |   }
1270 |   
     :
1278 |   /// The function called after visiting ``ExpressionSegmentSyntax`` and its descendants.
1279 |   ///   - node: the node we just finished visiting.
1280 |   open func visitPost(_ node: ExpressionSegmentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1281 |   }
1282 |   
     :
1290 |   /// The function called after visiting ``ExpressionStmtSyntax`` and its descendants.
1291 |   ///   - node: the node we just finished visiting.
1292 |   open func visitPost(_ node: ExpressionStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1293 |   }
1294 |   
     :
1302 |   /// The function called after visiting ``ExtensionDeclSyntax`` and its descendants.
1303 |   ///   - node: the node we just finished visiting.
1304 |   open func visitPost(_ node: ExtensionDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1305 |   }
1306 |   
     :
1314 |   /// The function called after visiting ``FallThroughStmtSyntax`` and its descendants.
1315 |   ///   - node: the node we just finished visiting.
1316 |   open func visitPost(_ node: FallThroughStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1317 |   }
1318 |   
     :
1326 |   /// The function called after visiting ``FloatLiteralExprSyntax`` and its descendants.
1327 |   ///   - node: the node we just finished visiting.
1328 |   open func visitPost(_ node: FloatLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1329 |   }
1330 |   
     :
1338 |   /// The function called after visiting ``ForStmtSyntax`` and its descendants.
1339 |   ///   - node: the node we just finished visiting.
1340 |   open func visitPost(_ node: ForStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1341 |   }
1342 |   
     :
1350 |   /// The function called after visiting ``ForceUnwrapExprSyntax`` and its descendants.
1351 |   ///   - node: the node we just finished visiting.
1352 |   open func visitPost(_ node: ForceUnwrapExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1353 |   }
1354 |   
     :
1362 |   /// The function called after visiting ``FunctionCallExprSyntax`` and its descendants.
1363 |   ///   - node: the node we just finished visiting.
1364 |   open func visitPost(_ node: FunctionCallExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1365 |   }
1366 |   
     :
1374 |   /// The function called after visiting ``FunctionDeclSyntax`` and its descendants.
1375 |   ///   - node: the node we just finished visiting.
1376 |   open func visitPost(_ node: FunctionDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1377 |   }
1378 |   
     :
1386 |   /// The function called after visiting ``FunctionEffectSpecifiersSyntax`` and its descendants.
1387 |   ///   - node: the node we just finished visiting.
1388 |   open func visitPost(_ node: FunctionEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1389 |   }
1390 |   
     :
1398 |   /// The function called after visiting ``FunctionParameterClauseSyntax`` and its descendants.
1399 |   ///   - node: the node we just finished visiting.
1400 |   open func visitPost(_ node: FunctionParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1401 |   }
1402 |   
     :
1410 |   /// The function called after visiting ``FunctionParameterListSyntax`` and its descendants.
1411 |   ///   - node: the node we just finished visiting.
1412 |   open func visitPost(_ node: FunctionParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1413 |   }
1414 |   
     :
1422 |   /// The function called after visiting ``FunctionParameterSyntax`` and its descendants.
1423 |   ///   - node: the node we just finished visiting.
1424 |   open func visitPost(_ node: FunctionParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1425 |   }
1426 |   
     :
1434 |   /// The function called after visiting ``FunctionSignatureSyntax`` and its descendants.
1435 |   ///   - node: the node we just finished visiting.
1436 |   open func visitPost(_ node: FunctionSignatureSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1437 |   }
1438 |   
     :
1446 |   /// The function called after visiting ``FunctionTypeSyntax`` and its descendants.
1447 |   ///   - node: the node we just finished visiting.
1448 |   open func visitPost(_ node: FunctionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1449 |   }
1450 |   
     :
1458 |   /// The function called after visiting ``GenericArgumentClauseSyntax`` and its descendants.
1459 |   ///   - node: the node we just finished visiting.
1460 |   open func visitPost(_ node: GenericArgumentClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1461 |   }
1462 |   
     :
1470 |   /// The function called after visiting ``GenericArgumentListSyntax`` and its descendants.
1471 |   ///   - node: the node we just finished visiting.
1472 |   open func visitPost(_ node: GenericArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1473 |   }
1474 |   
     :
1482 |   /// The function called after visiting ``GenericArgumentSyntax`` and its descendants.
1483 |   ///   - node: the node we just finished visiting.
1484 |   open func visitPost(_ node: GenericArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1485 |   }
1486 |   
     :
1494 |   /// The function called after visiting ``GenericParameterClauseSyntax`` and its descendants.
1495 |   ///   - node: the node we just finished visiting.
1496 |   open func visitPost(_ node: GenericParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1497 |   }
1498 |   
     :
1506 |   /// The function called after visiting ``GenericParameterListSyntax`` and its descendants.
1507 |   ///   - node: the node we just finished visiting.
1508 |   open func visitPost(_ node: GenericParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1509 |   }
1510 |   
     :
1518 |   /// The function called after visiting ``GenericParameterSyntax`` and its descendants.
1519 |   ///   - node: the node we just finished visiting.
1520 |   open func visitPost(_ node: GenericParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1521 |   }
1522 |   
     :
1530 |   /// The function called after visiting ``GenericRequirementListSyntax`` and its descendants.
1531 |   ///   - node: the node we just finished visiting.
1532 |   open func visitPost(_ node: GenericRequirementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1533 |   }
1534 |   
     :
1542 |   /// The function called after visiting ``GenericRequirementSyntax`` and its descendants.
1543 |   ///   - node: the node we just finished visiting.
1544 |   open func visitPost(_ node: GenericRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1545 |   }
1546 |   
     :
1554 |   /// The function called after visiting ``GenericSpecializationExprSyntax`` and its descendants.
1555 |   ///   - node: the node we just finished visiting.
1556 |   open func visitPost(_ node: GenericSpecializationExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1557 |   }
1558 |   
     :
1566 |   /// The function called after visiting ``GenericWhereClauseSyntax`` and its descendants.
1567 |   ///   - node: the node we just finished visiting.
1568 |   open func visitPost(_ node: GenericWhereClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1569 |   }
1570 |   
     :
1578 |   /// The function called after visiting ``GuardStmtSyntax`` and its descendants.
1579 |   ///   - node: the node we just finished visiting.
1580 |   open func visitPost(_ node: GuardStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1581 |   }
1582 |   
     :
1590 |   /// The function called after visiting ``IdentifierPatternSyntax`` and its descendants.
1591 |   ///   - node: the node we just finished visiting.
1592 |   open func visitPost(_ node: IdentifierPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1593 |   }
1594 |   
     :
1602 |   /// The function called after visiting ``IdentifierTypeSyntax`` and its descendants.
1603 |   ///   - node: the node we just finished visiting.
1604 |   open func visitPost(_ node: IdentifierTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1605 |   }
1606 |   
     :
1614 |   /// The function called after visiting ``IfConfigClauseListSyntax`` and its descendants.
1615 |   ///   - node: the node we just finished visiting.
1616 |   open func visitPost(_ node: IfConfigClauseListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1617 |   }
1618 |   
     :
1626 |   /// The function called after visiting ``IfConfigClauseSyntax`` and its descendants.
1627 |   ///   - node: the node we just finished visiting.
1628 |   open func visitPost(_ node: IfConfigClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1629 |   }
1630 |   
     :
1638 |   /// The function called after visiting ``IfConfigDeclSyntax`` and its descendants.
1639 |   ///   - node: the node we just finished visiting.
1640 |   open func visitPost(_ node: IfConfigDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1641 |   }
1642 |   
     :
1650 |   /// The function called after visiting ``IfExprSyntax`` and its descendants.
1651 |   ///   - node: the node we just finished visiting.
1652 |   open func visitPost(_ node: IfExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1653 |   }
1654 |   
     :
1662 |   /// The function called after visiting ``ImplementsAttributeArgumentsSyntax`` and its descendants.
1663 |   ///   - node: the node we just finished visiting.
1664 |   open func visitPost(_ node: ImplementsAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1665 |   }
1666 |   
     :
1674 |   /// The function called after visiting ``ImplicitlyUnwrappedOptionalTypeSyntax`` and its descendants.
1675 |   ///   - node: the node we just finished visiting.
1676 |   open func visitPost(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1677 |   }
1678 |   
     :
1686 |   /// The function called after visiting ``ImportDeclSyntax`` and its descendants.
1687 |   ///   - node: the node we just finished visiting.
1688 |   open func visitPost(_ node: ImportDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1689 |   }
1690 |   
     :
1698 |   /// The function called after visiting ``ImportPathComponentListSyntax`` and its descendants.
1699 |   ///   - node: the node we just finished visiting.
1700 |   open func visitPost(_ node: ImportPathComponentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1701 |   }
1702 |   
     :
1710 |   /// The function called after visiting ``ImportPathComponentSyntax`` and its descendants.
1711 |   ///   - node: the node we just finished visiting.
1712 |   open func visitPost(_ node: ImportPathComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1713 |   }
1714 |   
     :
1722 |   /// The function called after visiting ``InOutExprSyntax`` and its descendants.
1723 |   ///   - node: the node we just finished visiting.
1724 |   open func visitPost(_ node: InOutExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1725 |   }
1726 |   
     :
1734 |   /// The function called after visiting ``InfixOperatorExprSyntax`` and its descendants.
1735 |   ///   - node: the node we just finished visiting.
1736 |   open func visitPost(_ node: InfixOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1737 |   }
1738 |   
     :
1746 |   /// The function called after visiting ``InheritanceClauseSyntax`` and its descendants.
1747 |   ///   - node: the node we just finished visiting.
1748 |   open func visitPost(_ node: InheritanceClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1749 |   }
1750 |   
     :
1758 |   /// The function called after visiting ``InheritedTypeListSyntax`` and its descendants.
1759 |   ///   - node: the node we just finished visiting.
1760 |   open func visitPost(_ node: InheritedTypeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1761 |   }
1762 |   
     :
1770 |   /// The function called after visiting ``InheritedTypeSyntax`` and its descendants.
1771 |   ///   - node: the node we just finished visiting.
1772 |   open func visitPost(_ node: InheritedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1773 |   }
1774 |   
     :
1782 |   /// The function called after visiting ``InitializerClauseSyntax`` and its descendants.
1783 |   ///   - node: the node we just finished visiting.
1784 |   open func visitPost(_ node: InitializerClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1785 |   }
1786 |   
     :
1794 |   /// The function called after visiting ``InitializerDeclSyntax`` and its descendants.
1795 |   ///   - node: the node we just finished visiting.
1796 |   open func visitPost(_ node: InitializerDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1797 |   }
1798 |   
     :
1806 |   /// The function called after visiting ``IntegerLiteralExprSyntax`` and its descendants.
1807 |   ///   - node: the node we just finished visiting.
1808 |   open func visitPost(_ node: IntegerLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1809 |   }
1810 |   
     :
1818 |   /// The function called after visiting ``IsExprSyntax`` and its descendants.
1819 |   ///   - node: the node we just finished visiting.
1820 |   open func visitPost(_ node: IsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1821 |   }
1822 |   
     :
1830 |   /// The function called after visiting ``IsTypePatternSyntax`` and its descendants.
1831 |   ///   - node: the node we just finished visiting.
1832 |   open func visitPost(_ node: IsTypePatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1833 |   }
1834 |   
     :
1842 |   /// The function called after visiting ``KeyPathComponentListSyntax`` and its descendants.
1843 |   ///   - node: the node we just finished visiting.
1844 |   open func visitPost(_ node: KeyPathComponentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1845 |   }
1846 |   
     :
1854 |   /// The function called after visiting ``KeyPathComponentSyntax`` and its descendants.
1855 |   ///   - node: the node we just finished visiting.
1856 |   open func visitPost(_ node: KeyPathComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1857 |   }
1858 |   
     :
1866 |   /// The function called after visiting ``KeyPathExprSyntax`` and its descendants.
1867 |   ///   - node: the node we just finished visiting.
1868 |   open func visitPost(_ node: KeyPathExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1869 |   }
1870 |   
     :
1878 |   /// The function called after visiting ``KeyPathOptionalComponentSyntax`` and its descendants.
1879 |   ///   - node: the node we just finished visiting.
1880 |   open func visitPost(_ node: KeyPathOptionalComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1881 |   }
1882 |   
     :
1890 |   /// The function called after visiting ``KeyPathPropertyComponentSyntax`` and its descendants.
1891 |   ///   - node: the node we just finished visiting.
1892 |   open func visitPost(_ node: KeyPathPropertyComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1893 |   }
1894 |   
     :
1902 |   /// The function called after visiting ``KeyPathSubscriptComponentSyntax`` and its descendants.
1903 |   ///   - node: the node we just finished visiting.
1904 |   open func visitPost(_ node: KeyPathSubscriptComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1905 |   }
1906 |   
     :
1914 |   /// The function called after visiting ``LabeledExprListSyntax`` and its descendants.
1915 |   ///   - node: the node we just finished visiting.
1916 |   open func visitPost(_ node: LabeledExprListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1917 |   }
1918 |   
     :
1926 |   /// The function called after visiting ``LabeledExprSyntax`` and its descendants.
1927 |   ///   - node: the node we just finished visiting.
1928 |   open func visitPost(_ node: LabeledExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1929 |   }
1930 |   
     :
1938 |   /// The function called after visiting ``LabeledSpecializeArgumentSyntax`` and its descendants.
1939 |   ///   - node: the node we just finished visiting.
1940 |   open func visitPost(_ node: LabeledSpecializeArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1941 |   }
1942 |   
     :
1950 |   /// The function called after visiting ``LabeledStmtSyntax`` and its descendants.
1951 |   ///   - node: the node we just finished visiting.
1952 |   open func visitPost(_ node: LabeledStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1953 |   }
1954 |   
     :
1962 |   /// The function called after visiting ``LayoutRequirementSyntax`` and its descendants.
1963 |   ///   - node: the node we just finished visiting.
1964 |   open func visitPost(_ node: LayoutRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1965 |   }
1966 |   
     :
2028 |   /// The function called after visiting ``MacroDeclSyntax`` and its descendants.
2029 |   ///   - node: the node we just finished visiting.
2030 |   open func visitPost(_ node: MacroDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2031 |   }
2032 |   
     :
2040 |   /// The function called after visiting ``MacroExpansionDeclSyntax`` and its descendants.
2041 |   ///   - node: the node we just finished visiting.
2042 |   open func visitPost(_ node: MacroExpansionDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2043 |   }
2044 |   
     :
2052 |   /// The function called after visiting ``MacroExpansionExprSyntax`` and its descendants.
2053 |   ///   - node: the node we just finished visiting.
2054 |   open func visitPost(_ node: MacroExpansionExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2055 |   }
2056 |   
     :
2064 |   /// The function called after visiting ``MatchingPatternConditionSyntax`` and its descendants.
2065 |   ///   - node: the node we just finished visiting.
2066 |   open func visitPost(_ node: MatchingPatternConditionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2067 |   }
2068 |   
     :
2076 |   /// The function called after visiting ``MemberAccessExprSyntax`` and its descendants.
2077 |   ///   - node: the node we just finished visiting.
2078 |   open func visitPost(_ node: MemberAccessExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2079 |   }
2080 |   
     :
2088 |   /// The function called after visiting ``MemberBlockItemListSyntax`` and its descendants.
2089 |   ///   - node: the node we just finished visiting.
2090 |   open func visitPost(_ node: MemberBlockItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2091 |   }
2092 |   
     :
2100 |   /// The function called after visiting ``MemberBlockItemSyntax`` and its descendants.
2101 |   ///   - node: the node we just finished visiting.
2102 |   open func visitPost(_ node: MemberBlockItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2103 |   }
2104 |   
     :
2112 |   /// The function called after visiting ``MemberBlockSyntax`` and its descendants.
2113 |   ///   - node: the node we just finished visiting.
2114 |   open func visitPost(_ node: MemberBlockSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2115 |   }
2116 |   
     :
2124 |   /// The function called after visiting ``MemberTypeSyntax`` and its descendants.
2125 |   ///   - node: the node we just finished visiting.
2126 |   open func visitPost(_ node: MemberTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2127 |   }
2128 |   
     :
2136 |   /// The function called after visiting ``MetatypeTypeSyntax`` and its descendants.
2137 |   ///   - node: the node we just finished visiting.
2138 |   open func visitPost(_ node: MetatypeTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2139 |   }
2140 |   
     :
2148 |   /// The function called after visiting ``MissingDeclSyntax`` and its descendants.
2149 |   ///   - node: the node we just finished visiting.
2150 |   open func visitPost(_ node: MissingDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2151 |   }
2152 |   
     :
2160 |   /// The function called after visiting ``MissingExprSyntax`` and its descendants.
2161 |   ///   - node: the node we just finished visiting.
2162 |   open func visitPost(_ node: MissingExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2163 |   }
2164 |   
     :
2172 |   /// The function called after visiting ``MissingPatternSyntax`` and its descendants.
2173 |   ///   - node: the node we just finished visiting.
2174 |   open func visitPost(_ node: MissingPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2175 |   }
2176 |   
     :
2184 |   /// The function called after visiting ``MissingStmtSyntax`` and its descendants.
2185 |   ///   - node: the node we just finished visiting.
2186 |   open func visitPost(_ node: MissingStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2187 |   }
2188 |   
     :
2196 |   /// The function called after visiting ``MissingSyntax`` and its descendants.
2197 |   ///   - node: the node we just finished visiting.
2198 |   open func visitPost(_ node: MissingSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2199 |   }
2200 |   
     :
2208 |   /// The function called after visiting ``MissingTypeSyntax`` and its descendants.
2209 |   ///   - node: the node we just finished visiting.
2210 |   open func visitPost(_ node: MissingTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2211 |   }
2212 |   
     :
2220 |   /// The function called after visiting ``MultipleTrailingClosureElementListSyntax`` and its descendants.
2221 |   ///   - node: the node we just finished visiting.
2222 |   open func visitPost(_ node: MultipleTrailingClosureElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2223 |   }
2224 |   
     :
2232 |   /// The function called after visiting ``MultipleTrailingClosureElementSyntax`` and its descendants.
2233 |   ///   - node: the node we just finished visiting.
2234 |   open func visitPost(_ node: MultipleTrailingClosureElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2235 |   }
2236 |   
     :
2244 |   /// The function called after visiting ``NamedOpaqueReturnTypeSyntax`` and its descendants.
2245 |   ///   - node: the node we just finished visiting.
2246 |   open func visitPost(_ node: NamedOpaqueReturnTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2247 |   }
2248 |   
     :
2256 |   /// The function called after visiting ``NilLiteralExprSyntax`` and its descendants.
2257 |   ///   - node: the node we just finished visiting.
2258 |   open func visitPost(_ node: NilLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2259 |   }
2260 |   
     :
2268 |   /// The function called after visiting ``ObjCSelectorPieceListSyntax`` and its descendants.
2269 |   ///   - node: the node we just finished visiting.
2270 |   open func visitPost(_ node: ObjCSelectorPieceListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2271 |   }
2272 |   
     :
2280 |   /// The function called after visiting ``ObjCSelectorPieceSyntax`` and its descendants.
2281 |   ///   - node: the node we just finished visiting.
2282 |   open func visitPost(_ node: ObjCSelectorPieceSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2283 |   }
2284 |   
     :
2292 |   /// The function called after visiting ``OpaqueReturnTypeOfAttributeArgumentsSyntax`` and its descendants.
2293 |   ///   - node: the node we just finished visiting.
2294 |   open func visitPost(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2295 |   }
2296 |   
     :
2304 |   /// The function called after visiting ``OperatorDeclSyntax`` and its descendants.
2305 |   ///   - node: the node we just finished visiting.
2306 |   open func visitPost(_ node: OperatorDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2307 |   }
2308 |   
     :
2316 |   /// The function called after visiting ``OperatorPrecedenceAndTypesSyntax`` and its descendants.
2317 |   ///   - node: the node we just finished visiting.
2318 |   open func visitPost(_ node: OperatorPrecedenceAndTypesSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2319 |   }
2320 |   
     :
2328 |   /// The function called after visiting ``OptionalBindingConditionSyntax`` and its descendants.
2329 |   ///   - node: the node we just finished visiting.
2330 |   open func visitPost(_ node: OptionalBindingConditionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2331 |   }
2332 |   
     :
2340 |   /// The function called after visiting ``OptionalChainingExprSyntax`` and its descendants.
2341 |   ///   - node: the node we just finished visiting.
2342 |   open func visitPost(_ node: OptionalChainingExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2343 |   }
2344 |   
     :
2352 |   /// The function called after visiting ``OptionalTypeSyntax`` and its descendants.
2353 |   ///   - node: the node we just finished visiting.
2354 |   open func visitPost(_ node: OptionalTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2355 |   }
2356 |   
     :
2364 |   /// The function called after visiting ``OriginallyDefinedInAttributeArgumentsSyntax`` and its descendants.
2365 |   ///   - node: the node we just finished visiting.
2366 |   open func visitPost(_ node: OriginallyDefinedInAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2367 |   }
2368 |   
     :
2376 |   /// The function called after visiting ``PackElementExprSyntax`` and its descendants.
2377 |   ///   - node: the node we just finished visiting.
2378 |   open func visitPost(_ node: PackElementExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2379 |   }
2380 |   
     :
2388 |   /// The function called after visiting ``PackElementTypeSyntax`` and its descendants.
2389 |   ///   - node: the node we just finished visiting.
2390 |   open func visitPost(_ node: PackElementTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2391 |   }
2392 |   
     :
2400 |   /// The function called after visiting ``PackExpansionExprSyntax`` and its descendants.
2401 |   ///   - node: the node we just finished visiting.
2402 |   open func visitPost(_ node: PackExpansionExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2403 |   }
2404 |   
     :
2412 |   /// The function called after visiting ``PackExpansionTypeSyntax`` and its descendants.
2413 |   ///   - node: the node we just finished visiting.
2414 |   open func visitPost(_ node: PackExpansionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2415 |   }
2416 |   
     :
2424 |   /// The function called after visiting ``PatternBindingListSyntax`` and its descendants.
2425 |   ///   - node: the node we just finished visiting.
2426 |   open func visitPost(_ node: PatternBindingListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2427 |   }
2428 |   
     :
2436 |   /// The function called after visiting ``PatternBindingSyntax`` and its descendants.
2437 |   ///   - node: the node we just finished visiting.
2438 |   open func visitPost(_ node: PatternBindingSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2439 |   }
2440 |   
     :
2448 |   /// The function called after visiting ``PatternExprSyntax`` and its descendants.
2449 |   ///   - node: the node we just finished visiting.
2450 |   open func visitPost(_ node: PatternExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2451 |   }
2452 |   
     :
2460 |   /// The function called after visiting ``PlatformVersionItemListSyntax`` and its descendants.
2461 |   ///   - node: the node we just finished visiting.
2462 |   open func visitPost(_ node: PlatformVersionItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2463 |   }
2464 |   
     :
2472 |   /// The function called after visiting ``PlatformVersionItemSyntax`` and its descendants.
2473 |   ///   - node: the node we just finished visiting.
2474 |   open func visitPost(_ node: PlatformVersionItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2475 |   }
2476 |   
     :
2484 |   /// The function called after visiting ``PlatformVersionSyntax`` and its descendants.
2485 |   ///   - node: the node we just finished visiting.
2486 |   open func visitPost(_ node: PlatformVersionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2487 |   }
2488 |   
     :
2496 |   /// The function called after visiting ``PostfixIfConfigExprSyntax`` and its descendants.
2497 |   ///   - node: the node we just finished visiting.
2498 |   open func visitPost(_ node: PostfixIfConfigExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2499 |   }
2500 |   
     :
2508 |   /// The function called after visiting ``PostfixOperatorExprSyntax`` and its descendants.
2509 |   ///   - node: the node we just finished visiting.
2510 |   open func visitPost(_ node: PostfixOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2511 |   }
2512 |   
     :
2520 |   /// The function called after visiting ``PoundSourceLocationArgumentsSyntax`` and its descendants.
2521 |   ///   - node: the node we just finished visiting.
2522 |   open func visitPost(_ node: PoundSourceLocationArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2523 |   }
2524 |   
     :
2532 |   /// The function called after visiting ``PoundSourceLocationSyntax`` and its descendants.
2533 |   ///   - node: the node we just finished visiting.
2534 |   open func visitPost(_ node: PoundSourceLocationSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2535 |   }
2536 |   
     :
2544 |   /// The function called after visiting ``PrecedenceGroupAssignmentSyntax`` and its descendants.
2545 |   ///   - node: the node we just finished visiting.
2546 |   open func visitPost(_ node: PrecedenceGroupAssignmentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2547 |   }
2548 |   
     :
2556 |   /// The function called after visiting ``PrecedenceGroupAssociativitySyntax`` and its descendants.
2557 |   ///   - node: the node we just finished visiting.
2558 |   open func visitPost(_ node: PrecedenceGroupAssociativitySyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2559 |   }
2560 |   
     :
2568 |   /// The function called after visiting ``PrecedenceGroupAttributeListSyntax`` and its descendants.
2569 |   ///   - node: the node we just finished visiting.
2570 |   open func visitPost(_ node: PrecedenceGroupAttributeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2571 |   }
2572 |   
     :
2580 |   /// The function called after visiting ``PrecedenceGroupDeclSyntax`` and its descendants.
2581 |   ///   - node: the node we just finished visiting.
2582 |   open func visitPost(_ node: PrecedenceGroupDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2583 |   }
2584 |   
     :
2592 |   /// The function called after visiting ``PrecedenceGroupNameListSyntax`` and its descendants.
2593 |   ///   - node: the node we just finished visiting.
2594 |   open func visitPost(_ node: PrecedenceGroupNameListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2595 |   }
2596 |   
     :
2604 |   /// The function called after visiting ``PrecedenceGroupNameSyntax`` and its descendants.
2605 |   ///   - node: the node we just finished visiting.
2606 |   open func visitPost(_ node: PrecedenceGroupNameSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2607 |   }
2608 |   
     :
2616 |   /// The function called after visiting ``PrecedenceGroupRelationSyntax`` and its descendants.
2617 |   ///   - node: the node we just finished visiting.
2618 |   open func visitPost(_ node: PrecedenceGroupRelationSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2619 |   }
2620 |   
     :
2628 |   /// The function called after visiting ``PrefixOperatorExprSyntax`` and its descendants.
2629 |   ///   - node: the node we just finished visiting.
2630 |   open func visitPost(_ node: PrefixOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2631 |   }
2632 |   
     :
2640 |   /// The function called after visiting ``PrimaryAssociatedTypeClauseSyntax`` and its descendants.
2641 |   ///   - node: the node we just finished visiting.
2642 |   open func visitPost(_ node: PrimaryAssociatedTypeClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2643 |   }
2644 |   
     :
2652 |   /// The function called after visiting ``PrimaryAssociatedTypeListSyntax`` and its descendants.
2653 |   ///   - node: the node we just finished visiting.
2654 |   open func visitPost(_ node: PrimaryAssociatedTypeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2655 |   }
2656 |   
     :
2664 |   /// The function called after visiting ``PrimaryAssociatedTypeSyntax`` and its descendants.
2665 |   ///   - node: the node we just finished visiting.
2666 |   open func visitPost(_ node: PrimaryAssociatedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2667 |   }
2668 |   
     :
2676 |   /// The function called after visiting ``ProtocolDeclSyntax`` and its descendants.
2677 |   ///   - node: the node we just finished visiting.
2678 |   open func visitPost(_ node: ProtocolDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2679 |   }
2680 |   
     :
2688 |   /// The function called after visiting ``RegexLiteralExprSyntax`` and its descendants.
2689 |   ///   - node: the node we just finished visiting.
2690 |   open func visitPost(_ node: RegexLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2691 |   }
2692 |   
     :
2700 |   /// The function called after visiting ``RepeatStmtSyntax`` and its descendants.
2701 |   ///   - node: the node we just finished visiting.
2702 |   open func visitPost(_ node: RepeatStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2703 |   }
2704 |   
     :
2712 |   /// The function called after visiting ``ReturnClauseSyntax`` and its descendants.
2713 |   ///   - node: the node we just finished visiting.
2714 |   open func visitPost(_ node: ReturnClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2715 |   }
2716 |   
     :
2724 |   /// The function called after visiting ``ReturnStmtSyntax`` and its descendants.
2725 |   ///   - node: the node we just finished visiting.
2726 |   open func visitPost(_ node: ReturnStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2727 |   }
2728 |   
     :
2736 |   /// The function called after visiting ``SameTypeRequirementSyntax`` and its descendants.
2737 |   ///   - node: the node we just finished visiting.
2738 |   open func visitPost(_ node: SameTypeRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2739 |   }
2740 |   
     :
2748 |   /// The function called after visiting ``SequenceExprSyntax`` and its descendants.
2749 |   ///   - node: the node we just finished visiting.
2750 |   open func visitPost(_ node: SequenceExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2751 |   }
2752 |   
     :
2760 |   /// The function called after visiting ``SimpleStringLiteralExprSyntax`` and its descendants.
2761 |   ///   - node: the node we just finished visiting.
2762 |   open func visitPost(_ node: SimpleStringLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2763 |   }
2764 |   
     :
2772 |   /// The function called after visiting ``SimpleStringLiteralSegmentListSyntax`` and its descendants.
2773 |   ///   - node: the node we just finished visiting.
2774 |   open func visitPost(_ node: SimpleStringLiteralSegmentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2775 |   }
2776 |   
     :
2784 |   /// The function called after visiting ``SimpleTypeSpecifierSyntax`` and its descendants.
2785 |   ///   - node: the node we just finished visiting.
2786 |   open func visitPost(_ node: SimpleTypeSpecifierSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2787 |   }
2788 |   
     :
2796 |   /// The function called after visiting ``SomeOrAnyTypeSyntax`` and its descendants.
2797 |   ///   - node: the node we just finished visiting.
2798 |   open func visitPost(_ node: SomeOrAnyTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2799 |   }
2800 |   
     :
2808 |   /// The function called after visiting ``SourceFileSyntax`` and its descendants.
2809 |   ///   - node: the node we just finished visiting.
2810 |   open func visitPost(_ node: SourceFileSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2811 |   }
2812 |   
     :
2820 |   /// The function called after visiting ``SpecializeAttributeArgumentListSyntax`` and its descendants.
2821 |   ///   - node: the node we just finished visiting.
2822 |   open func visitPost(_ node: SpecializeAttributeArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2823 |   }
2824 |   
     :
2832 |   /// The function called after visiting ``SpecializeAvailabilityArgumentSyntax`` and its descendants.
2833 |   ///   - node: the node we just finished visiting.
2834 |   open func visitPost(_ node: SpecializeAvailabilityArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2835 |   }
2836 |   
     :
2844 |   /// The function called after visiting ``SpecializeTargetFunctionArgumentSyntax`` and its descendants.
2845 |   ///   - node: the node we just finished visiting.
2846 |   open func visitPost(_ node: SpecializeTargetFunctionArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2847 |   }
2848 |   
     :
2856 |   /// The function called after visiting ``StringLiteralExprSyntax`` and its descendants.
2857 |   ///   - node: the node we just finished visiting.
2858 |   open func visitPost(_ node: StringLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2859 |   }
2860 |   
     :
2868 |   /// The function called after visiting ``StringLiteralSegmentListSyntax`` and its descendants.
2869 |   ///   - node: the node we just finished visiting.
2870 |   open func visitPost(_ node: StringLiteralSegmentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2871 |   }
2872 |   
     :
2880 |   /// The function called after visiting ``StringSegmentSyntax`` and its descendants.
2881 |   ///   - node: the node we just finished visiting.
2882 |   open func visitPost(_ node: StringSegmentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2883 |   }
2884 |   
     :
2892 |   /// The function called after visiting ``StructDeclSyntax`` and its descendants.
2893 |   ///   - node: the node we just finished visiting.
2894 |   open func visitPost(_ node: StructDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2895 |   }
2896 |   
     :
2904 |   /// The function called after visiting ``SubscriptCallExprSyntax`` and its descendants.
2905 |   ///   - node: the node we just finished visiting.
2906 |   open func visitPost(_ node: SubscriptCallExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2907 |   }
2908 |   
     :
2916 |   /// The function called after visiting ``SubscriptDeclSyntax`` and its descendants.
2917 |   ///   - node: the node we just finished visiting.
2918 |   open func visitPost(_ node: SubscriptDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2919 |   }
2920 |   
     :
2928 |   /// The function called after visiting ``SuperExprSyntax`` and its descendants.
2929 |   ///   - node: the node we just finished visiting.
2930 |   open func visitPost(_ node: SuperExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2931 |   }
2932 |   
     :
2940 |   /// The function called after visiting ``SuppressedTypeSyntax`` and its descendants.
2941 |   ///   - node: the node we just finished visiting.
2942 |   open func visitPost(_ node: SuppressedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2943 |   }
2944 |   
     :
2952 |   /// The function called after visiting ``SwitchCaseItemListSyntax`` and its descendants.
2953 |   ///   - node: the node we just finished visiting.
2954 |   open func visitPost(_ node: SwitchCaseItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2955 |   }
2956 |   
     :
2964 |   /// The function called after visiting ``SwitchCaseItemSyntax`` and its descendants.
2965 |   ///   - node: the node we just finished visiting.
2966 |   open func visitPost(_ node: SwitchCaseItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2967 |   }
2968 |   
     :
2976 |   /// The function called after visiting ``SwitchCaseLabelSyntax`` and its descendants.
2977 |   ///   - node: the node we just finished visiting.
2978 |   open func visitPost(_ node: SwitchCaseLabelSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2979 |   }
2980 |   
     :
2988 |   /// The function called after visiting ``SwitchCaseListSyntax`` and its descendants.
2989 |   ///   - node: the node we just finished visiting.
2990 |   open func visitPost(_ node: SwitchCaseListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2991 |   }
2992 |   
     :
3000 |   /// The function called after visiting ``SwitchCaseSyntax`` and its descendants.
3001 |   ///   - node: the node we just finished visiting.
3002 |   open func visitPost(_ node: SwitchCaseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3003 |   }
3004 |   
     :
3012 |   /// The function called after visiting ``SwitchDefaultLabelSyntax`` and its descendants.
3013 |   ///   - node: the node we just finished visiting.
3014 |   open func visitPost(_ node: SwitchDefaultLabelSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3015 |   }
3016 |   
     :
3024 |   /// The function called after visiting ``SwitchExprSyntax`` and its descendants.
3025 |   ///   - node: the node we just finished visiting.
3026 |   open func visitPost(_ node: SwitchExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3027 |   }
3028 |   
     :
3036 |   /// The function called after visiting ``TernaryExprSyntax`` and its descendants.
3037 |   ///   - node: the node we just finished visiting.
3038 |   open func visitPost(_ node: TernaryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3039 |   }
3040 |   
     :
3066 |   /// The function called after visiting ``ThrowStmtSyntax`` and its descendants.
3067 |   ///   - node: the node we just finished visiting.
3068 |   open func visitPost(_ node: ThrowStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3069 |   }
3070 |   
     :
3078 |   /// The function called after visiting ``ThrowsClauseSyntax`` and its descendants.
3079 |   ///   - node: the node we just finished visiting.
3080 |   open func visitPost(_ node: ThrowsClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3081 |   }
3082 |   
     :
3090 |   /// The function called after visiting ``TryExprSyntax`` and its descendants.
3091 |   ///   - node: the node we just finished visiting.
3092 |   open func visitPost(_ node: TryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3093 |   }
3094 |   
     :
3102 |   /// The function called after visiting ``TupleExprSyntax`` and its descendants.
3103 |   ///   - node: the node we just finished visiting.
3104 |   open func visitPost(_ node: TupleExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3105 |   }
3106 |   
     :
3114 |   /// The function called after visiting ``TuplePatternElementListSyntax`` and its descendants.
3115 |   ///   - node: the node we just finished visiting.
3116 |   open func visitPost(_ node: TuplePatternElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3117 |   }
3118 |   
     :
3126 |   /// The function called after visiting ``TuplePatternElementSyntax`` and its descendants.
3127 |   ///   - node: the node we just finished visiting.
3128 |   open func visitPost(_ node: TuplePatternElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3129 |   }
3130 |   
     :
3138 |   /// The function called after visiting ``TuplePatternSyntax`` and its descendants.
3139 |   ///   - node: the node we just finished visiting.
3140 |   open func visitPost(_ node: TuplePatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3141 |   }
3142 |   
     :
3150 |   /// The function called after visiting ``TupleTypeElementListSyntax`` and its descendants.
3151 |   ///   - node: the node we just finished visiting.
3152 |   open func visitPost(_ node: TupleTypeElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3153 |   }
3154 |   
     :
3162 |   /// The function called after visiting ``TupleTypeElementSyntax`` and its descendants.
3163 |   ///   - node: the node we just finished visiting.
3164 |   open func visitPost(_ node: TupleTypeElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3165 |   }
3166 |   
     :
3174 |   /// The function called after visiting ``TupleTypeSyntax`` and its descendants.
3175 |   ///   - node: the node we just finished visiting.
3176 |   open func visitPost(_ node: TupleTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3177 |   }
3178 |   
     :
3186 |   /// The function called after visiting ``TypeAliasDeclSyntax`` and its descendants.
3187 |   ///   - node: the node we just finished visiting.
3188 |   open func visitPost(_ node: TypeAliasDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3189 |   }
3190 |   
     :
3198 |   /// The function called after visiting ``TypeAnnotationSyntax`` and its descendants.
3199 |   ///   - node: the node we just finished visiting.
3200 |   open func visitPost(_ node: TypeAnnotationSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3201 |   }
3202 |   
     :
3210 |   /// The function called after visiting ``TypeEffectSpecifiersSyntax`` and its descendants.
3211 |   ///   - node: the node we just finished visiting.
3212 |   open func visitPost(_ node: TypeEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3213 |   }
3214 |   
     :
3222 |   /// The function called after visiting ``TypeExprSyntax`` and its descendants.
3223 |   ///   - node: the node we just finished visiting.
3224 |   open func visitPost(_ node: TypeExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3225 |   }
3226 |   
     :
3234 |   /// The function called after visiting ``TypeInitializerClauseSyntax`` and its descendants.
3235 |   ///   - node: the node we just finished visiting.
3236 |   open func visitPost(_ node: TypeInitializerClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3237 |   }
3238 |   
     :
3246 |   /// The function called after visiting ``TypeSpecifierListSyntax`` and its descendants.
3247 |   ///   - node: the node we just finished visiting.
3248 |   open func visitPost(_ node: TypeSpecifierListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3249 |   }
3250 |   
     :
3258 |   /// The function called after visiting ``UnavailableFromAsyncAttributeArgumentsSyntax`` and its descendants.
3259 |   ///   - node: the node we just finished visiting.
3260 |   open func visitPost(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3261 |   }
3262 |   
     :
3270 |   /// The function called after visiting ``UnderscorePrivateAttributeArgumentsSyntax`` and its descendants.
3271 |   ///   - node: the node we just finished visiting.
3272 |   open func visitPost(_ node: UnderscorePrivateAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3273 |   }
3274 |   
     :
3282 |   /// The function called after visiting ``UnexpectedNodesSyntax`` and its descendants.
3283 |   ///   - node: the node we just finished visiting.
3284 |   open func visitPost(_ node: UnexpectedNodesSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3285 |   }
3286 |   
     :
3294 |   /// The function called after visiting ``UnresolvedAsExprSyntax`` and its descendants.
3295 |   ///   - node: the node we just finished visiting.
3296 |   open func visitPost(_ node: UnresolvedAsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3297 |   }
3298 |   
     :
3306 |   /// The function called after visiting ``UnresolvedIsExprSyntax`` and its descendants.
3307 |   ///   - node: the node we just finished visiting.
3308 |   open func visitPost(_ node: UnresolvedIsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3309 |   }
3310 |   
     :
3318 |   /// The function called after visiting ``UnresolvedTernaryExprSyntax`` and its descendants.
3319 |   ///   - node: the node we just finished visiting.
3320 |   open func visitPost(_ node: UnresolvedTernaryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3321 |   }
3322 |   
     :
3330 |   /// The function called after visiting ``ValueBindingPatternSyntax`` and its descendants.
3331 |   ///   - node: the node we just finished visiting.
3332 |   open func visitPost(_ node: ValueBindingPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3333 |   }
3334 |   
     :
3342 |   /// The function called after visiting ``VariableDeclSyntax`` and its descendants.
3343 |   ///   - node: the node we just finished visiting.
3344 |   open func visitPost(_ node: VariableDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3345 |   }
3346 |   
     :
3354 |   /// The function called after visiting ``VersionComponentListSyntax`` and its descendants.
3355 |   ///   - node: the node we just finished visiting.
3356 |   open func visitPost(_ node: VersionComponentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3357 |   }
3358 |   
     :
3366 |   /// The function called after visiting ``VersionComponentSyntax`` and its descendants.
3367 |   ///   - node: the node we just finished visiting.
3368 |   open func visitPost(_ node: VersionComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3369 |   }
3370 |   
     :
3378 |   /// The function called after visiting ``VersionTupleSyntax`` and its descendants.
3379 |   ///   - node: the node we just finished visiting.
3380 |   open func visitPost(_ node: VersionTupleSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3381 |   }
3382 |   
     :
3390 |   /// The function called after visiting ``WhereClauseSyntax`` and its descendants.
3391 |   ///   - node: the node we just finished visiting.
3392 |   open func visitPost(_ node: WhereClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3393 |   }
3394 |   
     :
3402 |   /// The function called after visiting ``WhileStmtSyntax`` and its descendants.
3403 |   ///   - node: the node we just finished visiting.
3404 |   open func visitPost(_ node: WhileStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3405 |   }
3406 |   
     :
3414 |   /// The function called after visiting ``WildcardPatternSyntax`` and its descendants.
3415 |   ///   - node: the node we just finished visiting.
3416 |   open func visitPost(_ node: WildcardPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3417 |   }
3418 |   
     :
3426 |   /// The function called after visiting ``YieldStmtSyntax`` and its descendants.
3427 |   ///   - node: the node we just finished visiting.
3428 |   open func visitPost(_ node: YieldStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3429 |   }
3430 |   
     :
3438 |   /// The function called after visiting ``YieldedExpressionListSyntax`` and its descendants.
3439 |   ///   - node: the node we just finished visiting.
3440 |   open func visitPost(_ node: YieldedExpressionListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3441 |   }
3442 |   
     :
3450 |   /// The function called after visiting ``YieldedExpressionSyntax`` and its descendants.
3451 |   ///   - node: the node we just finished visiting.
3452 |   open func visitPost(_ node: YieldedExpressionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3453 |   }
3454 |   
     :
3462 |   /// The function called after visiting ``YieldedExpressionsClauseSyntax`` and its descendants.
3463 |   ///   - node: the node we just finished visiting.
3464 |   open func visitPost(_ node: YieldedExpressionsClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3465 |   }
3466 |   
     :
3474 |   /// The function called after visiting the node and its descendants.
3475 |   ///   - node: the node we just finished visiting.
3476 |   open func visitPost(_ node: TokenSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3477 |   }
3478 |   

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:710:19: error: method does not override any method from its superclass
708 |     }
709 | 
710 |     override func visit(_ token: TokenSyntax) -> Syntax {
    |                   `- error: method does not override any method from its superclass
711 |         currentIndex += 1
712 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift:50:13: note: potential overridden instance method 'visit' here
  48 |   ///   - Parameter node: the node that is being visited
  49 |   ///   - Returns: the rewritten node
  50 |   open func visit(_ token: TokenSyntax) -> TokenSyntax {
     |             `- note: potential overridden instance method 'visit' here
  51 |     return token
  52 |   }
     :
  77 |   ///   - Returns: the rewritten node
  78 |   @available(*, deprecated, renamed: "rewrite(_:detach:)")
  79 |   public func visit(_ node: Syntax) -> Syntax {
     |               `- note: potential overridden instance method 'visit' here
  80 |     var rewritten = node
  81 |     dispatchVisit(&rewritten)
     :
  92 |   ///   - Parameter node: the node that is being visited
  93 |   ///   - Returns: the rewritten node
  94 |   open func visit(_ node: AccessorBlockSyntax) -> AccessorBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
  95 |     return visitChildren(node._syntaxNode).cast(AccessorBlockSyntax.self)
  96 |   }
     :
  99 |   ///   - Parameter node: the node that is being visited
 100 |   ///   - Returns: the rewritten node
 101 |   open func visit(_ node: AccessorDeclListSyntax) -> AccessorDeclListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 102 |     return visitChildren(node._syntaxNode).cast(AccessorDeclListSyntax.self)
 103 |   }
     :
 106 |   ///   - Parameter node: the node that is being visited
 107 |   ///   - Returns: the rewritten node
 108 |   open func visit(_ node: AccessorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 109 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AccessorDeclSyntax.self))
 110 |   }
     :
 113 |   ///   - Parameter node: the node that is being visited
 114 |   ///   - Returns: the rewritten node
 115 |   open func visit(_ node: AccessorEffectSpecifiersSyntax) -> AccessorEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 116 |     return visitChildren(node._syntaxNode).cast(AccessorEffectSpecifiersSyntax.self)
 117 |   }
     :
 120 |   ///   - Parameter node: the node that is being visited
 121 |   ///   - Returns: the rewritten node
 122 |   open func visit(_ node: AccessorParametersSyntax) -> AccessorParametersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 123 |     return visitChildren(node._syntaxNode).cast(AccessorParametersSyntax.self)
 124 |   }
     :
 127 |   ///   - Parameter node: the node that is being visited
 128 |   ///   - Returns: the rewritten node
 129 |   open func visit(_ node: ActorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 130 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ActorDeclSyntax.self))
 131 |   }
     :
 134 |   ///   - Parameter node: the node that is being visited
 135 |   ///   - Returns: the rewritten node
 136 |   open func visit(_ node: ArrayElementListSyntax) -> ArrayElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 137 |     return visitChildren(node._syntaxNode).cast(ArrayElementListSyntax.self)
 138 |   }
     :
 141 |   ///   - Parameter node: the node that is being visited
 142 |   ///   - Returns: the rewritten node
 143 |   open func visit(_ node: ArrayElementSyntax) -> ArrayElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 144 |     return visitChildren(node._syntaxNode).cast(ArrayElementSyntax.self)
 145 |   }
     :
 148 |   ///   - Parameter node: the node that is being visited
 149 |   ///   - Returns: the rewritten node
 150 |   open func visit(_ node: ArrayExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 151 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrayExprSyntax.self))
 152 |   }
     :
 155 |   ///   - Parameter node: the node that is being visited
 156 |   ///   - Returns: the rewritten node
 157 |   open func visit(_ node: ArrayTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 158 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ArrayTypeSyntax.self))
 159 |   }
     :
 162 |   ///   - Parameter node: the node that is being visited
 163 |   ///   - Returns: the rewritten node
 164 |   open func visit(_ node: ArrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 165 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrowExprSyntax.self))
 166 |   }
     :
 169 |   ///   - Parameter node: the node that is being visited
 170 |   ///   - Returns: the rewritten node
 171 |   open func visit(_ node: AsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 172 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AsExprSyntax.self))
 173 |   }
     :
 176 |   ///   - Parameter node: the node that is being visited
 177 |   ///   - Returns: the rewritten node
 178 |   open func visit(_ node: AssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 179 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AssignmentExprSyntax.self))
 180 |   }
     :
 183 |   ///   - Parameter node: the node that is being visited
 184 |   ///   - Returns: the rewritten node
 185 |   open func visit(_ node: AssociatedTypeDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 186 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AssociatedTypeDeclSyntax.self))
 187 |   }
     :
 190 |   ///   - Parameter node: the node that is being visited
 191 |   ///   - Returns: the rewritten node
 192 |   open func visit(_ node: AttributeListSyntax) -> AttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 193 |     return visitChildren(node._syntaxNode).cast(AttributeListSyntax.self)
 194 |   }
     :
 197 |   ///   - Parameter node: the node that is being visited
 198 |   ///   - Returns: the rewritten node
 199 |   open func visit(_ node: AttributeSyntax) -> AttributeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 200 |     return visitChildren(node._syntaxNode).cast(AttributeSyntax.self)
 201 |   }
     :
 204 |   ///   - Parameter node: the node that is being visited
 205 |   ///   - Returns: the rewritten node
 206 |   open func visit(_ node: AttributedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 207 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(AttributedTypeSyntax.self))
 208 |   }
     :
 211 |   ///   - Parameter node: the node that is being visited
 212 |   ///   - Returns: the rewritten node
 213 |   open func visit(_ node: AvailabilityArgumentListSyntax) -> AvailabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 214 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentListSyntax.self)
 215 |   }
     :
 218 |   ///   - Parameter node: the node that is being visited
 219 |   ///   - Returns: the rewritten node
 220 |   open func visit(_ node: AvailabilityArgumentSyntax) -> AvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 221 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentSyntax.self)
 222 |   }
     :
 225 |   ///   - Parameter node: the node that is being visited
 226 |   ///   - Returns: the rewritten node
 227 |   open func visit(_ node: AvailabilityConditionSyntax) -> AvailabilityConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
 228 |     return visitChildren(node._syntaxNode).cast(AvailabilityConditionSyntax.self)
 229 |   }
     :
 232 |   ///   - Parameter node: the node that is being visited
 233 |   ///   - Returns: the rewritten node
 234 |   open func visit(_ node: AvailabilityLabeledArgumentSyntax) -> AvailabilityLabeledArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 235 |     return visitChildren(node._syntaxNode).cast(AvailabilityLabeledArgumentSyntax.self)
 236 |   }
     :
 239 |   ///   - Parameter node: the node that is being visited
 240 |   ///   - Returns: the rewritten node
 241 |   open func visit(_ node: AwaitExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 242 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AwaitExprSyntax.self))
 243 |   }
     :
 246 |   ///   - Parameter node: the node that is being visited
 247 |   ///   - Returns: the rewritten node
 248 |   open func visit(_ node: BackDeployedAttributeArgumentsSyntax) -> BackDeployedAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 249 |     return visitChildren(node._syntaxNode).cast(BackDeployedAttributeArgumentsSyntax.self)
 250 |   }
     :
 253 |   ///   - Parameter node: the node that is being visited
 254 |   ///   - Returns: the rewritten node
 255 |   open func visit(_ node: BinaryOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 256 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BinaryOperatorExprSyntax.self))
 257 |   }
     :
 260 |   ///   - Parameter node: the node that is being visited
 261 |   ///   - Returns: the rewritten node
 262 |   open func visit(_ node: BooleanLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 263 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BooleanLiteralExprSyntax.self))
 264 |   }
     :
 267 |   ///   - Parameter node: the node that is being visited
 268 |   ///   - Returns: the rewritten node
 269 |   open func visit(_ node: BorrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 270 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BorrowExprSyntax.self))
 271 |   }
     :
 274 |   ///   - Parameter node: the node that is being visited
 275 |   ///   - Returns: the rewritten node
 276 |   open func visit(_ node: BreakStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 277 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(BreakStmtSyntax.self))
 278 |   }
     :
 281 |   ///   - Parameter node: the node that is being visited
 282 |   ///   - Returns: the rewritten node
 283 |   open func visit(_ node: _CanImportExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 284 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportExprSyntax.self))
 285 |   }
     :
 288 |   ///   - Parameter node: the node that is being visited
 289 |   ///   - Returns: the rewritten node
 290 |   open func visit(_ node: _CanImportVersionInfoSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 291 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportVersionInfoSyntax.self))
 292 |   }
     :
 295 |   ///   - Parameter node: the node that is being visited
 296 |   ///   - Returns: the rewritten node
 297 |   open func visit(_ node: CatchClauseListSyntax) -> CatchClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 298 |     return visitChildren(node._syntaxNode).cast(CatchClauseListSyntax.self)
 299 |   }
     :
 302 |   ///   - Parameter node: the node that is being visited
 303 |   ///   - Returns: the rewritten node
 304 |   open func visit(_ node: CatchClauseSyntax) -> CatchClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 305 |     return visitChildren(node._syntaxNode).cast(CatchClauseSyntax.self)
 306 |   }
     :
 309 |   ///   - Parameter node: the node that is being visited
 310 |   ///   - Returns: the rewritten node
 311 |   open func visit(_ node: CatchItemListSyntax) -> CatchItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 312 |     return visitChildren(node._syntaxNode).cast(CatchItemListSyntax.self)
 313 |   }
     :
 316 |   ///   - Parameter node: the node that is being visited
 317 |   ///   - Returns: the rewritten node
 318 |   open func visit(_ node: CatchItemSyntax) -> CatchItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 319 |     return visitChildren(node._syntaxNode).cast(CatchItemSyntax.self)
 320 |   }
     :
 323 |   ///   - Parameter node: the node that is being visited
 324 |   ///   - Returns: the rewritten node
 325 |   open func visit(_ node: ClassDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 326 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ClassDeclSyntax.self))
 327 |   }
     :
 330 |   ///   - Parameter node: the node that is being visited
 331 |   ///   - Returns: the rewritten node
 332 |   open func visit(_ node: ClassRestrictionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 333 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ClassRestrictionTypeSyntax.self))
 334 |   }
     :
 337 |   ///   - Parameter node: the node that is being visited
 338 |   ///   - Returns: the rewritten node
 339 |   open func visit(_ node: ClosureCaptureClauseSyntax) -> ClosureCaptureClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 340 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureClauseSyntax.self)
 341 |   }
     :
 344 |   ///   - Parameter node: the node that is being visited
 345 |   ///   - Returns: the rewritten node
 346 |   open func visit(_ node: ClosureCaptureListSyntax) -> ClosureCaptureListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 347 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureListSyntax.self)
 348 |   }
     :
 351 |   ///   - Parameter node: the node that is being visited
 352 |   ///   - Returns: the rewritten node
 353 |   open func visit(_ node: ClosureCaptureSpecifierSyntax) -> ClosureCaptureSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 354 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSpecifierSyntax.self)
 355 |   }
     :
 358 |   ///   - Parameter node: the node that is being visited
 359 |   ///   - Returns: the rewritten node
 360 |   open func visit(_ node: ClosureCaptureSyntax) -> ClosureCaptureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 361 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSyntax.self)
 362 |   }
     :
 365 |   ///   - Parameter node: the node that is being visited
 366 |   ///   - Returns: the rewritten node
 367 |   open func visit(_ node: ClosureExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 368 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ClosureExprSyntax.self))
 369 |   }
     :
 372 |   ///   - Parameter node: the node that is being visited
 373 |   ///   - Returns: the rewritten node
 374 |   open func visit(_ node: ClosureParameterClauseSyntax) -> ClosureParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 375 |     return visitChildren(node._syntaxNode).cast(ClosureParameterClauseSyntax.self)
 376 |   }
     :
 379 |   ///   - Parameter node: the node that is being visited
 380 |   ///   - Returns: the rewritten node
 381 |   open func visit(_ node: ClosureParameterListSyntax) -> ClosureParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 382 |     return visitChildren(node._syntaxNode).cast(ClosureParameterListSyntax.self)
 383 |   }
     :
 386 |   ///   - Parameter node: the node that is being visited
 387 |   ///   - Returns: the rewritten node
 388 |   open func visit(_ node: ClosureParameterSyntax) -> ClosureParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 389 |     return visitChildren(node._syntaxNode).cast(ClosureParameterSyntax.self)
 390 |   }
     :
 393 |   ///   - Parameter node: the node that is being visited
 394 |   ///   - Returns: the rewritten node
 395 |   open func visit(_ node: ClosureShorthandParameterListSyntax) -> ClosureShorthandParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 396 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterListSyntax.self)
 397 |   }
     :
 400 |   ///   - Parameter node: the node that is being visited
 401 |   ///   - Returns: the rewritten node
 402 |   open func visit(_ node: ClosureShorthandParameterSyntax) -> ClosureShorthandParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 403 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterSyntax.self)
 404 |   }
     :
 407 |   ///   - Parameter node: the node that is being visited
 408 |   ///   - Returns: the rewritten node
 409 |   open func visit(_ node: ClosureSignatureSyntax) -> ClosureSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 410 |     return visitChildren(node._syntaxNode).cast(ClosureSignatureSyntax.self)
 411 |   }
     :
 414 |   ///   - Parameter node: the node that is being visited
 415 |   ///   - Returns: the rewritten node
 416 |   open func visit(_ node: CodeBlockItemListSyntax) -> CodeBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 417 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemListSyntax.self)
 418 |   }
     :
 421 |   ///   - Parameter node: the node that is being visited
 422 |   ///   - Returns: the rewritten node
 423 |   open func visit(_ node: CodeBlockItemSyntax) -> CodeBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 424 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemSyntax.self)
 425 |   }
     :
 428 |   ///   - Parameter node: the node that is being visited
 429 |   ///   - Returns: the rewritten node
 430 |   open func visit(_ node: CodeBlockSyntax) -> CodeBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
 431 |     return visitChildren(node._syntaxNode).cast(CodeBlockSyntax.self)
 432 |   }
     :
 435 |   ///   - Parameter node: the node that is being visited
 436 |   ///   - Returns: the rewritten node
 437 |   open func visit(_ node: CompositionTypeElementListSyntax) -> CompositionTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 438 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementListSyntax.self)
 439 |   }
     :
 442 |   ///   - Parameter node: the node that is being visited
 443 |   ///   - Returns: the rewritten node
 444 |   open func visit(_ node: CompositionTypeElementSyntax) -> CompositionTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 445 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementSyntax.self)
 446 |   }
     :
 449 |   ///   - Parameter node: the node that is being visited
 450 |   ///   - Returns: the rewritten node
 451 |   open func visit(_ node: CompositionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 452 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(CompositionTypeSyntax.self))
 453 |   }
     :
 456 |   ///   - Parameter node: the node that is being visited
 457 |   ///   - Returns: the rewritten node
 458 |   open func visit(_ node: ConditionElementListSyntax) -> ConditionElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 459 |     return visitChildren(node._syntaxNode).cast(ConditionElementListSyntax.self)
 460 |   }
     :
 463 |   ///   - Parameter node: the node that is being visited
 464 |   ///   - Returns: the rewritten node
 465 |   open func visit(_ node: ConditionElementSyntax) -> ConditionElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 466 |     return visitChildren(node._syntaxNode).cast(ConditionElementSyntax.self)
 467 |   }
     :
 470 |   ///   - Parameter node: the node that is being visited
 471 |   ///   - Returns: the rewritten node
 472 |   open func visit(_ node: ConformanceRequirementSyntax) -> ConformanceRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 473 |     return visitChildren(node._syntaxNode).cast(ConformanceRequirementSyntax.self)
 474 |   }
     :
 477 |   ///   - Parameter node: the node that is being visited
 478 |   ///   - Returns: the rewritten node
 479 |   open func visit(_ node: ConsumeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 480 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ConsumeExprSyntax.self))
 481 |   }
     :
 484 |   ///   - Parameter node: the node that is being visited
 485 |   ///   - Returns: the rewritten node
 486 |   open func visit(_ node: ContinueStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 487 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ContinueStmtSyntax.self))
 488 |   }
     :
 491 |   ///   - Parameter node: the node that is being visited
 492 |   ///   - Returns: the rewritten node
 493 |   open func visit(_ node: ConventionAttributeArgumentsSyntax) -> ConventionAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 494 |     return visitChildren(node._syntaxNode).cast(ConventionAttributeArgumentsSyntax.self)
 495 |   }
     :
 498 |   ///   - Parameter node: the node that is being visited
 499 |   ///   - Returns: the rewritten node
 500 |   open func visit(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) -> ConventionWitnessMethodAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 501 |     return visitChildren(node._syntaxNode).cast(ConventionWitnessMethodAttributeArgumentsSyntax.self)
 502 |   }
     :
 505 |   ///   - Parameter node: the node that is being visited
 506 |   ///   - Returns: the rewritten node
 507 |   open func visit(_ node: CopyExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 508 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(CopyExprSyntax.self))
 509 |   }
     :
 512 |   ///   - Parameter node: the node that is being visited
 513 |   ///   - Returns: the rewritten node
 514 |   open func visit(_ node: DeclModifierDetailSyntax) -> DeclModifierDetailSyntax {
     |             `- note: potential overridden instance method 'visit' here
 515 |     return visitChildren(node._syntaxNode).cast(DeclModifierDetailSyntax.self)
 516 |   }
     :
 519 |   ///   - Parameter node: the node that is being visited
 520 |   ///   - Returns: the rewritten node
 521 |   open func visit(_ node: DeclModifierListSyntax) -> DeclModifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 522 |     return visitChildren(node._syntaxNode).cast(DeclModifierListSyntax.self)
 523 |   }
     :
 526 |   ///   - Parameter node: the node that is being visited
 527 |   ///   - Returns: the rewritten node
 528 |   open func visit(_ node: DeclModifierSyntax) -> DeclModifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 529 |     return visitChildren(node._syntaxNode).cast(DeclModifierSyntax.self)
 530 |   }
     :
 533 |   ///   - Parameter node: the node that is being visited
 534 |   ///   - Returns: the rewritten node
 535 |   open func visit(_ node: DeclNameArgumentListSyntax) -> DeclNameArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 536 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentListSyntax.self)
 537 |   }
     :
 540 |   ///   - Parameter node: the node that is being visited
 541 |   ///   - Returns: the rewritten node
 542 |   open func visit(_ node: DeclNameArgumentSyntax) -> DeclNameArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 543 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentSyntax.self)
 544 |   }
     :
 547 |   ///   - Parameter node: the node that is being visited
 548 |   ///   - Returns: the rewritten node
 549 |   open func visit(_ node: DeclNameArgumentsSyntax) -> DeclNameArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 550 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentsSyntax.self)
 551 |   }
     :
 554 |   ///   - Parameter node: the node that is being visited
 555 |   ///   - Returns: the rewritten node
 556 |   open func visit(_ node: DeclReferenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 557 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DeclReferenceExprSyntax.self))
 558 |   }
     :
 561 |   ///   - Parameter node: the node that is being visited
 562 |   ///   - Returns: the rewritten node
 563 |   open func visit(_ node: DeferStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 564 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DeferStmtSyntax.self))
 565 |   }
     :
 568 |   ///   - Parameter node: the node that is being visited
 569 |   ///   - Returns: the rewritten node
 570 |   open func visit(_ node: DeinitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 571 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(DeinitializerDeclSyntax.self))
 572 |   }
     :
 575 |   ///   - Parameter node: the node that is being visited
 576 |   ///   - Returns: the rewritten node
 577 |   open func visit(_ node: DeinitializerEffectSpecifiersSyntax) -> DeinitializerEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 578 |     return visitChildren(node._syntaxNode).cast(DeinitializerEffectSpecifiersSyntax.self)
 579 |   }
     :
 582 |   ///   - Parameter node: the node that is being visited
 583 |   ///   - Returns: the rewritten node
 584 |   open func visit(_ node: DerivativeAttributeArgumentsSyntax) -> DerivativeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 585 |     return visitChildren(node._syntaxNode).cast(DerivativeAttributeArgumentsSyntax.self)
 586 |   }
     :
 589 |   ///   - Parameter node: the node that is being visited
 590 |   ///   - Returns: the rewritten node
 591 |   open func visit(_ node: DesignatedTypeListSyntax) -> DesignatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 592 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeListSyntax.self)
 593 |   }
     :
 596 |   ///   - Parameter node: the node that is being visited
 597 |   ///   - Returns: the rewritten node
 598 |   open func visit(_ node: DesignatedTypeSyntax) -> DesignatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 599 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeSyntax.self)
 600 |   }
     :
 603 |   ///   - Parameter node: the node that is being visited
 604 |   ///   - Returns: the rewritten node
 605 |   open func visit(_ node: DictionaryElementListSyntax) -> DictionaryElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 606 |     return visitChildren(node._syntaxNode).cast(DictionaryElementListSyntax.self)
 607 |   }
     :
 610 |   ///   - Parameter node: the node that is being visited
 611 |   ///   - Returns: the rewritten node
 612 |   open func visit(_ node: DictionaryElementSyntax) -> DictionaryElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 613 |     return visitChildren(node._syntaxNode).cast(DictionaryElementSyntax.self)
 614 |   }
     :
 617 |   ///   - Parameter node: the node that is being visited
 618 |   ///   - Returns: the rewritten node
 619 |   open func visit(_ node: DictionaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 620 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DictionaryExprSyntax.self))
 621 |   }
     :
 624 |   ///   - Parameter node: the node that is being visited
 625 |   ///   - Returns: the rewritten node
 626 |   open func visit(_ node: DictionaryTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 627 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(DictionaryTypeSyntax.self))
 628 |   }
     :
 631 |   ///   - Parameter node: the node that is being visited
 632 |   ///   - Returns: the rewritten node
 633 |   open func visit(_ node: DifferentiabilityArgumentListSyntax) -> DifferentiabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 634 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentListSyntax.self)
 635 |   }
     :
 638 |   ///   - Parameter node: the node that is being visited
 639 |   ///   - Returns: the rewritten node
 640 |   open func visit(_ node: DifferentiabilityArgumentSyntax) -> DifferentiabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 641 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentSyntax.self)
 642 |   }
     :
 645 |   ///   - Parameter node: the node that is being visited
 646 |   ///   - Returns: the rewritten node
 647 |   open func visit(_ node: DifferentiabilityArgumentsSyntax) -> DifferentiabilityArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 648 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentsSyntax.self)
 649 |   }
     :
 652 |   ///   - Parameter node: the node that is being visited
 653 |   ///   - Returns: the rewritten node
 654 |   open func visit(_ node: DifferentiabilityWithRespectToArgumentSyntax) -> DifferentiabilityWithRespectToArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 655 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityWithRespectToArgumentSyntax.self)
 656 |   }
     :
 659 |   ///   - Parameter node: the node that is being visited
 660 |   ///   - Returns: the rewritten node
 661 |   open func visit(_ node: DifferentiableAttributeArgumentsSyntax) -> DifferentiableAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 662 |     return visitChildren(node._syntaxNode).cast(DifferentiableAttributeArgumentsSyntax.self)
 663 |   }
     :
 666 |   ///   - Parameter node: the node that is being visited
 667 |   ///   - Returns: the rewritten node
 668 |   open func visit(_ node: DiscardAssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 669 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DiscardAssignmentExprSyntax.self))
 670 |   }
     :
 673 |   ///   - Parameter node: the node that is being visited
 674 |   ///   - Returns: the rewritten node
 675 |   open func visit(_ node: DiscardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 676 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DiscardStmtSyntax.self))
 677 |   }
     :
 690 |   ///   - Parameter node: the node that is being visited
 691 |   ///   - Returns: the rewritten node
 692 |   open func visit(_ node: DoStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 693 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DoStmtSyntax.self))
 694 |   }
     :
 697 |   ///   - Parameter node: the node that is being visited
 698 |   ///   - Returns: the rewritten node
 699 |   open func visit(_ node: DocumentationAttributeArgumentListSyntax) -> DocumentationAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 700 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentListSyntax.self)
 701 |   }
     :
 704 |   ///   - Parameter node: the node that is being visited
 705 |   ///   - Returns: the rewritten node
 706 |   open func visit(_ node: DocumentationAttributeArgumentSyntax) -> DocumentationAttributeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 707 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentSyntax.self)
 708 |   }
     :
 711 |   ///   - Parameter node: the node that is being visited
 712 |   ///   - Returns: the rewritten node
 713 |   open func visit(_ node: DynamicReplacementAttributeArgumentsSyntax) -> DynamicReplacementAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 714 |     return visitChildren(node._syntaxNode).cast(DynamicReplacementAttributeArgumentsSyntax.self)
 715 |   }
     :
 718 |   ///   - Parameter node: the node that is being visited
 719 |   ///   - Returns: the rewritten node
 720 |   open func visit(_ node: EditorPlaceholderDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 721 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderDeclSyntax.self))
 722 |   }
     :
 725 |   ///   - Parameter node: the node that is being visited
 726 |   ///   - Returns: the rewritten node
 727 |   open func visit(_ node: EditorPlaceholderExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 728 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderExprSyntax.self))
 729 |   }
     :
 732 |   ///   - Parameter node: the node that is being visited
 733 |   ///   - Returns: the rewritten node
 734 |   open func visit(_ node: EffectsAttributeArgumentListSyntax) -> EffectsAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 735 |     return visitChildren(node._syntaxNode).cast(EffectsAttributeArgumentListSyntax.self)
 736 |   }
     :
 739 |   ///   - Parameter node: the node that is being visited
 740 |   ///   - Returns: the rewritten node
 741 |   open func visit(_ node: EnumCaseDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 742 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumCaseDeclSyntax.self))
 743 |   }
     :
 746 |   ///   - Parameter node: the node that is being visited
 747 |   ///   - Returns: the rewritten node
 748 |   open func visit(_ node: EnumCaseElementListSyntax) -> EnumCaseElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 749 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementListSyntax.self)
 750 |   }
     :
 753 |   ///   - Parameter node: the node that is being visited
 754 |   ///   - Returns: the rewritten node
 755 |   open func visit(_ node: EnumCaseElementSyntax) -> EnumCaseElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 756 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementSyntax.self)
 757 |   }
     :
 760 |   ///   - Parameter node: the node that is being visited
 761 |   ///   - Returns: the rewritten node
 762 |   open func visit(_ node: EnumCaseParameterClauseSyntax) -> EnumCaseParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 763 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterClauseSyntax.self)
 764 |   }
     :
 767 |   ///   - Parameter node: the node that is being visited
 768 |   ///   - Returns: the rewritten node
 769 |   open func visit(_ node: EnumCaseParameterListSyntax) -> EnumCaseParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 770 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterListSyntax.self)
 771 |   }
     :
 774 |   ///   - Parameter node: the node that is being visited
 775 |   ///   - Returns: the rewritten node
 776 |   open func visit(_ node: EnumCaseParameterSyntax) -> EnumCaseParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 777 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterSyntax.self)
 778 |   }
     :
 781 |   ///   - Parameter node: the node that is being visited
 782 |   ///   - Returns: the rewritten node
 783 |   open func visit(_ node: EnumDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 784 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumDeclSyntax.self))
 785 |   }
     :
 788 |   ///   - Parameter node: the node that is being visited
 789 |   ///   - Returns: the rewritten node
 790 |   open func visit(_ node: ExposeAttributeArgumentsSyntax) -> ExposeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 791 |     return visitChildren(node._syntaxNode).cast(ExposeAttributeArgumentsSyntax.self)
 792 |   }
     :
 795 |   ///   - Parameter node: the node that is being visited
 796 |   ///   - Returns: the rewritten node
 797 |   open func visit(_ node: ExprListSyntax) -> ExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 798 |     return visitChildren(node._syntaxNode).cast(ExprListSyntax.self)
 799 |   }
     :
 802 |   ///   - Parameter node: the node that is being visited
 803 |   ///   - Returns: the rewritten node
 804 |   open func visit(_ node: ExpressionPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 805 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ExpressionPatternSyntax.self))
 806 |   }
     :
 809 |   ///   - Parameter node: the node that is being visited
 810 |   ///   - Returns: the rewritten node
 811 |   open func visit(_ node: ExpressionSegmentSyntax) -> ExpressionSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 812 |     return visitChildren(node._syntaxNode).cast(ExpressionSegmentSyntax.self)
 813 |   }
     :
 816 |   ///   - Parameter node: the node that is being visited
 817 |   ///   - Returns: the rewritten node
 818 |   open func visit(_ node: ExpressionStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 819 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ExpressionStmtSyntax.self))
 820 |   }
     :
 823 |   ///   - Parameter node: the node that is being visited
 824 |   ///   - Returns: the rewritten node
 825 |   open func visit(_ node: ExtensionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 826 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ExtensionDeclSyntax.self))
 827 |   }
     :
 830 |   ///   - Parameter node: the node that is being visited
 831 |   ///   - Returns: the rewritten node
 832 |   open func visit(_ node: FallThroughStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 833 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(FallThroughStmtSyntax.self))
 834 |   }
     :
 837 |   ///   - Parameter node: the node that is being visited
 838 |   ///   - Returns: the rewritten node
 839 |   open func visit(_ node: FloatLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 840 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FloatLiteralExprSyntax.self))
 841 |   }
     :
 844 |   ///   - Parameter node: the node that is being visited
 845 |   ///   - Returns: the rewritten node
 846 |   open func visit(_ node: ForStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 847 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ForStmtSyntax.self))
 848 |   }
     :
 851 |   ///   - Parameter node: the node that is being visited
 852 |   ///   - Returns: the rewritten node
 853 |   open func visit(_ node: ForceUnwrapExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 854 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ForceUnwrapExprSyntax.self))
 855 |   }
     :
 858 |   ///   - Parameter node: the node that is being visited
 859 |   ///   - Returns: the rewritten node
 860 |   open func visit(_ node: FunctionCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 861 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FunctionCallExprSyntax.self))
 862 |   }
     :
 865 |   ///   - Parameter node: the node that is being visited
 866 |   ///   - Returns: the rewritten node
 867 |   open func visit(_ node: FunctionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 868 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(FunctionDeclSyntax.self))
 869 |   }
     :
 872 |   ///   - Parameter node: the node that is being visited
 873 |   ///   - Returns: the rewritten node
 874 |   open func visit(_ node: FunctionEffectSpecifiersSyntax) -> FunctionEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 875 |     return visitChildren(node._syntaxNode).cast(FunctionEffectSpecifiersSyntax.self)
 876 |   }
     :
 879 |   ///   - Parameter node: the node that is being visited
 880 |   ///   - Returns: the rewritten node
 881 |   open func visit(_ node: FunctionParameterClauseSyntax) -> FunctionParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 882 |     return visitChildren(node._syntaxNode).cast(FunctionParameterClauseSyntax.self)
 883 |   }
     :
 886 |   ///   - Parameter node: the node that is being visited
 887 |   ///   - Returns: the rewritten node
 888 |   open func visit(_ node: FunctionParameterListSyntax) -> FunctionParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 889 |     return visitChildren(node._syntaxNode).cast(FunctionParameterListSyntax.self)
 890 |   }
     :
 893 |   ///   - Parameter node: the node that is being visited
 894 |   ///   - Returns: the rewritten node
 895 |   open func visit(_ node: FunctionParameterSyntax) -> FunctionParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 896 |     return visitChildren(node._syntaxNode).cast(FunctionParameterSyntax.self)
 897 |   }
     :
 900 |   ///   - Parameter node: the node that is being visited
 901 |   ///   - Returns: the rewritten node
 902 |   open func visit(_ node: FunctionSignatureSyntax) -> FunctionSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 903 |     return visitChildren(node._syntaxNode).cast(FunctionSignatureSyntax.self)
 904 |   }
     :
 907 |   ///   - Parameter node: the node that is being visited
 908 |   ///   - Returns: the rewritten node
 909 |   open func visit(_ node: FunctionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 910 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(FunctionTypeSyntax.self))
 911 |   }
     :
 914 |   ///   - Parameter node: the node that is being visited
 915 |   ///   - Returns: the rewritten node
 916 |   open func visit(_ node: GenericArgumentClauseSyntax) -> GenericArgumentClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 917 |     return visitChildren(node._syntaxNode).cast(GenericArgumentClauseSyntax.self)
 918 |   }
     :
 921 |   ///   - Parameter node: the node that is being visited
 922 |   ///   - Returns: the rewritten node
 923 |   open func visit(_ node: GenericArgumentListSyntax) -> GenericArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 924 |     return visitChildren(node._syntaxNode).cast(GenericArgumentListSyntax.self)
 925 |   }
     :
 928 |   ///   - Parameter node: the node that is being visited
 929 |   ///   - Returns: the rewritten node
 930 |   open func visit(_ node: GenericArgumentSyntax) -> GenericArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 931 |     return visitChildren(node._syntaxNode).cast(GenericArgumentSyntax.self)
 932 |   }
     :
 935 |   ///   - Parameter node: the node that is being visited
 936 |   ///   - Returns: the rewritten node
 937 |   open func visit(_ node: GenericParameterClauseSyntax) -> GenericParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 938 |     return visitChildren(node._syntaxNode).cast(GenericParameterClauseSyntax.self)
 939 |   }
     :
 942 |   ///   - Parameter node: the node that is being visited
 943 |   ///   - Returns: the rewritten node
 944 |   open func visit(_ node: GenericParameterListSyntax) -> GenericParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 945 |     return visitChildren(node._syntaxNode).cast(GenericParameterListSyntax.self)
 946 |   }
     :
 949 |   ///   - Parameter node: the node that is being visited
 950 |   ///   - Returns: the rewritten node
 951 |   open func visit(_ node: GenericParameterSyntax) -> GenericParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 952 |     return visitChildren(node._syntaxNode).cast(GenericParameterSyntax.self)
 953 |   }
     :
 956 |   ///   - Parameter node: the node that is being visited
 957 |   ///   - Returns: the rewritten node
 958 |   open func visit(_ node: GenericRequirementListSyntax) -> GenericRequirementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 959 |     return visitChildren(node._syntaxNode).cast(GenericRequirementListSyntax.self)
 960 |   }
     :
 963 |   ///   - Parameter node: the node that is being visited
 964 |   ///   - Returns: the rewritten node
 965 |   open func visit(_ node: GenericRequirementSyntax) -> GenericRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 966 |     return visitChildren(node._syntaxNode).cast(GenericRequirementSyntax.self)
 967 |   }
     :
 970 |   ///   - Parameter node: the node that is being visited
 971 |   ///   - Returns: the rewritten node
 972 |   open func visit(_ node: GenericSpecializationExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 973 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(GenericSpecializationExprSyntax.self))
 974 |   }
     :
 977 |   ///   - Parameter node: the node that is being visited
 978 |   ///   - Returns: the rewritten node
 979 |   open func visit(_ node: GenericWhereClauseSyntax) -> GenericWhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 980 |     return visitChildren(node._syntaxNode).cast(GenericWhereClauseSyntax.self)
 981 |   }
     :
 984 |   ///   - Parameter node: the node that is being visited
 985 |   ///   - Returns: the rewritten node
 986 |   open func visit(_ node: GuardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 987 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(GuardStmtSyntax.self))
 988 |   }
     :
 991 |   ///   - Parameter node: the node that is being visited
 992 |   ///   - Returns: the rewritten node
 993 |   open func visit(_ node: IdentifierPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 994 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IdentifierPatternSyntax.self))
 995 |   }
     :
 998 |   ///   - Parameter node: the node that is being visited
 999 |   ///   - Returns: the rewritten node
1000 |   open func visit(_ node: IdentifierTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1001 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(IdentifierTypeSyntax.self))
1002 |   }
     :
1005 |   ///   - Parameter node: the node that is being visited
1006 |   ///   - Returns: the rewritten node
1007 |   open func visit(_ node: IfConfigClauseListSyntax) -> IfConfigClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1008 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseListSyntax.self)
1009 |   }
     :
1012 |   ///   - Parameter node: the node that is being visited
1013 |   ///   - Returns: the rewritten node
1014 |   open func visit(_ node: IfConfigClauseSyntax) -> IfConfigClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1015 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseSyntax.self)
1016 |   }
     :
1019 |   ///   - Parameter node: the node that is being visited
1020 |   ///   - Returns: the rewritten node
1021 |   open func visit(_ node: IfConfigDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1022 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(IfConfigDeclSyntax.self))
1023 |   }
     :
1026 |   ///   - Parameter node: the node that is being visited
1027 |   ///   - Returns: the rewritten node
1028 |   open func visit(_ node: IfExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1029 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IfExprSyntax.self))
1030 |   }
     :
1033 |   ///   - Parameter node: the node that is being visited
1034 |   ///   - Returns: the rewritten node
1035 |   open func visit(_ node: ImplementsAttributeArgumentsSyntax) -> ImplementsAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1036 |     return visitChildren(node._syntaxNode).cast(ImplementsAttributeArgumentsSyntax.self)
1037 |   }
     :
1040 |   ///   - Parameter node: the node that is being visited
1041 |   ///   - Returns: the rewritten node
1042 |   open func visit(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1043 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ImplicitlyUnwrappedOptionalTypeSyntax.self))
1044 |   }
     :
1047 |   ///   - Parameter node: the node that is being visited
1048 |   ///   - Returns: the rewritten node
1049 |   open func visit(_ node: ImportDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1050 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ImportDeclSyntax.self))
1051 |   }
     :
1054 |   ///   - Parameter node: the node that is being visited
1055 |   ///   - Returns: the rewritten node
1056 |   open func visit(_ node: ImportPathComponentListSyntax) -> ImportPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1057 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentListSyntax.self)
1058 |   }
     :
1061 |   ///   - Parameter node: the node that is being visited
1062 |   ///   - Returns: the rewritten node
1063 |   open func visit(_ node: ImportPathComponentSyntax) -> ImportPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1064 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentSyntax.self)
1065 |   }
     :
1068 |   ///   - Parameter node: the node that is being visited
1069 |   ///   - Returns: the rewritten node
1070 |   open func visit(_ node: InOutExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1071 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InOutExprSyntax.self))
1072 |   }
     :
1075 |   ///   - Parameter node: the node that is being visited
1076 |   ///   - Returns: the rewritten node
1077 |   open func visit(_ node: InfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1078 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InfixOperatorExprSyntax.self))
1079 |   }
     :
1082 |   ///   - Parameter node: the node that is being visited
1083 |   ///   - Returns: the rewritten node
1084 |   open func visit(_ node: InheritanceClauseSyntax) -> InheritanceClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1085 |     return visitChildren(node._syntaxNode).cast(InheritanceClauseSyntax.self)
1086 |   }
     :
1089 |   ///   - Parameter node: the node that is being visited
1090 |   ///   - Returns: the rewritten node
1091 |   open func visit(_ node: InheritedTypeListSyntax) -> InheritedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1092 |     return visitChildren(node._syntaxNode).cast(InheritedTypeListSyntax.self)
1093 |   }
     :
1096 |   ///   - Parameter node: the node that is being visited
1097 |   ///   - Returns: the rewritten node
1098 |   open func visit(_ node: InheritedTypeSyntax) -> InheritedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1099 |     return visitChildren(node._syntaxNode).cast(InheritedTypeSyntax.self)
1100 |   }
     :
1103 |   ///   - Parameter node: the node that is being visited
1104 |   ///   - Returns: the rewritten node
1105 |   open func visit(_ node: InitializerClauseSyntax) -> InitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1106 |     return visitChildren(node._syntaxNode).cast(InitializerClauseSyntax.self)
1107 |   }
     :
1110 |   ///   - Parameter node: the node that is being visited
1111 |   ///   - Returns: the rewritten node
1112 |   open func visit(_ node: InitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1113 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(InitializerDeclSyntax.self))
1114 |   }
     :
1117 |   ///   - Parameter node: the node that is being visited
1118 |   ///   - Returns: the rewritten node
1119 |   open func visit(_ node: IntegerLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1120 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IntegerLiteralExprSyntax.self))
1121 |   }
     :
1124 |   ///   - Parameter node: the node that is being visited
1125 |   ///   - Returns: the rewritten node
1126 |   open func visit(_ node: IsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1127 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IsExprSyntax.self))
1128 |   }
     :
1131 |   ///   - Parameter node: the node that is being visited
1132 |   ///   - Returns: the rewritten node
1133 |   open func visit(_ node: IsTypePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1134 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IsTypePatternSyntax.self))
1135 |   }
     :
1138 |   ///   - Parameter node: the node that is being visited
1139 |   ///   - Returns: the rewritten node
1140 |   open func visit(_ node: KeyPathComponentListSyntax) -> KeyPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1141 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentListSyntax.self)
1142 |   }
     :
1145 |   ///   - Parameter node: the node that is being visited
1146 |   ///   - Returns: the rewritten node
1147 |   open func visit(_ node: KeyPathComponentSyntax) -> KeyPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1148 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentSyntax.self)
1149 |   }
     :
1152 |   ///   - Parameter node: the node that is being visited
1153 |   ///   - Returns: the rewritten node
1154 |   open func visit(_ node: KeyPathExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1155 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(KeyPathExprSyntax.self))
1156 |   }
     :
1159 |   ///   - Parameter node: the node that is being visited
1160 |   ///   - Returns: the rewritten node
1161 |   open func visit(_ node: KeyPathOptionalComponentSyntax) -> KeyPathOptionalComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1162 |     return visitChildren(node._syntaxNode).cast(KeyPathOptionalComponentSyntax.self)
1163 |   }
     :
1166 |   ///   - Parameter node: the node that is being visited
1167 |   ///   - Returns: the rewritten node
1168 |   open func visit(_ node: KeyPathPropertyComponentSyntax) -> KeyPathPropertyComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1169 |     return visitChildren(node._syntaxNode).cast(KeyPathPropertyComponentSyntax.self)
1170 |   }
     :
1173 |   ///   - Parameter node: the node that is being visited
1174 |   ///   - Returns: the rewritten node
1175 |   open func visit(_ node: KeyPathSubscriptComponentSyntax) -> KeyPathSubscriptComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1176 |     return visitChildren(node._syntaxNode).cast(KeyPathSubscriptComponentSyntax.self)
1177 |   }
     :
1180 |   ///   - Parameter node: the node that is being visited
1181 |   ///   - Returns: the rewritten node
1182 |   open func visit(_ node: LabeledExprListSyntax) -> LabeledExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1183 |     return visitChildren(node._syntaxNode).cast(LabeledExprListSyntax.self)
1184 |   }
     :
1187 |   ///   - Parameter node: the node that is being visited
1188 |   ///   - Returns: the rewritten node
1189 |   open func visit(_ node: LabeledExprSyntax) -> LabeledExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1190 |     return visitChildren(node._syntaxNode).cast(LabeledExprSyntax.self)
1191 |   }
     :
1194 |   ///   - Parameter node: the node that is being visited
1195 |   ///   - Returns: the rewritten node
1196 |   open func visit(_ node: LabeledSpecializeArgumentSyntax) -> LabeledSpecializeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1197 |     return visitChildren(node._syntaxNode).cast(LabeledSpecializeArgumentSyntax.self)
1198 |   }
     :
1201 |   ///   - Parameter node: the node that is being visited
1202 |   ///   - Returns: the rewritten node
1203 |   open func visit(_ node: LabeledStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1204 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(LabeledStmtSyntax.self))
1205 |   }
     :
1208 |   ///   - Parameter node: the node that is being visited
1209 |   ///   - Returns: the rewritten node
1210 |   open func visit(_ node: LayoutRequirementSyntax) -> LayoutRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1211 |     return visitChildren(node._syntaxNode).cast(LayoutRequirementSyntax.self)
1212 |   }
     :
1245 |   ///   - Parameter node: the node that is being visited
1246 |   ///   - Returns: the rewritten node
1247 |   open func visit(_ node: MacroDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1248 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroDeclSyntax.self))
1249 |   }
     :
1252 |   ///   - Parameter node: the node that is being visited
1253 |   ///   - Returns: the rewritten node
1254 |   open func visit(_ node: MacroExpansionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1255 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionDeclSyntax.self))
1256 |   }
     :
1259 |   ///   - Parameter node: the node that is being visited
1260 |   ///   - Returns: the rewritten node
1261 |   open func visit(_ node: MacroExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1262 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionExprSyntax.self))
1263 |   }
     :
1266 |   ///   - Parameter node: the node that is being visited
1267 |   ///   - Returns: the rewritten node
1268 |   open func visit(_ node: MatchingPatternConditionSyntax) -> MatchingPatternConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1269 |     return visitChildren(node._syntaxNode).cast(MatchingPatternConditionSyntax.self)
1270 |   }
     :
1273 |   ///   - Parameter node: the node that is being visited
1274 |   ///   - Returns: the rewritten node
1275 |   open func visit(_ node: MemberAccessExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1276 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MemberAccessExprSyntax.self))
1277 |   }
     :
1280 |   ///   - Parameter node: the node that is being visited
1281 |   ///   - Returns: the rewritten node
1282 |   open func visit(_ node: MemberBlockItemListSyntax) -> MemberBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1283 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemListSyntax.self)
1284 |   }
     :
1287 |   ///   - Parameter node: the node that is being visited
1288 |   ///   - Returns: the rewritten node
1289 |   open func visit(_ node: MemberBlockItemSyntax) -> MemberBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1290 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemSyntax.self)
1291 |   }
     :
1294 |   ///   - Parameter node: the node that is being visited
1295 |   ///   - Returns: the rewritten node
1296 |   open func visit(_ node: MemberBlockSyntax) -> MemberBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
1297 |     return visitChildren(node._syntaxNode).cast(MemberBlockSyntax.self)
1298 |   }
     :
1301 |   ///   - Parameter node: the node that is being visited
1302 |   ///   - Returns: the rewritten node
1303 |   open func visit(_ node: MemberTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1304 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MemberTypeSyntax.self))
1305 |   }
     :
1308 |   ///   - Parameter node: the node that is being visited
1309 |   ///   - Returns: the rewritten node
1310 |   open func visit(_ node: MetatypeTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1311 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MetatypeTypeSyntax.self))
1312 |   }
     :
1315 |   ///   - Parameter node: the node that is being visited
1316 |   ///   - Returns: the rewritten node
1317 |   open func visit(_ node: MissingDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1318 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MissingDeclSyntax.self))
1319 |   }
     :
1322 |   ///   - Parameter node: the node that is being visited
1323 |   ///   - Returns: the rewritten node
1324 |   open func visit(_ node: MissingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1325 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MissingExprSyntax.self))
1326 |   }
     :
1329 |   ///   - Parameter node: the node that is being visited
1330 |   ///   - Returns: the rewritten node
1331 |   open func visit(_ node: MissingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1332 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(MissingPatternSyntax.self))
1333 |   }
     :
1336 |   ///   - Parameter node: the node that is being visited
1337 |   ///   - Returns: the rewritten node
1338 |   open func visit(_ node: MissingStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1339 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(MissingStmtSyntax.self))
1340 |   }
     :
1343 |   ///   - Parameter node: the node that is being visited
1344 |   ///   - Returns: the rewritten node
1345 |   open func visit(_ node: MissingSyntax) -> Syntax {
     |             `- note: potential overridden instance method 'visit' here
1346 |     return Syntax(visitChildren(node._syntaxNode).cast(MissingSyntax.self))
1347 |   }
     :
1350 |   ///   - Parameter node: the node that is being visited
1351 |   ///   - Returns: the rewritten node
1352 |   open func visit(_ node: MissingTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1353 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MissingTypeSyntax.self))
1354 |   }
     :
1357 |   ///   - Parameter node: the node that is being visited
1358 |   ///   - Returns: the rewritten node
1359 |   open func visit(_ node: MultipleTrailingClosureElementListSyntax) -> MultipleTrailingClosureElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1360 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementListSyntax.self)
1361 |   }
     :
1364 |   ///   - Parameter node: the node that is being visited
1365 |   ///   - Returns: the rewritten node
1366 |   open func visit(_ node: MultipleTrailingClosureElementSyntax) -> MultipleTrailingClosureElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1367 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementSyntax.self)
1368 |   }
     :
1371 |   ///   - Parameter node: the node that is being visited
1372 |   ///   - Returns: the rewritten node
1373 |   open func visit(_ node: NamedOpaqueReturnTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1374 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(NamedOpaqueReturnTypeSyntax.self))
1375 |   }
     :
1378 |   ///   - Parameter node: the node that is being visited
1379 |   ///   - Returns: the rewritten node
1380 |   open func visit(_ node: NilLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1381 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(NilLiteralExprSyntax.self))
1382 |   }
     :
1385 |   ///   - Parameter node: the node that is being visited
1386 |   ///   - Returns: the rewritten node
1387 |   open func visit(_ node: ObjCSelectorPieceListSyntax) -> ObjCSelectorPieceListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1388 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceListSyntax.self)
1389 |   }
     :
1392 |   ///   - Parameter node: the node that is being visited
1393 |   ///   - Returns: the rewritten node
1394 |   open func visit(_ node: ObjCSelectorPieceSyntax) -> ObjCSelectorPieceSyntax {
     |             `- note: potential overridden instance method 'visit' here
1395 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceSyntax.self)
1396 |   }
     :
1399 |   ///   - Parameter node: the node that is being visited
1400 |   ///   - Returns: the rewritten node
1401 |   open func visit(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) -> OpaqueReturnTypeOfAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1402 |     return visitChildren(node._syntaxNode).cast(OpaqueReturnTypeOfAttributeArgumentsSyntax.self)
1403 |   }
     :
1406 |   ///   - Parameter node: the node that is being visited
1407 |   ///   - Returns: the rewritten node
1408 |   open func visit(_ node: OperatorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1409 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(OperatorDeclSyntax.self))
1410 |   }
     :
1413 |   ///   - Parameter node: the node that is being visited
1414 |   ///   - Returns: the rewritten node
1415 |   open func visit(_ node: OperatorPrecedenceAndTypesSyntax) -> OperatorPrecedenceAndTypesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1416 |     return visitChildren(node._syntaxNode).cast(OperatorPrecedenceAndTypesSyntax.self)
1417 |   }
     :
1420 |   ///   - Parameter node: the node that is being visited
1421 |   ///   - Returns: the rewritten node
1422 |   open func visit(_ node: OptionalBindingConditionSyntax) -> OptionalBindingConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1423 |     return visitChildren(node._syntaxNode).cast(OptionalBindingConditionSyntax.self)
1424 |   }
     :
1427 |   ///   - Parameter node: the node that is being visited
1428 |   ///   - Returns: the rewritten node
1429 |   open func visit(_ node: OptionalChainingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1430 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(OptionalChainingExprSyntax.self))
1431 |   }
     :
1434 |   ///   - Parameter node: the node that is being visited
1435 |   ///   - Returns: the rewritten node
1436 |   open func visit(_ node: OptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1437 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(OptionalTypeSyntax.self))
1438 |   }
     :
1441 |   ///   - Parameter node: the node that is being visited
1442 |   ///   - Returns: the rewritten node
1443 |   open func visit(_ node: OriginallyDefinedInAttributeArgumentsSyntax) -> OriginallyDefinedInAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1444 |     return visitChildren(node._syntaxNode).cast(OriginallyDefinedInAttributeArgumentsSyntax.self)
1445 |   }
     :
1448 |   ///   - Parameter node: the node that is being visited
1449 |   ///   - Returns: the rewritten node
1450 |   open func visit(_ node: PackElementExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1451 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackElementExprSyntax.self))
1452 |   }
     :
1455 |   ///   - Parameter node: the node that is being visited
1456 |   ///   - Returns: the rewritten node
1457 |   open func visit(_ node: PackElementTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1458 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackElementTypeSyntax.self))
1459 |   }
     :
1462 |   ///   - Parameter node: the node that is being visited
1463 |   ///   - Returns: the rewritten node
1464 |   open func visit(_ node: PackExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1465 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackExpansionExprSyntax.self))
1466 |   }
     :
1469 |   ///   - Parameter node: the node that is being visited
1470 |   ///   - Returns: the rewritten node
1471 |   open func visit(_ node: PackExpansionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1472 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackExpansionTypeSyntax.self))
1473 |   }
     :
1476 |   ///   - Parameter node: the node that is being visited
1477 |   ///   - Returns: the rewritten node
1478 |   open func visit(_ node: PatternBindingListSyntax) -> PatternBindingListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1479 |     return visitChildren(node._syntaxNode).cast(PatternBindingListSyntax.self)
1480 |   }
     :
1483 |   ///   - Parameter node: the node that is being visited
1484 |   ///   - Returns: the rewritten node
1485 |   open func visit(_ node: PatternBindingSyntax) -> PatternBindingSyntax {
     |             `- note: potential overridden instance method 'visit' here
1486 |     return visitChildren(node._syntaxNode).cast(PatternBindingSyntax.self)
1487 |   }
     :
1490 |   ///   - Parameter node: the node that is being visited
1491 |   ///   - Returns: the rewritten node
1492 |   open func visit(_ node: PatternExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1493 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PatternExprSyntax.self))
1494 |   }
     :
1497 |   ///   - Parameter node: the node that is being visited
1498 |   ///   - Returns: the rewritten node
1499 |   open func visit(_ node: PlatformVersionItemListSyntax) -> PlatformVersionItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1500 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemListSyntax.self)
1501 |   }
     :
1504 |   ///   - Parameter node: the node that is being visited
1505 |   ///   - Returns: the rewritten node
1506 |   open func visit(_ node: PlatformVersionItemSyntax) -> PlatformVersionItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1507 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemSyntax.self)
1508 |   }
     :
1511 |   ///   - Parameter node: the node that is being visited
1512 |   ///   - Returns: the rewritten node
1513 |   open func visit(_ node: PlatformVersionSyntax) -> PlatformVersionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1514 |     return visitChildren(node._syntaxNode).cast(PlatformVersionSyntax.self)
1515 |   }
     :
1518 |   ///   - Parameter node: the node that is being visited
1519 |   ///   - Returns: the rewritten node
1520 |   open func visit(_ node: PostfixIfConfigExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1521 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixIfConfigExprSyntax.self))
1522 |   }
     :
1525 |   ///   - Parameter node: the node that is being visited
1526 |   ///   - Returns: the rewritten node
1527 |   open func visit(_ node: PostfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1528 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixOperatorExprSyntax.self))
1529 |   }
     :
1532 |   ///   - Parameter node: the node that is being visited
1533 |   ///   - Returns: the rewritten node
1534 |   open func visit(_ node: PoundSourceLocationArgumentsSyntax) -> PoundSourceLocationArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1535 |     return visitChildren(node._syntaxNode).cast(PoundSourceLocationArgumentsSyntax.self)
1536 |   }
     :
1539 |   ///   - Parameter node: the node that is being visited
1540 |   ///   - Returns: the rewritten node
1541 |   open func visit(_ node: PoundSourceLocationSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1542 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PoundSourceLocationSyntax.self))
1543 |   }
     :
1546 |   ///   - Parameter node: the node that is being visited
1547 |   ///   - Returns: the rewritten node
1548 |   open func visit(_ node: PrecedenceGroupAssignmentSyntax) -> PrecedenceGroupAssignmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1549 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssignmentSyntax.self)
1550 |   }
     :
1553 |   ///   - Parameter node: the node that is being visited
1554 |   ///   - Returns: the rewritten node
1555 |   open func visit(_ node: PrecedenceGroupAssociativitySyntax) -> PrecedenceGroupAssociativitySyntax {
     |             `- note: potential overridden instance method 'visit' here
1556 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssociativitySyntax.self)
1557 |   }
     :
1560 |   ///   - Parameter node: the node that is being visited
1561 |   ///   - Returns: the rewritten node
1562 |   open func visit(_ node: PrecedenceGroupAttributeListSyntax) -> PrecedenceGroupAttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1563 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAttributeListSyntax.self)
1564 |   }
     :
1567 |   ///   - Parameter node: the node that is being visited
1568 |   ///   - Returns: the rewritten node
1569 |   open func visit(_ node: PrecedenceGroupDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1570 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PrecedenceGroupDeclSyntax.self))
1571 |   }
     :
1574 |   ///   - Parameter node: the node that is being visited
1575 |   ///   - Returns: the rewritten node
1576 |   open func visit(_ node: PrecedenceGroupNameListSyntax) -> PrecedenceGroupNameListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1577 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameListSyntax.self)
1578 |   }
     :
1581 |   ///   - Parameter node: the node that is being visited
1582 |   ///   - Returns: the rewritten node
1583 |   open func visit(_ node: PrecedenceGroupNameSyntax) -> PrecedenceGroupNameSyntax {
     |             `- note: potential overridden instance method 'visit' here
1584 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameSyntax.self)
1585 |   }
     :
1588 |   ///   - Parameter node: the node that is being visited
1589 |   ///   - Returns: the rewritten node
1590 |   open func visit(_ node: PrecedenceGroupRelationSyntax) -> PrecedenceGroupRelationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1591 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupRelationSyntax.self)
1592 |   }
     :
1595 |   ///   - Parameter node: the node that is being visited
1596 |   ///   - Returns: the rewritten node
1597 |   open func visit(_ node: PrefixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1598 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PrefixOperatorExprSyntax.self))
1599 |   }
     :
1602 |   ///   - Parameter node: the node that is being visited
1603 |   ///   - Returns: the rewritten node
1604 |   open func visit(_ node: PrimaryAssociatedTypeClauseSyntax) -> PrimaryAssociatedTypeClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1605 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeClauseSyntax.self)
1606 |   }
     :
1609 |   ///   - Parameter node: the node that is being visited
1610 |   ///   - Returns: the rewritten node
1611 |   open func visit(_ node: PrimaryAssociatedTypeListSyntax) -> PrimaryAssociatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1612 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeListSyntax.self)
1613 |   }
     :
1616 |   ///   - Parameter node: the node that is being visited
1617 |   ///   - Returns: the rewritten node
1618 |   open func visit(_ node: PrimaryAssociatedTypeSyntax) -> PrimaryAssociatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1619 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeSyntax.self)
1620 |   }
     :
1623 |   ///   - Parameter node: the node that is being visited
1624 |   ///   - Returns: the rewritten node
1625 |   open func visit(_ node: ProtocolDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1626 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ProtocolDeclSyntax.self))
1627 |   }
     :
1630 |   ///   - Parameter node: the node that is being visited
1631 |   ///   - Returns: the rewritten node
1632 |   open func visit(_ node: RegexLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1633 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(RegexLiteralExprSyntax.self))
1634 |   }
     :
1637 |   ///   - Parameter node: the node that is being visited
1638 |   ///   - Returns: the rewritten node
1639 |   open func visit(_ node: RepeatStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1640 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(RepeatStmtSyntax.self))
1641 |   }
     :
1644 |   ///   - Parameter node: the node that is being visited
1645 |   ///   - Returns: the rewritten node
1646 |   open func visit(_ node: ReturnClauseSyntax) -> ReturnClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1647 |     return visitChildren(node._syntaxNode).cast(ReturnClauseSyntax.self)
1648 |   }
     :
1651 |   ///   - Parameter node: the node that is being visited
1652 |   ///   - Returns: the rewritten node
1653 |   open func visit(_ node: ReturnStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1654 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ReturnStmtSyntax.self))
1655 |   }
     :
1658 |   ///   - Parameter node: the node that is being visited
1659 |   ///   - Returns: the rewritten node
1660 |   open func visit(_ node: SameTypeRequirementSyntax) -> SameTypeRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1661 |     return visitChildren(node._syntaxNode).cast(SameTypeRequirementSyntax.self)
1662 |   }
     :
1665 |   ///   - Parameter node: the node that is being visited
1666 |   ///   - Returns: the rewritten node
1667 |   open func visit(_ node: SequenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1668 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SequenceExprSyntax.self))
1669 |   }
     :
1672 |   ///   - Parameter node: the node that is being visited
1673 |   ///   - Returns: the rewritten node
1674 |   open func visit(_ node: SimpleStringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1675 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SimpleStringLiteralExprSyntax.self))
1676 |   }
     :
1679 |   ///   - Parameter node: the node that is being visited
1680 |   ///   - Returns: the rewritten node
1681 |   open func visit(_ node: SimpleStringLiteralSegmentListSyntax) -> SimpleStringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1682 |     return visitChildren(node._syntaxNode).cast(SimpleStringLiteralSegmentListSyntax.self)
1683 |   }
     :
1686 |   ///   - Parameter node: the node that is being visited
1687 |   ///   - Returns: the rewritten node
1688 |   open func visit(_ node: SimpleTypeSpecifierSyntax) -> SimpleTypeSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
1689 |     return visitChildren(node._syntaxNode).cast(SimpleTypeSpecifierSyntax.self)
1690 |   }
     :
1693 |   ///   - Parameter node: the node that is being visited
1694 |   ///   - Returns: the rewritten node
1695 |   open func visit(_ node: SomeOrAnyTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1696 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SomeOrAnyTypeSyntax.self))
1697 |   }
     :
1700 |   ///   - Parameter node: the node that is being visited
1701 |   ///   - Returns: the rewritten node
1702 |   open func visit(_ node: SourceFileSyntax) -> SourceFileSyntax {
     |             `- note: potential overridden instance method 'visit' here
1703 |     return visitChildren(node._syntaxNode).cast(SourceFileSyntax.self)
1704 |   }
     :
1707 |   ///   - Parameter node: the node that is being visited
1708 |   ///   - Returns: the rewritten node
1709 |   open func visit(_ node: SpecializeAttributeArgumentListSyntax) -> SpecializeAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1710 |     return visitChildren(node._syntaxNode).cast(SpecializeAttributeArgumentListSyntax.self)
1711 |   }
     :
1714 |   ///   - Parameter node: the node that is being visited
1715 |   ///   - Returns: the rewritten node
1716 |   open func visit(_ node: SpecializeAvailabilityArgumentSyntax) -> SpecializeAvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1717 |     return visitChildren(node._syntaxNode).cast(SpecializeAvailabilityArgumentSyntax.self)
1718 |   }
     :
1721 |   ///   - Parameter node: the node that is being visited
1722 |   ///   - Returns: the rewritten node
1723 |   open func visit(_ node: SpecializeTargetFunctionArgumentSyntax) -> SpecializeTargetFunctionArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1724 |     return visitChildren(node._syntaxNode).cast(SpecializeTargetFunctionArgumentSyntax.self)
1725 |   }
     :
1728 |   ///   - Parameter node: the node that is being visited
1729 |   ///   - Returns: the rewritten node
1730 |   open func visit(_ node: StringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1731 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(StringLiteralExprSyntax.self))
1732 |   }
     :
1735 |   ///   - Parameter node: the node that is being visited
1736 |   ///   - Returns: the rewritten node
1737 |   open func visit(_ node: StringLiteralSegmentListSyntax) -> StringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1738 |     return visitChildren(node._syntaxNode).cast(StringLiteralSegmentListSyntax.self)
1739 |   }
     :
1742 |   ///   - Parameter node: the node that is being visited
1743 |   ///   - Returns: the rewritten node
1744 |   open func visit(_ node: StringSegmentSyntax) -> StringSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1745 |     return visitChildren(node._syntaxNode).cast(StringSegmentSyntax.self)
1746 |   }
     :
1749 |   ///   - Parameter node: the node that is being visited
1750 |   ///   - Returns: the rewritten node
1751 |   open func visit(_ node: StructDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1752 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(StructDeclSyntax.self))
1753 |   }
     :
1756 |   ///   - Parameter node: the node that is being visited
1757 |   ///   - Returns: the rewritten node
1758 |   open func visit(_ node: SubscriptCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1759 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SubscriptCallExprSyntax.self))
1760 |   }
     :
1763 |   ///   - Parameter node: the node that is being visited
1764 |   ///   - Returns: the rewritten node
1765 |   open func visit(_ node: SubscriptDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1766 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(SubscriptDeclSyntax.self))
1767 |   }
     :
1770 |   ///   - Parameter node: the node that is being visited
1771 |   ///   - Returns: the rewritten node
1772 |   open func visit(_ node: SuperExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1773 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SuperExprSyntax.self))
1774 |   }
     :
1777 |   ///   - Parameter node: the node that is being visited
1778 |   ///   - Returns: the rewritten node
1779 |   open func visit(_ node: SuppressedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1780 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SuppressedTypeSyntax.self))
1781 |   }
     :
1784 |   ///   - Parameter node: the node that is being visited
1785 |   ///   - Returns: the rewritten node
1786 |   open func visit(_ node: SwitchCaseItemListSyntax) -> SwitchCaseItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1787 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemListSyntax.self)
1788 |   }
     :
1791 |   ///   - Parameter node: the node that is being visited
1792 |   ///   - Returns: the rewritten node
1793 |   open func visit(_ node: SwitchCaseItemSyntax) -> SwitchCaseItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1794 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemSyntax.self)
1795 |   }
     :
1798 |   ///   - Parameter node: the node that is being visited
1799 |   ///   - Returns: the rewritten node
1800 |   open func visit(_ node: SwitchCaseLabelSyntax) -> SwitchCaseLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1801 |     return visitChildren(node._syntaxNode).cast(SwitchCaseLabelSyntax.self)
1802 |   }
     :
1805 |   ///   - Parameter node: the node that is being visited
1806 |   ///   - Returns: the rewritten node
1807 |   open func visit(_ node: SwitchCaseListSyntax) -> SwitchCaseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1808 |     return visitChildren(node._syntaxNode).cast(SwitchCaseListSyntax.self)
1809 |   }
     :
1812 |   ///   - Parameter node: the node that is being visited
1813 |   ///   - Returns: the rewritten node
1814 |   open func visit(_ node: SwitchCaseSyntax) -> SwitchCaseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1815 |     return visitChildren(node._syntaxNode).cast(SwitchCaseSyntax.self)
1816 |   }
     :
1819 |   ///   - Parameter node: the node that is being visited
1820 |   ///   - Returns: the rewritten node
1821 |   open func visit(_ node: SwitchDefaultLabelSyntax) -> SwitchDefaultLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1822 |     return visitChildren(node._syntaxNode).cast(SwitchDefaultLabelSyntax.self)
1823 |   }
     :
1826 |   ///   - Parameter node: the node that is being visited
1827 |   ///   - Returns: the rewritten node
1828 |   open func visit(_ node: SwitchExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1829 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SwitchExprSyntax.self))
1830 |   }
     :
1833 |   ///   - Parameter node: the node that is being visited
1834 |   ///   - Returns: the rewritten node
1835 |   open func visit(_ node: TernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1836 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TernaryExprSyntax.self))
1837 |   }
     :
1850 |   ///   - Parameter node: the node that is being visited
1851 |   ///   - Returns: the rewritten node
1852 |   open func visit(_ node: ThrowStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1853 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ThrowStmtSyntax.self))
1854 |   }
     :
1857 |   ///   - Parameter node: the node that is being visited
1858 |   ///   - Returns: the rewritten node
1859 |   open func visit(_ node: ThrowsClauseSyntax) -> ThrowsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1860 |     return visitChildren(node._syntaxNode).cast(ThrowsClauseSyntax.self)
1861 |   }
     :
1864 |   ///   - Parameter node: the node that is being visited
1865 |   ///   - Returns: the rewritten node
1866 |   open func visit(_ node: TryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1867 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TryExprSyntax.self))
1868 |   }
     :
1871 |   ///   - Parameter node: the node that is being visited
1872 |   ///   - Returns: the rewritten node
1873 |   open func visit(_ node: TupleExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1874 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TupleExprSyntax.self))
1875 |   }
     :
1878 |   ///   - Parameter node: the node that is being visited
1879 |   ///   - Returns: the rewritten node
1880 |   open func visit(_ node: TuplePatternElementListSyntax) -> TuplePatternElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1881 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementListSyntax.self)
1882 |   }
     :
1885 |   ///   - Parameter node: the node that is being visited
1886 |   ///   - Returns: the rewritten node
1887 |   open func visit(_ node: TuplePatternElementSyntax) -> TuplePatternElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1888 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementSyntax.self)
1889 |   }
     :
1892 |   ///   - Parameter node: the node that is being visited
1893 |   ///   - Returns: the rewritten node
1894 |   open func visit(_ node: TuplePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1895 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(TuplePatternSyntax.self))
1896 |   }
     :
1899 |   ///   - Parameter node: the node that is being visited
1900 |   ///   - Returns: the rewritten node
1901 |   open func visit(_ node: TupleTypeElementListSyntax) -> TupleTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1902 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementListSyntax.self)
1903 |   }
     :
1906 |   ///   - Parameter node: the node that is being visited
1907 |   ///   - Returns: the rewritten node
1908 |   open func visit(_ node: TupleTypeElementSyntax) -> TupleTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1909 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementSyntax.self)
1910 |   }
     :
1913 |   ///   - Parameter node: the node that is being visited
1914 |   ///   - Returns: the rewritten node
1915 |   open func visit(_ node: TupleTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1916 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(TupleTypeSyntax.self))
1917 |   }
     :
1920 |   ///   - Parameter node: the node that is being visited
1921 |   ///   - Returns: the rewritten node
1922 |   open func visit(_ node: TypeAliasDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1923 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(TypeAliasDeclSyntax.self))
1924 |   }
     :
1927 |   ///   - Parameter node: the node that is being visited
1928 |   ///   - Returns: the rewritten node
1929 |   open func visit(_ node: TypeAnnotationSyntax) -> TypeAnnotationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1930 |     return visitChildren(node._syntaxNode).cast(TypeAnnotationSyntax.self)
1931 |   }
     :
1934 |   ///   - Parameter node: the node that is being visited
1935 |   ///   - Returns: the rewritten node
1936 |   open func visit(_ node: TypeEffectSpecifiersSyntax) -> TypeEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
1937 |     return visitChildren(node._syntaxNode).cast(TypeEffectSpecifiersSyntax.self)
1938 |   }
     :
1941 |   ///   - Parameter node: the node that is being visited
1942 |   ///   - Returns: the rewritten node
1943 |   open func visit(_ node: TypeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1944 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TypeExprSyntax.self))
1945 |   }
     :
1948 |   ///   - Parameter node: the node that is being visited
1949 |   ///   - Returns: the rewritten node
1950 |   open func visit(_ node: TypeInitializerClauseSyntax) -> TypeInitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1951 |     return visitChildren(node._syntaxNode).cast(TypeInitializerClauseSyntax.self)
1952 |   }
     :
1955 |   ///   - Parameter node: the node that is being visited
1956 |   ///   - Returns: the rewritten node
1957 |   open func visit(_ node: TypeSpecifierListSyntax) -> TypeSpecifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1958 |     return visitChildren(node._syntaxNode).cast(TypeSpecifierListSyntax.self)
1959 |   }
     :
1962 |   ///   - Parameter node: the node that is being visited
1963 |   ///   - Returns: the rewritten node
1964 |   open func visit(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) -> UnavailableFromAsyncAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1965 |     return visitChildren(node._syntaxNode).cast(UnavailableFromAsyncAttributeArgumentsSyntax.self)
1966 |   }
     :
1969 |   ///   - Parameter node: the node that is being visited
1970 |   ///   - Returns: the rewritten node
1971 |   open func visit(_ node: UnderscorePrivateAttributeArgumentsSyntax) -> UnderscorePrivateAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1972 |     return visitChildren(node._syntaxNode).cast(UnderscorePrivateAttributeArgumentsSyntax.self)
1973 |   }
     :
1976 |   ///   - Parameter node: the node that is being visited
1977 |   ///   - Returns: the rewritten node
1978 |   open func visit(_ node: UnexpectedNodesSyntax) -> UnexpectedNodesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1979 |     return visitChildren(node._syntaxNode).cast(UnexpectedNodesSyntax.self)
1980 |   }
     :
1983 |   ///   - Parameter node: the node that is being visited
1984 |   ///   - Returns: the rewritten node
1985 |   open func visit(_ node: UnresolvedAsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1986 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedAsExprSyntax.self))
1987 |   }
     :
1990 |   ///   - Parameter node: the node that is being visited
1991 |   ///   - Returns: the rewritten node
1992 |   open func visit(_ node: UnresolvedIsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1993 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedIsExprSyntax.self))
1994 |   }
     :
1997 |   ///   - Parameter node: the node that is being visited
1998 |   ///   - Returns: the rewritten node
1999 |   open func visit(_ node: UnresolvedTernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
2000 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedTernaryExprSyntax.self))
2001 |   }
     :
2004 |   ///   - Parameter node: the node that is being visited
2005 |   ///   - Returns: the rewritten node
2006 |   open func visit(_ node: ValueBindingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2007 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ValueBindingPatternSyntax.self))
2008 |   }
     :
2011 |   ///   - Parameter node: the node that is being visited
2012 |   ///   - Returns: the rewritten node
2013 |   open func visit(_ node: VariableDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
2014 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(VariableDeclSyntax.self))
2015 |   }
     :
2018 |   ///   - Parameter node: the node that is being visited
2019 |   ///   - Returns: the rewritten node
2020 |   open func visit(_ node: VersionComponentListSyntax) -> VersionComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2021 |     return visitChildren(node._syntaxNode).cast(VersionComponentListSyntax.self)
2022 |   }
     :
2025 |   ///   - Parameter node: the node that is being visited
2026 |   ///   - Returns: the rewritten node
2027 |   open func visit(_ node: VersionComponentSyntax) -> VersionComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
2028 |     return visitChildren(node._syntaxNode).cast(VersionComponentSyntax.self)
2029 |   }
     :
2032 |   ///   - Parameter node: the node that is being visited
2033 |   ///   - Returns: the rewritten node
2034 |   open func visit(_ node: VersionTupleSyntax) -> VersionTupleSyntax {
     |             `- note: potential overridden instance method 'visit' here
2035 |     return visitChildren(node._syntaxNode).cast(VersionTupleSyntax.self)
2036 |   }
     :
2039 |   ///   - Parameter node: the node that is being visited
2040 |   ///   - Returns: the rewritten node
2041 |   open func visit(_ node: WhereClauseSyntax) -> WhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2042 |     return visitChildren(node._syntaxNode).cast(WhereClauseSyntax.self)
2043 |   }
     :
2046 |   ///   - Parameter node: the node that is being visited
2047 |   ///   - Returns: the rewritten node
2048 |   open func visit(_ node: WhileStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2049 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(WhileStmtSyntax.self))
2050 |   }
     :
2053 |   ///   - Parameter node: the node that is being visited
2054 |   ///   - Returns: the rewritten node
2055 |   open func visit(_ node: WildcardPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2056 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(WildcardPatternSyntax.self))
2057 |   }
     :
2060 |   ///   - Parameter node: the node that is being visited
2061 |   ///   - Returns: the rewritten node
2062 |   open func visit(_ node: YieldStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2063 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(YieldStmtSyntax.self))
2064 |   }
     :
2067 |   ///   - Parameter node: the node that is being visited
2068 |   ///   - Returns: the rewritten node
2069 |   open func visit(_ node: YieldedExpressionListSyntax) -> YieldedExpressionListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2070 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionListSyntax.self)
2071 |   }
     :
2074 |   ///   - Parameter node: the node that is being visited
2075 |   ///   - Returns: the rewritten node
2076 |   open func visit(_ node: YieldedExpressionSyntax) -> YieldedExpressionSyntax {
     |             `- note: potential overridden instance method 'visit' here
2077 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionSyntax.self)
2078 |   }
     :
2081 |   ///   - Parameter node: the node that is being visited
2082 |   ///   - Returns: the rewritten node
2083 |   open func visit(_ node: YieldedExpressionsClauseSyntax) -> YieldedExpressionsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2084 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionsClauseSyntax.self)
2085 |   }
     :
2088 |   ///   - Parameter node: the node that is being visited
2089 |   ///   - Returns: the rewritten node
2090 |   public func visit(_ node: DeclSyntax) -> DeclSyntax {
     |               `- note: potential overridden instance method 'visit' here
2091 |     var node: Syntax = Syntax(node)
2092 |     dispatchVisit(&node)
     :
2097 |   ///   - Parameter node: the node that is being visited
2098 |   ///   - Returns: the rewritten node
2099 |   public func visit(_ node: ExprSyntax) -> ExprSyntax {
     |               `- note: potential overridden instance method 'visit' here
2100 |     var node: Syntax = Syntax(node)
2101 |     dispatchVisit(&node)
     :
2106 |   ///   - Parameter node: the node that is being visited
2107 |   ///   - Returns: the rewritten node
2108 |   public func visit(_ node: PatternSyntax) -> PatternSyntax {
     |               `- note: potential overridden instance method 'visit' here
2109 |     var node: Syntax = Syntax(node)
2110 |     dispatchVisit(&node)
     :
2115 |   ///   - Parameter node: the node that is being visited
2116 |   ///   - Returns: the rewritten node
2117 |   public func visit(_ node: StmtSyntax) -> StmtSyntax {
     |               `- note: potential overridden instance method 'visit' here
2118 |     var node: Syntax = Syntax(node)
2119 |     dispatchVisit(&node)
     :
2124 |   ///   - Parameter node: the node that is being visited
2125 |   ///   - Returns: the rewritten node
2126 |   public func visit(_ node: TypeSyntax) -> TypeSyntax {
     |               `- note: potential overridden instance method 'visit' here
2127 |     var node: Syntax = Syntax(node)
2128 |     dispatchVisit(&node)

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:742:19: error: method does not override any method from its superclass
740 |     }
741 | 
742 |     override func visit(_ token: TokenSyntax) -> Syntax {
    |                   `- error: method does not override any method from its superclass
743 |         currentIndex += 1
744 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift:50:13: note: potential overridden instance method 'visit' here
  48 |   ///   - Parameter node: the node that is being visited
  49 |   ///   - Returns: the rewritten node
  50 |   open func visit(_ token: TokenSyntax) -> TokenSyntax {
     |             `- note: potential overridden instance method 'visit' here
  51 |     return token
  52 |   }
     :
  77 |   ///   - Returns: the rewritten node
  78 |   @available(*, deprecated, renamed: "rewrite(_:detach:)")
  79 |   public func visit(_ node: Syntax) -> Syntax {
     |               `- note: potential overridden instance method 'visit' here
  80 |     var rewritten = node
  81 |     dispatchVisit(&rewritten)
     :
  92 |   ///   - Parameter node: the node that is being visited
  93 |   ///   - Returns: the rewritten node
  94 |   open func visit(_ node: AccessorBlockSyntax) -> AccessorBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
  95 |     return visitChildren(node._syntaxNode).cast(AccessorBlockSyntax.self)
  96 |   }
     :
  99 |   ///   - Parameter node: the node that is being visited
 100 |   ///   - Returns: the rewritten node
 101 |   open func visit(_ node: AccessorDeclListSyntax) -> AccessorDeclListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 102 |     return visitChildren(node._syntaxNode).cast(AccessorDeclListSyntax.self)
 103 |   }
     :
 106 |   ///   - Parameter node: the node that is being visited
 107 |   ///   - Returns: the rewritten node
 108 |   open func visit(_ node: AccessorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 109 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AccessorDeclSyntax.self))
 110 |   }
     :
 113 |   ///   - Parameter node: the node that is being visited
 114 |   ///   - Returns: the rewritten node
 115 |   open func visit(_ node: AccessorEffectSpecifiersSyntax) -> AccessorEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 116 |     return visitChildren(node._syntaxNode).cast(AccessorEffectSpecifiersSyntax.self)
 117 |   }
     :
 120 |   ///   - Parameter node: the node that is being visited
 121 |   ///   - Returns: the rewritten node
 122 |   open func visit(_ node: AccessorParametersSyntax) -> AccessorParametersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 123 |     return visitChildren(node._syntaxNode).cast(AccessorParametersSyntax.self)
 124 |   }
     :
 127 |   ///   - Parameter node: the node that is being visited
 128 |   ///   - Returns: the rewritten node
 129 |   open func visit(_ node: ActorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 130 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ActorDeclSyntax.self))
 131 |   }
     :
 134 |   ///   - Parameter node: the node that is being visited
 135 |   ///   - Returns: the rewritten node
 136 |   open func visit(_ node: ArrayElementListSyntax) -> ArrayElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 137 |     return visitChildren(node._syntaxNode).cast(ArrayElementListSyntax.self)
 138 |   }
     :
 141 |   ///   - Parameter node: the node that is being visited
 142 |   ///   - Returns: the rewritten node
 143 |   open func visit(_ node: ArrayElementSyntax) -> ArrayElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 144 |     return visitChildren(node._syntaxNode).cast(ArrayElementSyntax.self)
 145 |   }
     :
 148 |   ///   - Parameter node: the node that is being visited
 149 |   ///   - Returns: the rewritten node
 150 |   open func visit(_ node: ArrayExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 151 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrayExprSyntax.self))
 152 |   }
     :
 155 |   ///   - Parameter node: the node that is being visited
 156 |   ///   - Returns: the rewritten node
 157 |   open func visit(_ node: ArrayTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 158 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ArrayTypeSyntax.self))
 159 |   }
     :
 162 |   ///   - Parameter node: the node that is being visited
 163 |   ///   - Returns: the rewritten node
 164 |   open func visit(_ node: ArrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 165 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrowExprSyntax.self))
 166 |   }
     :
 169 |   ///   - Parameter node: the node that is being visited
 170 |   ///   - Returns: the rewritten node
 171 |   open func visit(_ node: AsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 172 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AsExprSyntax.self))
 173 |   }
     :
 176 |   ///   - Parameter node: the node that is being visited
 177 |   ///   - Returns: the rewritten node
 178 |   open func visit(_ node: AssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 179 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AssignmentExprSyntax.self))
 180 |   }
     :
 183 |   ///   - Parameter node: the node that is being visited
 184 |   ///   - Returns: the rewritten node
 185 |   open func visit(_ node: AssociatedTypeDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 186 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AssociatedTypeDeclSyntax.self))
 187 |   }
     :
 190 |   ///   - Parameter node: the node that is being visited
 191 |   ///   - Returns: the rewritten node
 192 |   open func visit(_ node: AttributeListSyntax) -> AttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 193 |     return visitChildren(node._syntaxNode).cast(AttributeListSyntax.self)
 194 |   }
     :
 197 |   ///   - Parameter node: the node that is being visited
 198 |   ///   - Returns: the rewritten node
 199 |   open func visit(_ node: AttributeSyntax) -> AttributeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 200 |     return visitChildren(node._syntaxNode).cast(AttributeSyntax.self)
 201 |   }
     :
 204 |   ///   - Parameter node: the node that is being visited
 205 |   ///   - Returns: the rewritten node
 206 |   open func visit(_ node: AttributedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 207 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(AttributedTypeSyntax.self))
 208 |   }
     :
 211 |   ///   - Parameter node: the node that is being visited
 212 |   ///   - Returns: the rewritten node
 213 |   open func visit(_ node: AvailabilityArgumentListSyntax) -> AvailabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 214 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentListSyntax.self)
 215 |   }
     :
 218 |   ///   - Parameter node: the node that is being visited
 219 |   ///   - Returns: the rewritten node
 220 |   open func visit(_ node: AvailabilityArgumentSyntax) -> AvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 221 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentSyntax.self)
 222 |   }
     :
 225 |   ///   - Parameter node: the node that is being visited
 226 |   ///   - Returns: the rewritten node
 227 |   open func visit(_ node: AvailabilityConditionSyntax) -> AvailabilityConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
 228 |     return visitChildren(node._syntaxNode).cast(AvailabilityConditionSyntax.self)
 229 |   }
     :
 232 |   ///   - Parameter node: the node that is being visited
 233 |   ///   - Returns: the rewritten node
 234 |   open func visit(_ node: AvailabilityLabeledArgumentSyntax) -> AvailabilityLabeledArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 235 |     return visitChildren(node._syntaxNode).cast(AvailabilityLabeledArgumentSyntax.self)
 236 |   }
     :
 239 |   ///   - Parameter node: the node that is being visited
 240 |   ///   - Returns: the rewritten node
 241 |   open func visit(_ node: AwaitExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 242 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AwaitExprSyntax.self))
 243 |   }
     :
 246 |   ///   - Parameter node: the node that is being visited
 247 |   ///   - Returns: the rewritten node
 248 |   open func visit(_ node: BackDeployedAttributeArgumentsSyntax) -> BackDeployedAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 249 |     return visitChildren(node._syntaxNode).cast(BackDeployedAttributeArgumentsSyntax.self)
 250 |   }
     :
 253 |   ///   - Parameter node: the node that is being visited
 254 |   ///   - Returns: the rewritten node
 255 |   open func visit(_ node: BinaryOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 256 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BinaryOperatorExprSyntax.self))
 257 |   }
     :
 260 |   ///   - Parameter node: the node that is being visited
 261 |   ///   - Returns: the rewritten node
 262 |   open func visit(_ node: BooleanLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 263 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BooleanLiteralExprSyntax.self))
 264 |   }
     :
 267 |   ///   - Parameter node: the node that is being visited
 268 |   ///   - Returns: the rewritten node
 269 |   open func visit(_ node: BorrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 270 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BorrowExprSyntax.self))
 271 |   }
     :
 274 |   ///   - Parameter node: the node that is being visited
 275 |   ///   - Returns: the rewritten node
 276 |   open func visit(_ node: BreakStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 277 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(BreakStmtSyntax.self))
 278 |   }
     :
 281 |   ///   - Parameter node: the node that is being visited
 282 |   ///   - Returns: the rewritten node
 283 |   open func visit(_ node: _CanImportExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 284 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportExprSyntax.self))
 285 |   }
     :
 288 |   ///   - Parameter node: the node that is being visited
 289 |   ///   - Returns: the rewritten node
 290 |   open func visit(_ node: _CanImportVersionInfoSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 291 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportVersionInfoSyntax.self))
 292 |   }
     :
 295 |   ///   - Parameter node: the node that is being visited
 296 |   ///   - Returns: the rewritten node
 297 |   open func visit(_ node: CatchClauseListSyntax) -> CatchClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 298 |     return visitChildren(node._syntaxNode).cast(CatchClauseListSyntax.self)
 299 |   }
     :
 302 |   ///   - Parameter node: the node that is being visited
 303 |   ///   - Returns: the rewritten node
 304 |   open func visit(_ node: CatchClauseSyntax) -> CatchClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 305 |     return visitChildren(node._syntaxNode).cast(CatchClauseSyntax.self)
 306 |   }
     :
 309 |   ///   - Parameter node: the node that is being visited
 310 |   ///   - Returns: the rewritten node
 311 |   open func visit(_ node: CatchItemListSyntax) -> CatchItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 312 |     return visitChildren(node._syntaxNode).cast(CatchItemListSyntax.self)
 313 |   }
     :
 316 |   ///   - Parameter node: the node that is being visited
 317 |   ///   - Returns: the rewritten node
 318 |   open func visit(_ node: CatchItemSyntax) -> CatchItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 319 |     return visitChildren(node._syntaxNode).cast(CatchItemSyntax.self)
 320 |   }
     :
 323 |   ///   - Parameter node: the node that is being visited
 324 |   ///   - Returns: the rewritten node
 325 |   open func visit(_ node: ClassDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 326 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ClassDeclSyntax.self))
 327 |   }
     :
 330 |   ///   - Parameter node: the node that is being visited
 331 |   ///   - Returns: the rewritten node
 332 |   open func visit(_ node: ClassRestrictionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 333 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ClassRestrictionTypeSyntax.self))
 334 |   }
     :
 337 |   ///   - Parameter node: the node that is being visited
 338 |   ///   - Returns: the rewritten node
 339 |   open func visit(_ node: ClosureCaptureClauseSyntax) -> ClosureCaptureClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 340 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureClauseSyntax.self)
 341 |   }
     :
 344 |   ///   - Parameter node: the node that is being visited
 345 |   ///   - Returns: the rewritten node
 346 |   open func visit(_ node: ClosureCaptureListSyntax) -> ClosureCaptureListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 347 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureListSyntax.self)
 348 |   }
     :
 351 |   ///   - Parameter node: the node that is being visited
 352 |   ///   - Returns: the rewritten node
 353 |   open func visit(_ node: ClosureCaptureSpecifierSyntax) -> ClosureCaptureSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 354 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSpecifierSyntax.self)
 355 |   }
     :
 358 |   ///   - Parameter node: the node that is being visited
 359 |   ///   - Returns: the rewritten node
 360 |   open func visit(_ node: ClosureCaptureSyntax) -> ClosureCaptureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 361 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSyntax.self)
 362 |   }
     :
 365 |   ///   - Parameter node: the node that is being visited
 366 |   ///   - Returns: the rewritten node
 367 |   open func visit(_ node: ClosureExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 368 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ClosureExprSyntax.self))
 369 |   }
     :
 372 |   ///   - Parameter node: the node that is being visited
 373 |   ///   - Returns: the rewritten node
 374 |   open func visit(_ node: ClosureParameterClauseSyntax) -> ClosureParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 375 |     return visitChildren(node._syntaxNode).cast(ClosureParameterClauseSyntax.self)
 376 |   }
     :
 379 |   ///   - Parameter node: the node that is being visited
 380 |   ///   - Returns: the rewritten node
 381 |   open func visit(_ node: ClosureParameterListSyntax) -> ClosureParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 382 |     return visitChildren(node._syntaxNode).cast(ClosureParameterListSyntax.self)
 383 |   }
     :
 386 |   ///   - Parameter node: the node that is being visited
 387 |   ///   - Returns: the rewritten node
 388 |   open func visit(_ node: ClosureParameterSyntax) -> ClosureParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 389 |     return visitChildren(node._syntaxNode).cast(ClosureParameterSyntax.self)
 390 |   }
     :
 393 |   ///   - Parameter node: the node that is being visited
 394 |   ///   - Returns: the rewritten node
 395 |   open func visit(_ node: ClosureShorthandParameterListSyntax) -> ClosureShorthandParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 396 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterListSyntax.self)
 397 |   }
     :
 400 |   ///   - Parameter node: the node that is being visited
 401 |   ///   - Returns: the rewritten node
 402 |   open func visit(_ node: ClosureShorthandParameterSyntax) -> ClosureShorthandParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 403 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterSyntax.self)
 404 |   }
     :
 407 |   ///   - Parameter node: the node that is being visited
 408 |   ///   - Returns: the rewritten node
 409 |   open func visit(_ node: ClosureSignatureSyntax) -> ClosureSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 410 |     return visitChildren(node._syntaxNode).cast(ClosureSignatureSyntax.self)
 411 |   }
     :
 414 |   ///   - Parameter node: the node that is being visited
 415 |   ///   - Returns: the rewritten node
 416 |   open func visit(_ node: CodeBlockItemListSyntax) -> CodeBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 417 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemListSyntax.self)
 418 |   }
     :
 421 |   ///   - Parameter node: the node that is being visited
 422 |   ///   - Returns: the rewritten node
 423 |   open func visit(_ node: CodeBlockItemSyntax) -> CodeBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 424 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemSyntax.self)
 425 |   }
     :
 428 |   ///   - Parameter node: the node that is being visited
 429 |   ///   - Returns: the rewritten node
 430 |   open func visit(_ node: CodeBlockSyntax) -> CodeBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
 431 |     return visitChildren(node._syntaxNode).cast(CodeBlockSyntax.self)
 432 |   }
     :
 435 |   ///   - Parameter node: the node that is being visited
 436 |   ///   - Returns: the rewritten node
 437 |   open func visit(_ node: CompositionTypeElementListSyntax) -> CompositionTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 438 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementListSyntax.self)
 439 |   }
     :
 442 |   ///   - Parameter node: the node that is being visited
 443 |   ///   - Returns: the rewritten node
 444 |   open func visit(_ node: CompositionTypeElementSyntax) -> CompositionTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 445 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementSyntax.self)
 446 |   }
     :
 449 |   ///   - Parameter node: the node that is being visited
 450 |   ///   - Returns: the rewritten node
 451 |   open func visit(_ node: CompositionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 452 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(CompositionTypeSyntax.self))
 453 |   }
     :
 456 |   ///   - Parameter node: the node that is being visited
 457 |   ///   - Returns: the rewritten node
 458 |   open func visit(_ node: ConditionElementListSyntax) -> ConditionElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 459 |     return visitChildren(node._syntaxNode).cast(ConditionElementListSyntax.self)
 460 |   }
     :
 463 |   ///   - Parameter node: the node that is being visited
 464 |   ///   - Returns: the rewritten node
 465 |   open func visit(_ node: ConditionElementSyntax) -> ConditionElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 466 |     return visitChildren(node._syntaxNode).cast(ConditionElementSyntax.self)
 467 |   }
     :
 470 |   ///   - Parameter node: the node that is being visited
 471 |   ///   - Returns: the rewritten node
 472 |   open func visit(_ node: ConformanceRequirementSyntax) -> ConformanceRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 473 |     return visitChildren(node._syntaxNode).cast(ConformanceRequirementSyntax.self)
 474 |   }
     :
 477 |   ///   - Parameter node: the node that is being visited
 478 |   ///   - Returns: the rewritten node
 479 |   open func visit(_ node: ConsumeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 480 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ConsumeExprSyntax.self))
 481 |   }
     :
 484 |   ///   - Parameter node: the node that is being visited
 485 |   ///   - Returns: the rewritten node
 486 |   open func visit(_ node: ContinueStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 487 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ContinueStmtSyntax.self))
 488 |   }
     :
 491 |   ///   - Parameter node: the node that is being visited
 492 |   ///   - Returns: the rewritten node
 493 |   open func visit(_ node: ConventionAttributeArgumentsSyntax) -> ConventionAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 494 |     return visitChildren(node._syntaxNode).cast(ConventionAttributeArgumentsSyntax.self)
 495 |   }
     :
 498 |   ///   - Parameter node: the node that is being visited
 499 |   ///   - Returns: the rewritten node
 500 |   open func visit(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) -> ConventionWitnessMethodAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 501 |     return visitChildren(node._syntaxNode).cast(ConventionWitnessMethodAttributeArgumentsSyntax.self)
 502 |   }
     :
 505 |   ///   - Parameter node: the node that is being visited
 506 |   ///   - Returns: the rewritten node
 507 |   open func visit(_ node: CopyExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 508 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(CopyExprSyntax.self))
 509 |   }
     :
 512 |   ///   - Parameter node: the node that is being visited
 513 |   ///   - Returns: the rewritten node
 514 |   open func visit(_ node: DeclModifierDetailSyntax) -> DeclModifierDetailSyntax {
     |             `- note: potential overridden instance method 'visit' here
 515 |     return visitChildren(node._syntaxNode).cast(DeclModifierDetailSyntax.self)
 516 |   }
     :
 519 |   ///   - Parameter node: the node that is being visited
 520 |   ///   - Returns: the rewritten node
 521 |   open func visit(_ node: DeclModifierListSyntax) -> DeclModifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 522 |     return visitChildren(node._syntaxNode).cast(DeclModifierListSyntax.self)
 523 |   }
     :
 526 |   ///   - Parameter node: the node that is being visited
 527 |   ///   - Returns: the rewritten node
 528 |   open func visit(_ node: DeclModifierSyntax) -> DeclModifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 529 |     return visitChildren(node._syntaxNode).cast(DeclModifierSyntax.self)
 530 |   }
     :
 533 |   ///   - Parameter node: the node that is being visited
 534 |   ///   - Returns: the rewritten node
 535 |   open func visit(_ node: DeclNameArgumentListSyntax) -> DeclNameArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 536 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentListSyntax.self)
 537 |   }
     :
 540 |   ///   - Parameter node: the node that is being visited
 541 |   ///   - Returns: the rewritten node
 542 |   open func visit(_ node: DeclNameArgumentSyntax) -> DeclNameArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 543 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentSyntax.self)
 544 |   }
     :
 547 |   ///   - Parameter node: the node that is being visited
 548 |   ///   - Returns: the rewritten node
 549 |   open func visit(_ node: DeclNameArgumentsSyntax) -> DeclNameArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 550 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentsSyntax.self)
 551 |   }
     :
 554 |   ///   - Parameter node: the node that is being visited
 555 |   ///   - Returns: the rewritten node
 556 |   open func visit(_ node: DeclReferenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 557 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DeclReferenceExprSyntax.self))
 558 |   }
     :
 561 |   ///   - Parameter node: the node that is being visited
 562 |   ///   - Returns: the rewritten node
 563 |   open func visit(_ node: DeferStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 564 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DeferStmtSyntax.self))
 565 |   }
     :
 568 |   ///   - Parameter node: the node that is being visited
 569 |   ///   - Returns: the rewritten node
 570 |   open func visit(_ node: DeinitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 571 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(DeinitializerDeclSyntax.self))
 572 |   }
     :
 575 |   ///   - Parameter node: the node that is being visited
 576 |   ///   - Returns: the rewritten node
 577 |   open func visit(_ node: DeinitializerEffectSpecifiersSyntax) -> DeinitializerEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 578 |     return visitChildren(node._syntaxNode).cast(DeinitializerEffectSpecifiersSyntax.self)
 579 |   }
     :
 582 |   ///   - Parameter node: the node that is being visited
 583 |   ///   - Returns: the rewritten node
 584 |   open func visit(_ node: DerivativeAttributeArgumentsSyntax) -> DerivativeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 585 |     return visitChildren(node._syntaxNode).cast(DerivativeAttributeArgumentsSyntax.self)
 586 |   }
     :
 589 |   ///   - Parameter node: the node that is being visited
 590 |   ///   - Returns: the rewritten node
 591 |   open func visit(_ node: DesignatedTypeListSyntax) -> DesignatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 592 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeListSyntax.self)
 593 |   }
     :
 596 |   ///   - Parameter node: the node that is being visited
 597 |   ///   - Returns: the rewritten node
 598 |   open func visit(_ node: DesignatedTypeSyntax) -> DesignatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 599 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeSyntax.self)
 600 |   }
     :
 603 |   ///   - Parameter node: the node that is being visited
 604 |   ///   - Returns: the rewritten node
 605 |   open func visit(_ node: DictionaryElementListSyntax) -> DictionaryElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 606 |     return visitChildren(node._syntaxNode).cast(DictionaryElementListSyntax.self)
 607 |   }
     :
 610 |   ///   - Parameter node: the node that is being visited
 611 |   ///   - Returns: the rewritten node
 612 |   open func visit(_ node: DictionaryElementSyntax) -> DictionaryElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 613 |     return visitChildren(node._syntaxNode).cast(DictionaryElementSyntax.self)
 614 |   }
     :
 617 |   ///   - Parameter node: the node that is being visited
 618 |   ///   - Returns: the rewritten node
 619 |   open func visit(_ node: DictionaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 620 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DictionaryExprSyntax.self))
 621 |   }
     :
 624 |   ///   - Parameter node: the node that is being visited
 625 |   ///   - Returns: the rewritten node
 626 |   open func visit(_ node: DictionaryTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 627 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(DictionaryTypeSyntax.self))
 628 |   }
     :
 631 |   ///   - Parameter node: the node that is being visited
 632 |   ///   - Returns: the rewritten node
 633 |   open func visit(_ node: DifferentiabilityArgumentListSyntax) -> DifferentiabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 634 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentListSyntax.self)
 635 |   }
     :
 638 |   ///   - Parameter node: the node that is being visited
 639 |   ///   - Returns: the rewritten node
 640 |   open func visit(_ node: DifferentiabilityArgumentSyntax) -> DifferentiabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 641 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentSyntax.self)
 642 |   }
     :
 645 |   ///   - Parameter node: the node that is being visited
 646 |   ///   - Returns: the rewritten node
 647 |   open func visit(_ node: DifferentiabilityArgumentsSyntax) -> DifferentiabilityArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 648 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentsSyntax.self)
 649 |   }
     :
 652 |   ///   - Parameter node: the node that is being visited
 653 |   ///   - Returns: the rewritten node
 654 |   open func visit(_ node: DifferentiabilityWithRespectToArgumentSyntax) -> DifferentiabilityWithRespectToArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 655 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityWithRespectToArgumentSyntax.self)
 656 |   }
     :
 659 |   ///   - Parameter node: the node that is being visited
 660 |   ///   - Returns: the rewritten node
 661 |   open func visit(_ node: DifferentiableAttributeArgumentsSyntax) -> DifferentiableAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 662 |     return visitChildren(node._syntaxNode).cast(DifferentiableAttributeArgumentsSyntax.self)
 663 |   }
     :
 666 |   ///   - Parameter node: the node that is being visited
 667 |   ///   - Returns: the rewritten node
 668 |   open func visit(_ node: DiscardAssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 669 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DiscardAssignmentExprSyntax.self))
 670 |   }
     :
 673 |   ///   - Parameter node: the node that is being visited
 674 |   ///   - Returns: the rewritten node
 675 |   open func visit(_ node: DiscardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 676 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DiscardStmtSyntax.self))
 677 |   }
     :
 690 |   ///   - Parameter node: the node that is being visited
 691 |   ///   - Returns: the rewritten node
 692 |   open func visit(_ node: DoStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 693 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DoStmtSyntax.self))
 694 |   }
     :
 697 |   ///   - Parameter node: the node that is being visited
 698 |   ///   - Returns: the rewritten node
 699 |   open func visit(_ node: DocumentationAttributeArgumentListSyntax) -> DocumentationAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 700 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentListSyntax.self)
 701 |   }
     :
 704 |   ///   - Parameter node: the node that is being visited
 705 |   ///   - Returns: the rewritten node
 706 |   open func visit(_ node: DocumentationAttributeArgumentSyntax) -> DocumentationAttributeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 707 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentSyntax.self)
 708 |   }
     :
 711 |   ///   - Parameter node: the node that is being visited
 712 |   ///   - Returns: the rewritten node
 713 |   open func visit(_ node: DynamicReplacementAttributeArgumentsSyntax) -> DynamicReplacementAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 714 |     return visitChildren(node._syntaxNode).cast(DynamicReplacementAttributeArgumentsSyntax.self)
 715 |   }
     :
 718 |   ///   - Parameter node: the node that is being visited
 719 |   ///   - Returns: the rewritten node
 720 |   open func visit(_ node: EditorPlaceholderDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 721 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderDeclSyntax.self))
 722 |   }
     :
 725 |   ///   - Parameter node: the node that is being visited
 726 |   ///   - Returns: the rewritten node
 727 |   open func visit(_ node: EditorPlaceholderExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 728 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderExprSyntax.self))
 729 |   }
     :
 732 |   ///   - Parameter node: the node that is being visited
 733 |   ///   - Returns: the rewritten node
 734 |   open func visit(_ node: EffectsAttributeArgumentListSyntax) -> EffectsAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 735 |     return visitChildren(node._syntaxNode).cast(EffectsAttributeArgumentListSyntax.self)
 736 |   }
     :
 739 |   ///   - Parameter node: the node that is being visited
 740 |   ///   - Returns: the rewritten node
 741 |   open func visit(_ node: EnumCaseDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 742 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumCaseDeclSyntax.self))
 743 |   }
     :
 746 |   ///   - Parameter node: the node that is being visited
 747 |   ///   - Returns: the rewritten node
 748 |   open func visit(_ node: EnumCaseElementListSyntax) -> EnumCaseElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 749 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementListSyntax.self)
 750 |   }
     :
 753 |   ///   - Parameter node: the node that is being visited
 754 |   ///   - Returns: the rewritten node
 755 |   open func visit(_ node: EnumCaseElementSyntax) -> EnumCaseElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 756 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementSyntax.self)
 757 |   }
     :
 760 |   ///   - Parameter node: the node that is being visited
 761 |   ///   - Returns: the rewritten node
 762 |   open func visit(_ node: EnumCaseParameterClauseSyntax) -> EnumCaseParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 763 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterClauseSyntax.self)
 764 |   }
     :
 767 |   ///   - Parameter node: the node that is being visited
 768 |   ///   - Returns: the rewritten node
 769 |   open func visit(_ node: EnumCaseParameterListSyntax) -> EnumCaseParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 770 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterListSyntax.self)
 771 |   }
     :
 774 |   ///   - Parameter node: the node that is being visited
 775 |   ///   - Returns: the rewritten node
 776 |   open func visit(_ node: EnumCaseParameterSyntax) -> EnumCaseParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 777 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterSyntax.self)
 778 |   }
     :
 781 |   ///   - Parameter node: the node that is being visited
 782 |   ///   - Returns: the rewritten node
 783 |   open func visit(_ node: EnumDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 784 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumDeclSyntax.self))
 785 |   }
     :
 788 |   ///   - Parameter node: the node that is being visited
 789 |   ///   - Returns: the rewritten node
 790 |   open func visit(_ node: ExposeAttributeArgumentsSyntax) -> ExposeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 791 |     return visitChildren(node._syntaxNode).cast(ExposeAttributeArgumentsSyntax.self)
 792 |   }
     :
 795 |   ///   - Parameter node: the node that is being visited
 796 |   ///   - Returns: the rewritten node
 797 |   open func visit(_ node: ExprListSyntax) -> ExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 798 |     return visitChildren(node._syntaxNode).cast(ExprListSyntax.self)
 799 |   }
     :
 802 |   ///   - Parameter node: the node that is being visited
 803 |   ///   - Returns: the rewritten node
 804 |   open func visit(_ node: ExpressionPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 805 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ExpressionPatternSyntax.self))
 806 |   }
     :
 809 |   ///   - Parameter node: the node that is being visited
 810 |   ///   - Returns: the rewritten node
 811 |   open func visit(_ node: ExpressionSegmentSyntax) -> ExpressionSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 812 |     return visitChildren(node._syntaxNode).cast(ExpressionSegmentSyntax.self)
 813 |   }
     :
 816 |   ///   - Parameter node: the node that is being visited
 817 |   ///   - Returns: the rewritten node
 818 |   open func visit(_ node: ExpressionStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 819 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ExpressionStmtSyntax.self))
 820 |   }
     :
 823 |   ///   - Parameter node: the node that is being visited
 824 |   ///   - Returns: the rewritten node
 825 |   open func visit(_ node: ExtensionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 826 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ExtensionDeclSyntax.self))
 827 |   }
     :
 830 |   ///   - Parameter node: the node that is being visited
 831 |   ///   - Returns: the rewritten node
 832 |   open func visit(_ node: FallThroughStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 833 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(FallThroughStmtSyntax.self))
 834 |   }
     :
 837 |   ///   - Parameter node: the node that is being visited
 838 |   ///   - Returns: the rewritten node
 839 |   open func visit(_ node: FloatLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 840 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FloatLiteralExprSyntax.self))
 841 |   }
     :
 844 |   ///   - Parameter node: the node that is being visited
 845 |   ///   - Returns: the rewritten node
 846 |   open func visit(_ node: ForStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 847 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ForStmtSyntax.self))
 848 |   }
     :
 851 |   ///   - Parameter node: the node that is being visited
 852 |   ///   - Returns: the rewritten node
 853 |   open func visit(_ node: ForceUnwrapExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 854 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ForceUnwrapExprSyntax.self))
 855 |   }
     :
 858 |   ///   - Parameter node: the node that is being visited
 859 |   ///   - Returns: the rewritten node
 860 |   open func visit(_ node: FunctionCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 861 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FunctionCallExprSyntax.self))
 862 |   }
     :
 865 |   ///   - Parameter node: the node that is being visited
 866 |   ///   - Returns: the rewritten node
 867 |   open func visit(_ node: FunctionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 868 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(FunctionDeclSyntax.self))
 869 |   }
     :
 872 |   ///   - Parameter node: the node that is being visited
 873 |   ///   - Returns: the rewritten node
 874 |   open func visit(_ node: FunctionEffectSpecifiersSyntax) -> FunctionEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 875 |     return visitChildren(node._syntaxNode).cast(FunctionEffectSpecifiersSyntax.self)
 876 |   }
     :
 879 |   ///   - Parameter node: the node that is being visited
 880 |   ///   - Returns: the rewritten node
 881 |   open func visit(_ node: FunctionParameterClauseSyntax) -> FunctionParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 882 |     return visitChildren(node._syntaxNode).cast(FunctionParameterClauseSyntax.self)
 883 |   }
     :
 886 |   ///   - Parameter node: the node that is being visited
 887 |   ///   - Returns: the rewritten node
 888 |   open func visit(_ node: FunctionParameterListSyntax) -> FunctionParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 889 |     return visitChildren(node._syntaxNode).cast(FunctionParameterListSyntax.self)
 890 |   }
     :
 893 |   ///   - Parameter node: the node that is being visited
 894 |   ///   - Returns: the rewritten node
 895 |   open func visit(_ node: FunctionParameterSyntax) -> FunctionParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 896 |     return visitChildren(node._syntaxNode).cast(FunctionParameterSyntax.self)
 897 |   }
     :
 900 |   ///   - Parameter node: the node that is being visited
 901 |   ///   - Returns: the rewritten node
 902 |   open func visit(_ node: FunctionSignatureSyntax) -> FunctionSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 903 |     return visitChildren(node._syntaxNode).cast(FunctionSignatureSyntax.self)
 904 |   }
     :
 907 |   ///   - Parameter node: the node that is being visited
 908 |   ///   - Returns: the rewritten node
 909 |   open func visit(_ node: FunctionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 910 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(FunctionTypeSyntax.self))
 911 |   }
     :
 914 |   ///   - Parameter node: the node that is being visited
 915 |   ///   - Returns: the rewritten node
 916 |   open func visit(_ node: GenericArgumentClauseSyntax) -> GenericArgumentClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 917 |     return visitChildren(node._syntaxNode).cast(GenericArgumentClauseSyntax.self)
 918 |   }
     :
 921 |   ///   - Parameter node: the node that is being visited
 922 |   ///   - Returns: the rewritten node
 923 |   open func visit(_ node: GenericArgumentListSyntax) -> GenericArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 924 |     return visitChildren(node._syntaxNode).cast(GenericArgumentListSyntax.self)
 925 |   }
     :
 928 |   ///   - Parameter node: the node that is being visited
 929 |   ///   - Returns: the rewritten node
 930 |   open func visit(_ node: GenericArgumentSyntax) -> GenericArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 931 |     return visitChildren(node._syntaxNode).cast(GenericArgumentSyntax.self)
 932 |   }
     :
 935 |   ///   - Parameter node: the node that is being visited
 936 |   ///   - Returns: the rewritten node
 937 |   open func visit(_ node: GenericParameterClauseSyntax) -> GenericParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 938 |     return visitChildren(node._syntaxNode).cast(GenericParameterClauseSyntax.self)
 939 |   }
     :
 942 |   ///   - Parameter node: the node that is being visited
 943 |   ///   - Returns: the rewritten node
 944 |   open func visit(_ node: GenericParameterListSyntax) -> GenericParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 945 |     return visitChildren(node._syntaxNode).cast(GenericParameterListSyntax.self)
 946 |   }
     :
 949 |   ///   - Parameter node: the node that is being visited
 950 |   ///   - Returns: the rewritten node
 951 |   open func visit(_ node: GenericParameterSyntax) -> GenericParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 952 |     return visitChildren(node._syntaxNode).cast(GenericParameterSyntax.self)
 953 |   }
     :
 956 |   ///   - Parameter node: the node that is being visited
 957 |   ///   - Returns: the rewritten node
 958 |   open func visit(_ node: GenericRequirementListSyntax) -> GenericRequirementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 959 |     return visitChildren(node._syntaxNode).cast(GenericRequirementListSyntax.self)
 960 |   }
     :
 963 |   ///   - Parameter node: the node that is being visited
 964 |   ///   - Returns: the rewritten node
 965 |   open func visit(_ node: GenericRequirementSyntax) -> GenericRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 966 |     return visitChildren(node._syntaxNode).cast(GenericRequirementSyntax.self)
 967 |   }
     :
 970 |   ///   - Parameter node: the node that is being visited
 971 |   ///   - Returns: the rewritten node
 972 |   open func visit(_ node: GenericSpecializationExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 973 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(GenericSpecializationExprSyntax.self))
 974 |   }
     :
 977 |   ///   - Parameter node: the node that is being visited
 978 |   ///   - Returns: the rewritten node
 979 |   open func visit(_ node: GenericWhereClauseSyntax) -> GenericWhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 980 |     return visitChildren(node._syntaxNode).cast(GenericWhereClauseSyntax.self)
 981 |   }
     :
 984 |   ///   - Parameter node: the node that is being visited
 985 |   ///   - Returns: the rewritten node
 986 |   open func visit(_ node: GuardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 987 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(GuardStmtSyntax.self))
 988 |   }
     :
 991 |   ///   - Parameter node: the node that is being visited
 992 |   ///   - Returns: the rewritten node
 993 |   open func visit(_ node: IdentifierPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 994 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IdentifierPatternSyntax.self))
 995 |   }
     :
 998 |   ///   - Parameter node: the node that is being visited
 999 |   ///   - Returns: the rewritten node
1000 |   open func visit(_ node: IdentifierTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1001 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(IdentifierTypeSyntax.self))
1002 |   }
     :
1005 |   ///   - Parameter node: the node that is being visited
1006 |   ///   - Returns: the rewritten node
1007 |   open func visit(_ node: IfConfigClauseListSyntax) -> IfConfigClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1008 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseListSyntax.self)
1009 |   }
     :
1012 |   ///   - Parameter node: the node that is being visited
1013 |   ///   - Returns: the rewritten node
1014 |   open func visit(_ node: IfConfigClauseSyntax) -> IfConfigClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1015 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseSyntax.self)
1016 |   }
     :
1019 |   ///   - Parameter node: the node that is being visited
1020 |   ///   - Returns: the rewritten node
1021 |   open func visit(_ node: IfConfigDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1022 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(IfConfigDeclSyntax.self))
1023 |   }
     :
1026 |   ///   - Parameter node: the node that is being visited
1027 |   ///   - Returns: the rewritten node
1028 |   open func visit(_ node: IfExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1029 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IfExprSyntax.self))
1030 |   }
     :
1033 |   ///   - Parameter node: the node that is being visited
1034 |   ///   - Returns: the rewritten node
1035 |   open func visit(_ node: ImplementsAttributeArgumentsSyntax) -> ImplementsAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1036 |     return visitChildren(node._syntaxNode).cast(ImplementsAttributeArgumentsSyntax.self)
1037 |   }
     :
1040 |   ///   - Parameter node: the node that is being visited
1041 |   ///   - Returns: the rewritten node
1042 |   open func visit(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1043 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ImplicitlyUnwrappedOptionalTypeSyntax.self))
1044 |   }
     :
1047 |   ///   - Parameter node: the node that is being visited
1048 |   ///   - Returns: the rewritten node
1049 |   open func visit(_ node: ImportDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1050 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ImportDeclSyntax.self))
1051 |   }
     :
1054 |   ///   - Parameter node: the node that is being visited
1055 |   ///   - Returns: the rewritten node
1056 |   open func visit(_ node: ImportPathComponentListSyntax) -> ImportPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1057 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentListSyntax.self)
1058 |   }
     :
1061 |   ///   - Parameter node: the node that is being visited
1062 |   ///   - Returns: the rewritten node
1063 |   open func visit(_ node: ImportPathComponentSyntax) -> ImportPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1064 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentSyntax.self)
1065 |   }
     :
1068 |   ///   - Parameter node: the node that is being visited
1069 |   ///   - Returns: the rewritten node
1070 |   open func visit(_ node: InOutExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1071 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InOutExprSyntax.self))
1072 |   }
     :
1075 |   ///   - Parameter node: the node that is being visited
1076 |   ///   - Returns: the rewritten node
1077 |   open func visit(_ node: InfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1078 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InfixOperatorExprSyntax.self))
1079 |   }
     :
1082 |   ///   - Parameter node: the node that is being visited
1083 |   ///   - Returns: the rewritten node
1084 |   open func visit(_ node: InheritanceClauseSyntax) -> InheritanceClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1085 |     return visitChildren(node._syntaxNode).cast(InheritanceClauseSyntax.self)
1086 |   }
     :
1089 |   ///   - Parameter node: the node that is being visited
1090 |   ///   - Returns: the rewritten node
1091 |   open func visit(_ node: InheritedTypeListSyntax) -> InheritedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1092 |     return visitChildren(node._syntaxNode).cast(InheritedTypeListSyntax.self)
1093 |   }
     :
1096 |   ///   - Parameter node: the node that is being visited
1097 |   ///   - Returns: the rewritten node
1098 |   open func visit(_ node: InheritedTypeSyntax) -> InheritedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1099 |     return visitChildren(node._syntaxNode).cast(InheritedTypeSyntax.self)
1100 |   }
     :
1103 |   ///   - Parameter node: the node that is being visited
1104 |   ///   - Returns: the rewritten node
1105 |   open func visit(_ node: InitializerClauseSyntax) -> InitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1106 |     return visitChildren(node._syntaxNode).cast(InitializerClauseSyntax.self)
1107 |   }
     :
1110 |   ///   - Parameter node: the node that is being visited
1111 |   ///   - Returns: the rewritten node
1112 |   open func visit(_ node: InitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1113 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(InitializerDeclSyntax.self))
1114 |   }
     :
1117 |   ///   - Parameter node: the node that is being visited
1118 |   ///   - Returns: the rewritten node
1119 |   open func visit(_ node: IntegerLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1120 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IntegerLiteralExprSyntax.self))
1121 |   }
     :
1124 |   ///   - Parameter node: the node that is being visited
1125 |   ///   - Returns: the rewritten node
1126 |   open func visit(_ node: IsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1127 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IsExprSyntax.self))
1128 |   }
     :
1131 |   ///   - Parameter node: the node that is being visited
1132 |   ///   - Returns: the rewritten node
1133 |   open func visit(_ node: IsTypePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1134 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IsTypePatternSyntax.self))
1135 |   }
     :
1138 |   ///   - Parameter node: the node that is being visited
1139 |   ///   - Returns: the rewritten node
1140 |   open func visit(_ node: KeyPathComponentListSyntax) -> KeyPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1141 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentListSyntax.self)
1142 |   }
     :
1145 |   ///   - Parameter node: the node that is being visited
1146 |   ///   - Returns: the rewritten node
1147 |   open func visit(_ node: KeyPathComponentSyntax) -> KeyPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1148 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentSyntax.self)
1149 |   }
     :
1152 |   ///   - Parameter node: the node that is being visited
1153 |   ///   - Returns: the rewritten node
1154 |   open func visit(_ node: KeyPathExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1155 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(KeyPathExprSyntax.self))
1156 |   }
     :
1159 |   ///   - Parameter node: the node that is being visited
1160 |   ///   - Returns: the rewritten node
1161 |   open func visit(_ node: KeyPathOptionalComponentSyntax) -> KeyPathOptionalComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1162 |     return visitChildren(node._syntaxNode).cast(KeyPathOptionalComponentSyntax.self)
1163 |   }
     :
1166 |   ///   - Parameter node: the node that is being visited
1167 |   ///   - Returns: the rewritten node
1168 |   open func visit(_ node: KeyPathPropertyComponentSyntax) -> KeyPathPropertyComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1169 |     return visitChildren(node._syntaxNode).cast(KeyPathPropertyComponentSyntax.self)
1170 |   }
     :
1173 |   ///   - Parameter node: the node that is being visited
1174 |   ///   - Returns: the rewritten node
1175 |   open func visit(_ node: KeyPathSubscriptComponentSyntax) -> KeyPathSubscriptComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1176 |     return visitChildren(node._syntaxNode).cast(KeyPathSubscriptComponentSyntax.self)
1177 |   }
     :
1180 |   ///   - Parameter node: the node that is being visited
1181 |   ///   - Returns: the rewritten node
1182 |   open func visit(_ node: LabeledExprListSyntax) -> LabeledExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1183 |     return visitChildren(node._syntaxNode).cast(LabeledExprListSyntax.self)
1184 |   }
     :
1187 |   ///   - Parameter node: the node that is being visited
1188 |   ///   - Returns: the rewritten node
1189 |   open func visit(_ node: LabeledExprSyntax) -> LabeledExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1190 |     return visitChildren(node._syntaxNode).cast(LabeledExprSyntax.self)
1191 |   }
     :
1194 |   ///   - Parameter node: the node that is being visited
1195 |   ///   - Returns: the rewritten node
1196 |   open func visit(_ node: LabeledSpecializeArgumentSyntax) -> LabeledSpecializeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1197 |     return visitChildren(node._syntaxNode).cast(LabeledSpecializeArgumentSyntax.self)
1198 |   }
     :
1201 |   ///   - Parameter node: the node that is being visited
1202 |   ///   - Returns: the rewritten node
1203 |   open func visit(_ node: LabeledStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1204 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(LabeledStmtSyntax.self))
1205 |   }
     :
1208 |   ///   - Parameter node: the node that is being visited
1209 |   ///   - Returns: the rewritten node
1210 |   open func visit(_ node: LayoutRequirementSyntax) -> LayoutRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1211 |     return visitChildren(node._syntaxNode).cast(LayoutRequirementSyntax.self)
1212 |   }
     :
1245 |   ///   - Parameter node: the node that is being visited
1246 |   ///   - Returns: the rewritten node
1247 |   open func visit(_ node: MacroDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1248 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroDeclSyntax.self))
1249 |   }
     :
1252 |   ///   - Parameter node: the node that is being visited
1253 |   ///   - Returns: the rewritten node
1254 |   open func visit(_ node: MacroExpansionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1255 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionDeclSyntax.self))
1256 |   }
     :
1259 |   ///   - Parameter node: the node that is being visited
1260 |   ///   - Returns: the rewritten node
1261 |   open func visit(_ node: MacroExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1262 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionExprSyntax.self))
1263 |   }
     :
1266 |   ///   - Parameter node: the node that is being visited
1267 |   ///   - Returns: the rewritten node
1268 |   open func visit(_ node: MatchingPatternConditionSyntax) -> MatchingPatternConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1269 |     return visitChildren(node._syntaxNode).cast(MatchingPatternConditionSyntax.self)
1270 |   }
     :
1273 |   ///   - Parameter node: the node that is being visited
1274 |   ///   - Returns: the rewritten node
1275 |   open func visit(_ node: MemberAccessExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1276 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MemberAccessExprSyntax.self))
1277 |   }
     :
1280 |   ///   - Parameter node: the node that is being visited
1281 |   ///   - Returns: the rewritten node
1282 |   open func visit(_ node: MemberBlockItemListSyntax) -> MemberBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1283 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemListSyntax.self)
1284 |   }
     :
1287 |   ///   - Parameter node: the node that is being visited
1288 |   ///   - Returns: the rewritten node
1289 |   open func visit(_ node: MemberBlockItemSyntax) -> MemberBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1290 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemSyntax.self)
1291 |   }
     :
1294 |   ///   - Parameter node: the node that is being visited
1295 |   ///   - Returns: the rewritten node
1296 |   open func visit(_ node: MemberBlockSyntax) -> MemberBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
1297 |     return visitChildren(node._syntaxNode).cast(MemberBlockSyntax.self)
1298 |   }
     :
1301 |   ///   - Parameter node: the node that is being visited
1302 |   ///   - Returns: the rewritten node
1303 |   open func visit(_ node: MemberTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1304 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MemberTypeSyntax.self))
1305 |   }
     :
1308 |   ///   - Parameter node: the node that is being visited
1309 |   ///   - Returns: the rewritten node
1310 |   open func visit(_ node: MetatypeTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1311 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MetatypeTypeSyntax.self))
1312 |   }
     :
1315 |   ///   - Parameter node: the node that is being visited
1316 |   ///   - Returns: the rewritten node
1317 |   open func visit(_ node: MissingDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1318 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MissingDeclSyntax.self))
1319 |   }
     :
1322 |   ///   - Parameter node: the node that is being visited
1323 |   ///   - Returns: the rewritten node
1324 |   open func visit(_ node: MissingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1325 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MissingExprSyntax.self))
1326 |   }
     :
1329 |   ///   - Parameter node: the node that is being visited
1330 |   ///   - Returns: the rewritten node
1331 |   open func visit(_ node: MissingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1332 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(MissingPatternSyntax.self))
1333 |   }
     :
1336 |   ///   - Parameter node: the node that is being visited
1337 |   ///   - Returns: the rewritten node
1338 |   open func visit(_ node: MissingStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1339 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(MissingStmtSyntax.self))
1340 |   }
     :
1343 |   ///   - Parameter node: the node that is being visited
1344 |   ///   - Returns: the rewritten node
1345 |   open func visit(_ node: MissingSyntax) -> Syntax {
     |             `- note: potential overridden instance method 'visit' here
1346 |     return Syntax(visitChildren(node._syntaxNode).cast(MissingSyntax.self))
1347 |   }
     :
1350 |   ///   - Parameter node: the node that is being visited
1351 |   ///   - Returns: the rewritten node
1352 |   open func visit(_ node: MissingTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1353 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MissingTypeSyntax.self))
1354 |   }
     :
1357 |   ///   - Parameter node: the node that is being visited
1358 |   ///   - Returns: the rewritten node
1359 |   open func visit(_ node: MultipleTrailingClosureElementListSyntax) -> MultipleTrailingClosureElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1360 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementListSyntax.self)
1361 |   }
     :
1364 |   ///   - Parameter node: the node that is being visited
1365 |   ///   - Returns: the rewritten node
1366 |   open func visit(_ node: MultipleTrailingClosureElementSyntax) -> MultipleTrailingClosureElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1367 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementSyntax.self)
1368 |   }
     :
1371 |   ///   - Parameter node: the node that is being visited
1372 |   ///   - Returns: the rewritten node
1373 |   open func visit(_ node: NamedOpaqueReturnTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1374 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(NamedOpaqueReturnTypeSyntax.self))
1375 |   }
     :
1378 |   ///   - Parameter node: the node that is being visited
1379 |   ///   - Returns: the rewritten node
1380 |   open func visit(_ node: NilLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1381 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(NilLiteralExprSyntax.self))
1382 |   }
     :
1385 |   ///   - Parameter node: the node that is being visited
1386 |   ///   - Returns: the rewritten node
1387 |   open func visit(_ node: ObjCSelectorPieceListSyntax) -> ObjCSelectorPieceListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1388 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceListSyntax.self)
1389 |   }
     :
1392 |   ///   - Parameter node: the node that is being visited
1393 |   ///   - Returns: the rewritten node
1394 |   open func visit(_ node: ObjCSelectorPieceSyntax) -> ObjCSelectorPieceSyntax {
     |             `- note: potential overridden instance method 'visit' here
1395 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceSyntax.self)
1396 |   }
     :
1399 |   ///   - Parameter node: the node that is being visited
1400 |   ///   - Returns: the rewritten node
1401 |   open func visit(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) -> OpaqueReturnTypeOfAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1402 |     return visitChildren(node._syntaxNode).cast(OpaqueReturnTypeOfAttributeArgumentsSyntax.self)
1403 |   }
     :
1406 |   ///   - Parameter node: the node that is being visited
1407 |   ///   - Returns: the rewritten node
1408 |   open func visit(_ node: OperatorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1409 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(OperatorDeclSyntax.self))
1410 |   }
     :
1413 |   ///   - Parameter node: the node that is being visited
1414 |   ///   - Returns: the rewritten node
1415 |   open func visit(_ node: OperatorPrecedenceAndTypesSyntax) -> OperatorPrecedenceAndTypesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1416 |     return visitChildren(node._syntaxNode).cast(OperatorPrecedenceAndTypesSyntax.self)
1417 |   }
     :
1420 |   ///   - Parameter node: the node that is being visited
1421 |   ///   - Returns: the rewritten node
1422 |   open func visit(_ node: OptionalBindingConditionSyntax) -> OptionalBindingConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1423 |     return visitChildren(node._syntaxNode).cast(OptionalBindingConditionSyntax.self)
1424 |   }
     :
1427 |   ///   - Parameter node: the node that is being visited
1428 |   ///   - Returns: the rewritten node
1429 |   open func visit(_ node: OptionalChainingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1430 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(OptionalChainingExprSyntax.self))
1431 |   }
     :
1434 |   ///   - Parameter node: the node that is being visited
1435 |   ///   - Returns: the rewritten node
1436 |   open func visit(_ node: OptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1437 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(OptionalTypeSyntax.self))
1438 |   }
     :
1441 |   ///   - Parameter node: the node that is being visited
1442 |   ///   - Returns: the rewritten node
1443 |   open func visit(_ node: OriginallyDefinedInAttributeArgumentsSyntax) -> OriginallyDefinedInAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1444 |     return visitChildren(node._syntaxNode).cast(OriginallyDefinedInAttributeArgumentsSyntax.self)
1445 |   }
     :
1448 |   ///   - Parameter node: the node that is being visited
1449 |   ///   - Returns: the rewritten node
1450 |   open func visit(_ node: PackElementExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1451 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackElementExprSyntax.self))
1452 |   }
     :
1455 |   ///   - Parameter node: the node that is being visited
1456 |   ///   - Returns: the rewritten node
1457 |   open func visit(_ node: PackElementTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1458 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackElementTypeSyntax.self))
1459 |   }
     :
1462 |   ///   - Parameter node: the node that is being visited
1463 |   ///   - Returns: the rewritten node
1464 |   open func visit(_ node: PackExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1465 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackExpansionExprSyntax.self))
1466 |   }
     :
1469 |   ///   - Parameter node: the node that is being visited
1470 |   ///   - Returns: the rewritten node
1471 |   open func visit(_ node: PackExpansionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1472 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackExpansionTypeSyntax.self))
1473 |   }
     :
1476 |   ///   - Parameter node: the node that is being visited
1477 |   ///   - Returns: the rewritten node
1478 |   open func visit(_ node: PatternBindingListSyntax) -> PatternBindingListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1479 |     return visitChildren(node._syntaxNode).cast(PatternBindingListSyntax.self)
1480 |   }
     :
1483 |   ///   - Parameter node: the node that is being visited
1484 |   ///   - Returns: the rewritten node
1485 |   open func visit(_ node: PatternBindingSyntax) -> PatternBindingSyntax {
     |             `- note: potential overridden instance method 'visit' here
1486 |     return visitChildren(node._syntaxNode).cast(PatternBindingSyntax.self)
1487 |   }
     :
1490 |   ///   - Parameter node: the node that is being visited
1491 |   ///   - Returns: the rewritten node
1492 |   open func visit(_ node: PatternExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1493 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PatternExprSyntax.self))
1494 |   }
     :
1497 |   ///   - Parameter node: the node that is being visited
1498 |   ///   - Returns: the rewritten node
1499 |   open func visit(_ node: PlatformVersionItemListSyntax) -> PlatformVersionItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1500 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemListSyntax.self)
1501 |   }
     :
1504 |   ///   - Parameter node: the node that is being visited
1505 |   ///   - Returns: the rewritten node
1506 |   open func visit(_ node: PlatformVersionItemSyntax) -> PlatformVersionItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1507 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemSyntax.self)
1508 |   }
     :
1511 |   ///   - Parameter node: the node that is being visited
1512 |   ///   - Returns: the rewritten node
1513 |   open func visit(_ node: PlatformVersionSyntax) -> PlatformVersionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1514 |     return visitChildren(node._syntaxNode).cast(PlatformVersionSyntax.self)
1515 |   }
     :
1518 |   ///   - Parameter node: the node that is being visited
1519 |   ///   - Returns: the rewritten node
1520 |   open func visit(_ node: PostfixIfConfigExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1521 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixIfConfigExprSyntax.self))
1522 |   }
     :
1525 |   ///   - Parameter node: the node that is being visited
1526 |   ///   - Returns: the rewritten node
1527 |   open func visit(_ node: PostfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1528 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixOperatorExprSyntax.self))
1529 |   }
     :
1532 |   ///   - Parameter node: the node that is being visited
1533 |   ///   - Returns: the rewritten node
1534 |   open func visit(_ node: PoundSourceLocationArgumentsSyntax) -> PoundSourceLocationArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1535 |     return visitChildren(node._syntaxNode).cast(PoundSourceLocationArgumentsSyntax.self)
1536 |   }
     :
1539 |   ///   - Parameter node: the node that is being visited
1540 |   ///   - Returns: the rewritten node
1541 |   open func visit(_ node: PoundSourceLocationSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1542 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PoundSourceLocationSyntax.self))
1543 |   }
     :
1546 |   ///   - Parameter node: the node that is being visited
1547 |   ///   - Returns: the rewritten node
1548 |   open func visit(_ node: PrecedenceGroupAssignmentSyntax) -> PrecedenceGroupAssignmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1549 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssignmentSyntax.self)
1550 |   }
     :
1553 |   ///   - Parameter node: the node that is being visited
1554 |   ///   - Returns: the rewritten node
1555 |   open func visit(_ node: PrecedenceGroupAssociativitySyntax) -> PrecedenceGroupAssociativitySyntax {
     |             `- note: potential overridden instance method 'visit' here
1556 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssociativitySyntax.self)
1557 |   }
     :
1560 |   ///   - Parameter node: the node that is being visited
1561 |   ///   - Returns: the rewritten node
1562 |   open func visit(_ node: PrecedenceGroupAttributeListSyntax) -> PrecedenceGroupAttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1563 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAttributeListSyntax.self)
1564 |   }
     :
1567 |   ///   - Parameter node: the node that is being visited
1568 |   ///   - Returns: the rewritten node
1569 |   open func visit(_ node: PrecedenceGroupDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1570 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PrecedenceGroupDeclSyntax.self))
1571 |   }
     :
1574 |   ///   - Parameter node: the node that is being visited
1575 |   ///   - Returns: the rewritten node
1576 |   open func visit(_ node: PrecedenceGroupNameListSyntax) -> PrecedenceGroupNameListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1577 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameListSyntax.self)
1578 |   }
     :
1581 |   ///   - Parameter node: the node that is being visited
1582 |   ///   - Returns: the rewritten node
1583 |   open func visit(_ node: PrecedenceGroupNameSyntax) -> PrecedenceGroupNameSyntax {
     |             `- note: potential overridden instance method 'visit' here
1584 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameSyntax.self)
1585 |   }
     :
1588 |   ///   - Parameter node: the node that is being visited
1589 |   ///   - Returns: the rewritten node
1590 |   open func visit(_ node: PrecedenceGroupRelationSyntax) -> PrecedenceGroupRelationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1591 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupRelationSyntax.self)
1592 |   }
     :
1595 |   ///   - Parameter node: the node that is being visited
1596 |   ///   - Returns: the rewritten node
1597 |   open func visit(_ node: PrefixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1598 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PrefixOperatorExprSyntax.self))
1599 |   }
     :
1602 |   ///   - Parameter node: the node that is being visited
1603 |   ///   - Returns: the rewritten node
1604 |   open func visit(_ node: PrimaryAssociatedTypeClauseSyntax) -> PrimaryAssociatedTypeClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1605 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeClauseSyntax.self)
1606 |   }
     :
1609 |   ///   - Parameter node: the node that is being visited
1610 |   ///   - Returns: the rewritten node
1611 |   open func visit(_ node: PrimaryAssociatedTypeListSyntax) -> PrimaryAssociatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1612 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeListSyntax.self)
1613 |   }
     :
1616 |   ///   - Parameter node: the node that is being visited
1617 |   ///   - Returns: the rewritten node
1618 |   open func visit(_ node: PrimaryAssociatedTypeSyntax) -> PrimaryAssociatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1619 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeSyntax.self)
1620 |   }
     :
1623 |   ///   - Parameter node: the node that is being visited
1624 |   ///   - Returns: the rewritten node
1625 |   open func visit(_ node: ProtocolDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1626 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ProtocolDeclSyntax.self))
1627 |   }
     :
1630 |   ///   - Parameter node: the node that is being visited
1631 |   ///   - Returns: the rewritten node
1632 |   open func visit(_ node: RegexLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1633 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(RegexLiteralExprSyntax.self))
1634 |   }
     :
1637 |   ///   - Parameter node: the node that is being visited
1638 |   ///   - Returns: the rewritten node
1639 |   open func visit(_ node: RepeatStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1640 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(RepeatStmtSyntax.self))
1641 |   }
     :
1644 |   ///   - Parameter node: the node that is being visited
1645 |   ///   - Returns: the rewritten node
1646 |   open func visit(_ node: ReturnClauseSyntax) -> ReturnClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1647 |     return visitChildren(node._syntaxNode).cast(ReturnClauseSyntax.self)
1648 |   }
     :
1651 |   ///   - Parameter node: the node that is being visited
1652 |   ///   - Returns: the rewritten node
1653 |   open func visit(_ node: ReturnStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1654 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ReturnStmtSyntax.self))
1655 |   }
     :
1658 |   ///   - Parameter node: the node that is being visited
1659 |   ///   - Returns: the rewritten node
1660 |   open func visit(_ node: SameTypeRequirementSyntax) -> SameTypeRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1661 |     return visitChildren(node._syntaxNode).cast(SameTypeRequirementSyntax.self)
1662 |   }
     :
1665 |   ///   - Parameter node: the node that is being visited
1666 |   ///   - Returns: the rewritten node
1667 |   open func visit(_ node: SequenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1668 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SequenceExprSyntax.self))
1669 |   }
     :
1672 |   ///   - Parameter node: the node that is being visited
1673 |   ///   - Returns: the rewritten node
1674 |   open func visit(_ node: SimpleStringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1675 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SimpleStringLiteralExprSyntax.self))
1676 |   }
     :
1679 |   ///   - Parameter node: the node that is being visited
1680 |   ///   - Returns: the rewritten node
1681 |   open func visit(_ node: SimpleStringLiteralSegmentListSyntax) -> SimpleStringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1682 |     return visitChildren(node._syntaxNode).cast(SimpleStringLiteralSegmentListSyntax.self)
1683 |   }
     :
1686 |   ///   - Parameter node: the node that is being visited
1687 |   ///   - Returns: the rewritten node
1688 |   open func visit(_ node: SimpleTypeSpecifierSyntax) -> SimpleTypeSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
1689 |     return visitChildren(node._syntaxNode).cast(SimpleTypeSpecifierSyntax.self)
1690 |   }
     :
1693 |   ///   - Parameter node: the node that is being visited
1694 |   ///   - Returns: the rewritten node
1695 |   open func visit(_ node: SomeOrAnyTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1696 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SomeOrAnyTypeSyntax.self))
1697 |   }
     :
1700 |   ///   - Parameter node: the node that is being visited
1701 |   ///   - Returns: the rewritten node
1702 |   open func visit(_ node: SourceFileSyntax) -> SourceFileSyntax {
     |             `- note: potential overridden instance method 'visit' here
1703 |     return visitChildren(node._syntaxNode).cast(SourceFileSyntax.self)
1704 |   }
     :
1707 |   ///   - Parameter node: the node that is being visited
1708 |   ///   - Returns: the rewritten node
1709 |   open func visit(_ node: SpecializeAttributeArgumentListSyntax) -> SpecializeAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1710 |     return visitChildren(node._syntaxNode).cast(SpecializeAttributeArgumentListSyntax.self)
1711 |   }
     :
1714 |   ///   - Parameter node: the node that is being visited
1715 |   ///   - Returns: the rewritten node
1716 |   open func visit(_ node: SpecializeAvailabilityArgumentSyntax) -> SpecializeAvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1717 |     return visitChildren(node._syntaxNode).cast(SpecializeAvailabilityArgumentSyntax.self)
1718 |   }
     :
1721 |   ///   - Parameter node: the node that is being visited
1722 |   ///   - Returns: the rewritten node
1723 |   open func visit(_ node: SpecializeTargetFunctionArgumentSyntax) -> SpecializeTargetFunctionArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1724 |     return visitChildren(node._syntaxNode).cast(SpecializeTargetFunctionArgumentSyntax.self)
1725 |   }
     :
1728 |   ///   - Parameter node: the node that is being visited
1729 |   ///   - Returns: the rewritten node
1730 |   open func visit(_ node: StringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1731 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(StringLiteralExprSyntax.self))
1732 |   }
     :
1735 |   ///   - Parameter node: the node that is being visited
1736 |   ///   - Returns: the rewritten node
1737 |   open func visit(_ node: StringLiteralSegmentListSyntax) -> StringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1738 |     return visitChildren(node._syntaxNode).cast(StringLiteralSegmentListSyntax.self)
1739 |   }
     :
1742 |   ///   - Parameter node: the node that is being visited
1743 |   ///   - Returns: the rewritten node
1744 |   open func visit(_ node: StringSegmentSyntax) -> StringSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1745 |     return visitChildren(node._syntaxNode).cast(StringSegmentSyntax.self)
1746 |   }
     :
1749 |   ///   - Parameter node: the node that is being visited
1750 |   ///   - Returns: the rewritten node
1751 |   open func visit(_ node: StructDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1752 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(StructDeclSyntax.self))
1753 |   }
     :
1756 |   ///   - Parameter node: the node that is being visited
1757 |   ///   - Returns: the rewritten node
1758 |   open func visit(_ node: SubscriptCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1759 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SubscriptCallExprSyntax.self))
1760 |   }
     :
1763 |   ///   - Parameter node: the node that is being visited
1764 |   ///   - Returns: the rewritten node
1765 |   open func visit(_ node: SubscriptDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1766 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(SubscriptDeclSyntax.self))
1767 |   }
     :
1770 |   ///   - Parameter node: the node that is being visited
1771 |   ///   - Returns: the rewritten node
1772 |   open func visit(_ node: SuperExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1773 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SuperExprSyntax.self))
1774 |   }
     :
1777 |   ///   - Parameter node: the node that is being visited
1778 |   ///   - Returns: the rewritten node
1779 |   open func visit(_ node: SuppressedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1780 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SuppressedTypeSyntax.self))
1781 |   }
     :
1784 |   ///   - Parameter node: the node that is being visited
1785 |   ///   - Returns: the rewritten node
1786 |   open func visit(_ node: SwitchCaseItemListSyntax) -> SwitchCaseItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1787 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemListSyntax.self)
1788 |   }
     :
1791 |   ///   - Parameter node: the node that is being visited
1792 |   ///   - Returns: the rewritten node
1793 |   open func visit(_ node: SwitchCaseItemSyntax) -> SwitchCaseItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1794 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemSyntax.self)
1795 |   }
     :
1798 |   ///   - Parameter node: the node that is being visited
1799 |   ///   - Returns: the rewritten node
1800 |   open func visit(_ node: SwitchCaseLabelSyntax) -> SwitchCaseLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1801 |     return visitChildren(node._syntaxNode).cast(SwitchCaseLabelSyntax.self)
1802 |   }
     :
1805 |   ///   - Parameter node: the node that is being visited
1806 |   ///   - Returns: the rewritten node
1807 |   open func visit(_ node: SwitchCaseListSyntax) -> SwitchCaseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1808 |     return visitChildren(node._syntaxNode).cast(SwitchCaseListSyntax.self)
1809 |   }
     :
1812 |   ///   - Parameter node: the node that is being visited
1813 |   ///   - Returns: the rewritten node
1814 |   open func visit(_ node: SwitchCaseSyntax) -> SwitchCaseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1815 |     return visitChildren(node._syntaxNode).cast(SwitchCaseSyntax.self)
1816 |   }
     :
1819 |   ///   - Parameter node: the node that is being visited
1820 |   ///   - Returns: the rewritten node
1821 |   open func visit(_ node: SwitchDefaultLabelSyntax) -> SwitchDefaultLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1822 |     return visitChildren(node._syntaxNode).cast(SwitchDefaultLabelSyntax.self)
1823 |   }
     :
1826 |   ///   - Parameter node: the node that is being visited
1827 |   ///   - Returns: the rewritten node
1828 |   open func visit(_ node: SwitchExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1829 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SwitchExprSyntax.self))
1830 |   }
     :
1833 |   ///   - Parameter node: the node that is being visited
1834 |   ///   - Returns: the rewritten node
1835 |   open func visit(_ node: TernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1836 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TernaryExprSyntax.self))
1837 |   }
     :
1850 |   ///   - Parameter node: the node that is being visited
1851 |   ///   - Returns: the rewritten node
1852 |   open func visit(_ node: ThrowStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1853 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ThrowStmtSyntax.self))
1854 |   }
     :
1857 |   ///   - Parameter node: the node that is being visited
1858 |   ///   - Returns: the rewritten node
1859 |   open func visit(_ node: ThrowsClauseSyntax) -> ThrowsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1860 |     return visitChildren(node._syntaxNode).cast(ThrowsClauseSyntax.self)
1861 |   }
     :
1864 |   ///   - Parameter node: the node that is being visited
1865 |   ///   - Returns: the rewritten node
1866 |   open func visit(_ node: TryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1867 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TryExprSyntax.self))
1868 |   }
     :
1871 |   ///   - Parameter node: the node that is being visited
1872 |   ///   - Returns: the rewritten node
1873 |   open func visit(_ node: TupleExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1874 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TupleExprSyntax.self))
1875 |   }
     :
1878 |   ///   - Parameter node: the node that is being visited
1879 |   ///   - Returns: the rewritten node
1880 |   open func visit(_ node: TuplePatternElementListSyntax) -> TuplePatternElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1881 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementListSyntax.self)
1882 |   }
     :
1885 |   ///   - Parameter node: the node that is being visited
1886 |   ///   - Returns: the rewritten node
1887 |   open func visit(_ node: TuplePatternElementSyntax) -> TuplePatternElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1888 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementSyntax.self)
1889 |   }
     :
1892 |   ///   - Parameter node: the node that is being visited
1893 |   ///   - Returns: the rewritten node
1894 |   open func visit(_ node: TuplePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1895 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(TuplePatternSyntax.self))
1896 |   }
     :
1899 |   ///   - Parameter node: the node that is being visited
1900 |   ///   - Returns: the rewritten node
1901 |   open func visit(_ node: TupleTypeElementListSyntax) -> TupleTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1902 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementListSyntax.self)
1903 |   }
     :
1906 |   ///   - Parameter node: the node that is being visited
1907 |   ///   - Returns: the rewritten node
1908 |   open func visit(_ node: TupleTypeElementSyntax) -> TupleTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1909 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementSyntax.self)
1910 |   }
     :
1913 |   ///   - Parameter node: the node that is being visited
1914 |   ///   - Returns: the rewritten node
1915 |   open func visit(_ node: TupleTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1916 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(TupleTypeSyntax.self))
1917 |   }
     :
1920 |   ///   - Parameter node: the node that is being visited
1921 |   ///   - Returns: the rewritten node
1922 |   open func visit(_ node: TypeAliasDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1923 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(TypeAliasDeclSyntax.self))
1924 |   }
     :
1927 |   ///   - Parameter node: the node that is being visited
1928 |   ///   - Returns: the rewritten node
1929 |   open func visit(_ node: TypeAnnotationSyntax) -> TypeAnnotationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1930 |     return visitChildren(node._syntaxNode).cast(TypeAnnotationSyntax.self)
1931 |   }
     :
1934 |   ///   - Parameter node: the node that is being visited
1935 |   ///   - Returns: the rewritten node
1936 |   open func visit(_ node: TypeEffectSpecifiersSyntax) -> TypeEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
1937 |     return visitChildren(node._syntaxNode).cast(TypeEffectSpecifiersSyntax.self)
1938 |   }
     :
1941 |   ///   - Parameter node: the node that is being visited
1942 |   ///   - Returns: the rewritten node
1943 |   open func visit(_ node: TypeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1944 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TypeExprSyntax.self))
1945 |   }
     :
1948 |   ///   - Parameter node: the node that is being visited
1949 |   ///   - Returns: the rewritten node
1950 |   open func visit(_ node: TypeInitializerClauseSyntax) -> TypeInitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1951 |     return visitChildren(node._syntaxNode).cast(TypeInitializerClauseSyntax.self)
1952 |   }
     :
1955 |   ///   - Parameter node: the node that is being visited
1956 |   ///   - Returns: the rewritten node
1957 |   open func visit(_ node: TypeSpecifierListSyntax) -> TypeSpecifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1958 |     return visitChildren(node._syntaxNode).cast(TypeSpecifierListSyntax.self)
1959 |   }
     :
1962 |   ///   - Parameter node: the node that is being visited
1963 |   ///   - Returns: the rewritten node
1964 |   open func visit(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) -> UnavailableFromAsyncAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1965 |     return visitChildren(node._syntaxNode).cast(UnavailableFromAsyncAttributeArgumentsSyntax.self)
1966 |   }
     :
1969 |   ///   - Parameter node: the node that is being visited
1970 |   ///   - Returns: the rewritten node
1971 |   open func visit(_ node: UnderscorePrivateAttributeArgumentsSyntax) -> UnderscorePrivateAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1972 |     return visitChildren(node._syntaxNode).cast(UnderscorePrivateAttributeArgumentsSyntax.self)
1973 |   }
     :
1976 |   ///   - Parameter node: the node that is being visited
1977 |   ///   - Returns: the rewritten node
1978 |   open func visit(_ node: UnexpectedNodesSyntax) -> UnexpectedNodesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1979 |     return visitChildren(node._syntaxNode).cast(UnexpectedNodesSyntax.self)
1980 |   }
     :
1983 |   ///   - Parameter node: the node that is being visited
1984 |   ///   - Returns: the rewritten node
1985 |   open func visit(_ node: UnresolvedAsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1986 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedAsExprSyntax.self))
1987 |   }
     :
1990 |   ///   - Parameter node: the node that is being visited
1991 |   ///   - Returns: the rewritten node
1992 |   open func visit(_ node: UnresolvedIsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1993 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedIsExprSyntax.self))
1994 |   }
     :
1997 |   ///   - Parameter node: the node that is being visited
1998 |   ///   - Returns: the rewritten node
1999 |   open func visit(_ node: UnresolvedTernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
2000 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedTernaryExprSyntax.self))
2001 |   }
     :
2004 |   ///   - Parameter node: the node that is being visited
2005 |   ///   - Returns: the rewritten node
2006 |   open func visit(_ node: ValueBindingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2007 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ValueBindingPatternSyntax.self))
2008 |   }
     :
2011 |   ///   - Parameter node: the node that is being visited
2012 |   ///   - Returns: the rewritten node
2013 |   open func visit(_ node: VariableDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
2014 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(VariableDeclSyntax.self))
2015 |   }
     :
2018 |   ///   - Parameter node: the node that is being visited
2019 |   ///   - Returns: the rewritten node
2020 |   open func visit(_ node: VersionComponentListSyntax) -> VersionComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2021 |     return visitChildren(node._syntaxNode).cast(VersionComponentListSyntax.self)
2022 |   }
     :
2025 |   ///   - Parameter node: the node that is being visited
2026 |   ///   - Returns: the rewritten node
2027 |   open func visit(_ node: VersionComponentSyntax) -> VersionComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
2028 |     return visitChildren(node._syntaxNode).cast(VersionComponentSyntax.self)
2029 |   }
     :
2032 |   ///   - Parameter node: the node that is being visited
2033 |   ///   - Returns: the rewritten node
2034 |   open func visit(_ node: VersionTupleSyntax) -> VersionTupleSyntax {
     |             `- note: potential overridden instance method 'visit' here
2035 |     return visitChildren(node._syntaxNode).cast(VersionTupleSyntax.self)
2036 |   }
     :
2039 |   ///   - Parameter node: the node that is being visited
2040 |   ///   - Returns: the rewritten node
2041 |   open func visit(_ node: WhereClauseSyntax) -> WhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2042 |     return visitChildren(node._syntaxNode).cast(WhereClauseSyntax.self)
2043 |   }
     :
2046 |   ///   - Parameter node: the node that is being visited
2047 |   ///   - Returns: the rewritten node
2048 |   open func visit(_ node: WhileStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2049 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(WhileStmtSyntax.self))
2050 |   }
     :
2053 |   ///   - Parameter node: the node that is being visited
2054 |   ///   - Returns: the rewritten node
2055 |   open func visit(_ node: WildcardPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2056 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(WildcardPatternSyntax.self))
2057 |   }
     :
2060 |   ///   - Parameter node: the node that is being visited
2061 |   ///   - Returns: the rewritten node
2062 |   open func visit(_ node: YieldStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2063 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(YieldStmtSyntax.self))
2064 |   }
     :
2067 |   ///   - Parameter node: the node that is being visited
2068 |   ///   - Returns: the rewritten node
2069 |   open func visit(_ node: YieldedExpressionListSyntax) -> YieldedExpressionListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2070 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionListSyntax.self)
2071 |   }
     :
2074 |   ///   - Parameter node: the node that is being visited
2075 |   ///   - Returns: the rewritten node
2076 |   open func visit(_ node: YieldedExpressionSyntax) -> YieldedExpressionSyntax {
     |             `- note: potential overridden instance method 'visit' here
2077 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionSyntax.self)
2078 |   }
     :
2081 |   ///   - Parameter node: the node that is being visited
2082 |   ///   - Returns: the rewritten node
2083 |   open func visit(_ node: YieldedExpressionsClauseSyntax) -> YieldedExpressionsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2084 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionsClauseSyntax.self)
2085 |   }
     :
2088 |   ///   - Parameter node: the node that is being visited
2089 |   ///   - Returns: the rewritten node
2090 |   public func visit(_ node: DeclSyntax) -> DeclSyntax {
     |               `- note: potential overridden instance method 'visit' here
2091 |     var node: Syntax = Syntax(node)
2092 |     dispatchVisit(&node)
     :
2097 |   ///   - Parameter node: the node that is being visited
2098 |   ///   - Returns: the rewritten node
2099 |   public func visit(_ node: ExprSyntax) -> ExprSyntax {
     |               `- note: potential overridden instance method 'visit' here
2100 |     var node: Syntax = Syntax(node)
2101 |     dispatchVisit(&node)
     :
2106 |   ///   - Parameter node: the node that is being visited
2107 |   ///   - Returns: the rewritten node
2108 |   public func visit(_ node: PatternSyntax) -> PatternSyntax {
     |               `- note: potential overridden instance method 'visit' here
2109 |     var node: Syntax = Syntax(node)
2110 |     dispatchVisit(&node)
     :
2115 |   ///   - Parameter node: the node that is being visited
2116 |   ///   - Returns: the rewritten node
2117 |   public func visit(_ node: StmtSyntax) -> StmtSyntax {
     |               `- note: potential overridden instance method 'visit' here
2118 |     var node: Syntax = Syntax(node)
2119 |     dispatchVisit(&node)
     :
2124 |   ///   - Parameter node: the node that is being visited
2125 |   ///   - Returns: the rewritten node
2126 |   public func visit(_ node: TypeSyntax) -> TypeSyntax {
     |               `- note: potential overridden instance method 'visit' here
2127 |     var node: Syntax = Syntax(node)
2128 |     dispatchVisit(&node)

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:773:19: error: method does not override any method from its superclass
771 |     }
772 | 
773 |     override func visit(_ token: TokenSyntax) -> Syntax {
    |                   `- error: method does not override any method from its superclass
774 |         currentIndex += 1
775 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift:50:13: note: potential overridden instance method 'visit' here
  48 |   ///   - Parameter node: the node that is being visited
  49 |   ///   - Returns: the rewritten node
  50 |   open func visit(_ token: TokenSyntax) -> TokenSyntax {
     |             `- note: potential overridden instance method 'visit' here
  51 |     return token
  52 |   }
     :
  77 |   ///   - Returns: the rewritten node
  78 |   @available(*, deprecated, renamed: "rewrite(_:detach:)")
  79 |   public func visit(_ node: Syntax) -> Syntax {
     |               `- note: potential overridden instance method 'visit' here
  80 |     var rewritten = node
  81 |     dispatchVisit(&rewritten)
     :
  92 |   ///   - Parameter node: the node that is being visited
  93 |   ///   - Returns: the rewritten node
  94 |   open func visit(_ node: AccessorBlockSyntax) -> AccessorBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
  95 |     return visitChildren(node._syntaxNode).cast(AccessorBlockSyntax.self)
  96 |   }
     :
  99 |   ///   - Parameter node: the node that is being visited
 100 |   ///   - Returns: the rewritten node
 101 |   open func visit(_ node: AccessorDeclListSyntax) -> AccessorDeclListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 102 |     return visitChildren(node._syntaxNode).cast(AccessorDeclListSyntax.self)
 103 |   }
     :
 106 |   ///   - Parameter node: the node that is being visited
 107 |   ///   - Returns: the rewritten node
 108 |   open func visit(_ node: AccessorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 109 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AccessorDeclSyntax.self))
 110 |   }
     :
 113 |   ///   - Parameter node: the node that is being visited
 114 |   ///   - Returns: the rewritten node
 115 |   open func visit(_ node: AccessorEffectSpecifiersSyntax) -> AccessorEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 116 |     return visitChildren(node._syntaxNode).cast(AccessorEffectSpecifiersSyntax.self)
 117 |   }
     :
 120 |   ///   - Parameter node: the node that is being visited
 121 |   ///   - Returns: the rewritten node
 122 |   open func visit(_ node: AccessorParametersSyntax) -> AccessorParametersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 123 |     return visitChildren(node._syntaxNode).cast(AccessorParametersSyntax.self)
 124 |   }
     :
 127 |   ///   - Parameter node: the node that is being visited
 128 |   ///   - Returns: the rewritten node
 129 |   open func visit(_ node: ActorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 130 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ActorDeclSyntax.self))
 131 |   }
     :
 134 |   ///   - Parameter node: the node that is being visited
 135 |   ///   - Returns: the rewritten node
 136 |   open func visit(_ node: ArrayElementListSyntax) -> ArrayElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 137 |     return visitChildren(node._syntaxNode).cast(ArrayElementListSyntax.self)
 138 |   }
     :
 141 |   ///   - Parameter node: the node that is being visited
 142 |   ///   - Returns: the rewritten node
 143 |   open func visit(_ node: ArrayElementSyntax) -> ArrayElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 144 |     return visitChildren(node._syntaxNode).cast(ArrayElementSyntax.self)
 145 |   }
     :
 148 |   ///   - Parameter node: the node that is being visited
 149 |   ///   - Returns: the rewritten node
 150 |   open func visit(_ node: ArrayExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 151 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrayExprSyntax.self))
 152 |   }
     :
 155 |   ///   - Parameter node: the node that is being visited
 156 |   ///   - Returns: the rewritten node
 157 |   open func visit(_ node: ArrayTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 158 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ArrayTypeSyntax.self))
 159 |   }
     :
 162 |   ///   - Parameter node: the node that is being visited
 163 |   ///   - Returns: the rewritten node
 164 |   open func visit(_ node: ArrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 165 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrowExprSyntax.self))
 166 |   }
     :
 169 |   ///   - Parameter node: the node that is being visited
 170 |   ///   - Returns: the rewritten node
 171 |   open func visit(_ node: AsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 172 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AsExprSyntax.self))
 173 |   }
     :
 176 |   ///   - Parameter node: the node that is being visited
 177 |   ///   - Returns: the rewritten node
 178 |   open func visit(_ node: AssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 179 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AssignmentExprSyntax.self))
 180 |   }
     :
 183 |   ///   - Parameter node: the node that is being visited
 184 |   ///   - Returns: the rewritten node
 185 |   open func visit(_ node: AssociatedTypeDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 186 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AssociatedTypeDeclSyntax.self))
 187 |   }
     :
 190 |   ///   - Parameter node: the node that is being visited
 191 |   ///   - Returns: the rewritten node
 192 |   open func visit(_ node: AttributeListSyntax) -> AttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 193 |     return visitChildren(node._syntaxNode).cast(AttributeListSyntax.self)
 194 |   }
     :
 197 |   ///   - Parameter node: the node that is being visited
 198 |   ///   - Returns: the rewritten node
 199 |   open func visit(_ node: AttributeSyntax) -> AttributeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 200 |     return visitChildren(node._syntaxNode).cast(AttributeSyntax.self)
 201 |   }
     :
 204 |   ///   - Parameter node: the node that is being visited
 205 |   ///   - Returns: the rewritten node
 206 |   open func visit(_ node: AttributedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 207 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(AttributedTypeSyntax.self))
 208 |   }
     :
 211 |   ///   - Parameter node: the node that is being visited
 212 |   ///   - Returns: the rewritten node
 213 |   open func visit(_ node: AvailabilityArgumentListSyntax) -> AvailabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 214 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentListSyntax.self)
 215 |   }
     :
 218 |   ///   - Parameter node: the node that is being visited
 219 |   ///   - Returns: the rewritten node
 220 |   open func visit(_ node: AvailabilityArgumentSyntax) -> AvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 221 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentSyntax.self)
 222 |   }
     :
 225 |   ///   - Parameter node: the node that is being visited
 226 |   ///   - Returns: the rewritten node
 227 |   open func visit(_ node: AvailabilityConditionSyntax) -> AvailabilityConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
 228 |     return visitChildren(node._syntaxNode).cast(AvailabilityConditionSyntax.self)
 229 |   }
     :
 232 |   ///   - Parameter node: the node that is being visited
 233 |   ///   - Returns: the rewritten node
 234 |   open func visit(_ node: AvailabilityLabeledArgumentSyntax) -> AvailabilityLabeledArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 235 |     return visitChildren(node._syntaxNode).cast(AvailabilityLabeledArgumentSyntax.self)
 236 |   }
     :
 239 |   ///   - Parameter node: the node that is being visited
 240 |   ///   - Returns: the rewritten node
 241 |   open func visit(_ node: AwaitExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 242 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AwaitExprSyntax.self))
 243 |   }
     :
 246 |   ///   - Parameter node: the node that is being visited
 247 |   ///   - Returns: the rewritten node
 248 |   open func visit(_ node: BackDeployedAttributeArgumentsSyntax) -> BackDeployedAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 249 |     return visitChildren(node._syntaxNode).cast(BackDeployedAttributeArgumentsSyntax.self)
 250 |   }
     :
 253 |   ///   - Parameter node: the node that is being visited
 254 |   ///   - Returns: the rewritten node
 255 |   open func visit(_ node: BinaryOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 256 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BinaryOperatorExprSyntax.self))
 257 |   }
     :
 260 |   ///   - Parameter node: the node that is being visited
 261 |   ///   - Returns: the rewritten node
 262 |   open func visit(_ node: BooleanLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 263 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BooleanLiteralExprSyntax.self))
 264 |   }
     :
 267 |   ///   - Parameter node: the node that is being visited
 268 |   ///   - Returns: the rewritten node
 269 |   open func visit(_ node: BorrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 270 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BorrowExprSyntax.self))
 271 |   }
     :
 274 |   ///   - Parameter node: the node that is being visited
 275 |   ///   - Returns: the rewritten node
 276 |   open func visit(_ node: BreakStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 277 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(BreakStmtSyntax.self))
 278 |   }
     :
 281 |   ///   - Parameter node: the node that is being visited
 282 |   ///   - Returns: the rewritten node
 283 |   open func visit(_ node: _CanImportExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 284 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportExprSyntax.self))
 285 |   }
     :
 288 |   ///   - Parameter node: the node that is being visited
 289 |   ///   - Returns: the rewritten node
 290 |   open func visit(_ node: _CanImportVersionInfoSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 291 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportVersionInfoSyntax.self))
 292 |   }
     :
 295 |   ///   - Parameter node: the node that is being visited
 296 |   ///   - Returns: the rewritten node
 297 |   open func visit(_ node: CatchClauseListSyntax) -> CatchClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 298 |     return visitChildren(node._syntaxNode).cast(CatchClauseListSyntax.self)
 299 |   }
     :
 302 |   ///   - Parameter node: the node that is being visited
 303 |   ///   - Returns: the rewritten node
 304 |   open func visit(_ node: CatchClauseSyntax) -> CatchClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 305 |     return visitChildren(node._syntaxNode).cast(CatchClauseSyntax.self)
 306 |   }
     :
 309 |   ///   - Parameter node: the node that is being visited
 310 |   ///   - Returns: the rewritten node
 311 |   open func visit(_ node: CatchItemListSyntax) -> CatchItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 312 |     return visitChildren(node._syntaxNode).cast(CatchItemListSyntax.self)
 313 |   }
     :
 316 |   ///   - Parameter node: the node that is being visited
 317 |   ///   - Returns: the rewritten node
 318 |   open func visit(_ node: CatchItemSyntax) -> CatchItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 319 |     return visitChildren(node._syntaxNode).cast(CatchItemSyntax.self)
 320 |   }
     :
 323 |   ///   - Parameter node: the node that is being visited
 324 |   ///   - Returns: the rewritten node
 325 |   open func visit(_ node: ClassDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 326 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ClassDeclSyntax.self))
 327 |   }
     :
 330 |   ///   - Parameter node: the node that is being visited
 331 |   ///   - Returns: the rewritten node
 332 |   open func visit(_ node: ClassRestrictionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 333 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ClassRestrictionTypeSyntax.self))
 334 |   }
     :
 337 |   ///   - Parameter node: the node that is being visited
 338 |   ///   - Returns: the rewritten node
 339 |   open func visit(_ node: ClosureCaptureClauseSyntax) -> ClosureCaptureClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 340 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureClauseSyntax.self)
 341 |   }
     :
 344 |   ///   - Parameter node: the node that is being visited
 345 |   ///   - Returns: the rewritten node
 346 |   open func visit(_ node: ClosureCaptureListSyntax) -> ClosureCaptureListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 347 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureListSyntax.self)
 348 |   }
     :
 351 |   ///   - Parameter node: the node that is being visited
 352 |   ///   - Returns: the rewritten node
 353 |   open func visit(_ node: ClosureCaptureSpecifierSyntax) -> ClosureCaptureSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 354 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSpecifierSyntax.self)
 355 |   }
     :
 358 |   ///   - Parameter node: the node that is being visited
 359 |   ///   - Returns: the rewritten node
 360 |   open func visit(_ node: ClosureCaptureSyntax) -> ClosureCaptureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 361 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSyntax.self)
 362 |   }
     :
 365 |   ///   - Parameter node: the node that is being visited
 366 |   ///   - Returns: the rewritten node
 367 |   open func visit(_ node: ClosureExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 368 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ClosureExprSyntax.self))
 369 |   }
     :
 372 |   ///   - Parameter node: the node that is being visited
 373 |   ///   - Returns: the rewritten node
 374 |   open func visit(_ node: ClosureParameterClauseSyntax) -> ClosureParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 375 |     return visitChildren(node._syntaxNode).cast(ClosureParameterClauseSyntax.self)
 376 |   }
     :
 379 |   ///   - Parameter node: the node that is being visited
 380 |   ///   - Returns: the rewritten node
 381 |   open func visit(_ node: ClosureParameterListSyntax) -> ClosureParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 382 |     return visitChildren(node._syntaxNode).cast(ClosureParameterListSyntax.self)
 383 |   }
     :
 386 |   ///   - Parameter node: the node that is being visited
 387 |   ///   - Returns: the rewritten node
 388 |   open func visit(_ node: ClosureParameterSyntax) -> ClosureParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 389 |     return visitChildren(node._syntaxNode).cast(ClosureParameterSyntax.self)
 390 |   }
     :
 393 |   ///   - Parameter node: the node that is being visited
 394 |   ///   - Returns: the rewritten node
 395 |   open func visit(_ node: ClosureShorthandParameterListSyntax) -> ClosureShorthandParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 396 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterListSyntax.self)
 397 |   }
     :
 400 |   ///   - Parameter node: the node that is being visited
 401 |   ///   - Returns: the rewritten node
 402 |   open func visit(_ node: ClosureShorthandParameterSyntax) -> ClosureShorthandParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 403 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterSyntax.self)
 404 |   }
     :
 407 |   ///   - Parameter node: the node that is being visited
 408 |   ///   - Returns: the rewritten node
 409 |   open func visit(_ node: ClosureSignatureSyntax) -> ClosureSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 410 |     return visitChildren(node._syntaxNode).cast(ClosureSignatureSyntax.self)
 411 |   }
     :
 414 |   ///   - Parameter node: the node that is being visited
 415 |   ///   - Returns: the rewritten node
 416 |   open func visit(_ node: CodeBlockItemListSyntax) -> CodeBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 417 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemListSyntax.self)
 418 |   }
     :
 421 |   ///   - Parameter node: the node that is being visited
 422 |   ///   - Returns: the rewritten node
 423 |   open func visit(_ node: CodeBlockItemSyntax) -> CodeBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 424 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemSyntax.self)
 425 |   }
     :
 428 |   ///   - Parameter node: the node that is being visited
 429 |   ///   - Returns: the rewritten node
 430 |   open func visit(_ node: CodeBlockSyntax) -> CodeBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
 431 |     return visitChildren(node._syntaxNode).cast(CodeBlockSyntax.self)
 432 |   }
     :
 435 |   ///   - Parameter node: the node that is being visited
 436 |   ///   - Returns: the rewritten node
 437 |   open func visit(_ node: CompositionTypeElementListSyntax) -> CompositionTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 438 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementListSyntax.self)
 439 |   }
     :
 442 |   ///   - Parameter node: the node that is being visited
 443 |   ///   - Returns: the rewritten node
 444 |   open func visit(_ node: CompositionTypeElementSyntax) -> CompositionTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 445 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementSyntax.self)
 446 |   }
     :
 449 |   ///   - Parameter node: the node that is being visited
 450 |   ///   - Returns: the rewritten node
 451 |   open func visit(_ node: CompositionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 452 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(CompositionTypeSyntax.self))
 453 |   }
     :
 456 |   ///   - Parameter node: the node that is being visited
 457 |   ///   - Returns: the rewritten node
 458 |   open func visit(_ node: ConditionElementListSyntax) -> ConditionElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 459 |     return visitChildren(node._syntaxNode).cast(ConditionElementListSyntax.self)
 460 |   }
     :
 463 |   ///   - Parameter node: the node that is being visited
 464 |   ///   - Returns: the rewritten node
 465 |   open func visit(_ node: ConditionElementSyntax) -> ConditionElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 466 |     return visitChildren(node._syntaxNode).cast(ConditionElementSyntax.self)
 467 |   }
     :
 470 |   ///   - Parameter node: the node that is being visited
 471 |   ///   - Returns: the rewritten node
 472 |   open func visit(_ node: ConformanceRequirementSyntax) -> ConformanceRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 473 |     return visitChildren(node._syntaxNode).cast(ConformanceRequirementSyntax.self)
 474 |   }
     :
 477 |   ///   - Parameter node: the node that is being visited
 478 |   ///   - Returns: the rewritten node
 479 |   open func visit(_ node: ConsumeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 480 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ConsumeExprSyntax.self))
 481 |   }
     :
 484 |   ///   - Parameter node: the node that is being visited
 485 |   ///   - Returns: the rewritten node
 486 |   open func visit(_ node: ContinueStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 487 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ContinueStmtSyntax.self))
 488 |   }
     :
 491 |   ///   - Parameter node: the node that is being visited
 492 |   ///   - Returns: the rewritten node
 493 |   open func visit(_ node: ConventionAttributeArgumentsSyntax) -> ConventionAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 494 |     return visitChildren(node._syntaxNode).cast(ConventionAttributeArgumentsSyntax.self)
 495 |   }
     :
 498 |   ///   - Parameter node: the node that is being visited
 499 |   ///   - Returns: the rewritten node
 500 |   open func visit(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) -> ConventionWitnessMethodAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 501 |     return visitChildren(node._syntaxNode).cast(ConventionWitnessMethodAttributeArgumentsSyntax.self)
 502 |   }
     :
 505 |   ///   - Parameter node: the node that is being visited
 506 |   ///   - Returns: the rewritten node
 507 |   open func visit(_ node: CopyExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 508 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(CopyExprSyntax.self))
 509 |   }
     :
 512 |   ///   - Parameter node: the node that is being visited
 513 |   ///   - Returns: the rewritten node
 514 |   open func visit(_ node: DeclModifierDetailSyntax) -> DeclModifierDetailSyntax {
     |             `- note: potential overridden instance method 'visit' here
 515 |     return visitChildren(node._syntaxNode).cast(DeclModifierDetailSyntax.self)
 516 |   }
     :
 519 |   ///   - Parameter node: the node that is being visited
 520 |   ///   - Returns: the rewritten node
 521 |   open func visit(_ node: DeclModifierListSyntax) -> DeclModifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 522 |     return visitChildren(node._syntaxNode).cast(DeclModifierListSyntax.self)
 523 |   }
     :
 526 |   ///   - Parameter node: the node that is being visited
 527 |   ///   - Returns: the rewritten node
 528 |   open func visit(_ node: DeclModifierSyntax) -> DeclModifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 529 |     return visitChildren(node._syntaxNode).cast(DeclModifierSyntax.self)
 530 |   }
     :
 533 |   ///   - Parameter node: the node that is being visited
 534 |   ///   - Returns: the rewritten node
 535 |   open func visit(_ node: DeclNameArgumentListSyntax) -> DeclNameArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 536 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentListSyntax.self)
 537 |   }
     :
 540 |   ///   - Parameter node: the node that is being visited
 541 |   ///   - Returns: the rewritten node
 542 |   open func visit(_ node: DeclNameArgumentSyntax) -> DeclNameArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 543 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentSyntax.self)
 544 |   }
     :
 547 |   ///   - Parameter node: the node that is being visited
 548 |   ///   - Returns: the rewritten node
 549 |   open func visit(_ node: DeclNameArgumentsSyntax) -> DeclNameArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 550 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentsSyntax.self)
 551 |   }
     :
 554 |   ///   - Parameter node: the node that is being visited
 555 |   ///   - Returns: the rewritten node
 556 |   open func visit(_ node: DeclReferenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 557 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DeclReferenceExprSyntax.self))
 558 |   }
     :
 561 |   ///   - Parameter node: the node that is being visited
 562 |   ///   - Returns: the rewritten node
 563 |   open func visit(_ node: DeferStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 564 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DeferStmtSyntax.self))
 565 |   }
     :
 568 |   ///   - Parameter node: the node that is being visited
 569 |   ///   - Returns: the rewritten node
 570 |   open func visit(_ node: DeinitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 571 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(DeinitializerDeclSyntax.self))
 572 |   }
     :
 575 |   ///   - Parameter node: the node that is being visited
 576 |   ///   - Returns: the rewritten node
 577 |   open func visit(_ node: DeinitializerEffectSpecifiersSyntax) -> DeinitializerEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 578 |     return visitChildren(node._syntaxNode).cast(DeinitializerEffectSpecifiersSyntax.self)
 579 |   }
     :
 582 |   ///   - Parameter node: the node that is being visited
 583 |   ///   - Returns: the rewritten node
 584 |   open func visit(_ node: DerivativeAttributeArgumentsSyntax) -> DerivativeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 585 |     return visitChildren(node._syntaxNode).cast(DerivativeAttributeArgumentsSyntax.self)
 586 |   }
     :
 589 |   ///   - Parameter node: the node that is being visited
 590 |   ///   - Returns: the rewritten node
 591 |   open func visit(_ node: DesignatedTypeListSyntax) -> DesignatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 592 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeListSyntax.self)
 593 |   }
     :
 596 |   ///   - Parameter node: the node that is being visited
 597 |   ///   - Returns: the rewritten node
 598 |   open func visit(_ node: DesignatedTypeSyntax) -> DesignatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 599 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeSyntax.self)
 600 |   }
     :
 603 |   ///   - Parameter node: the node that is being visited
 604 |   ///   - Returns: the rewritten node
 605 |   open func visit(_ node: DictionaryElementListSyntax) -> DictionaryElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 606 |     return visitChildren(node._syntaxNode).cast(DictionaryElementListSyntax.self)
 607 |   }
     :
 610 |   ///   - Parameter node: the node that is being visited
 611 |   ///   - Returns: the rewritten node
 612 |   open func visit(_ node: DictionaryElementSyntax) -> DictionaryElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 613 |     return visitChildren(node._syntaxNode).cast(DictionaryElementSyntax.self)
 614 |   }
     :
 617 |   ///   - Parameter node: the node that is being visited
 618 |   ///   - Returns: the rewritten node
 619 |   open func visit(_ node: DictionaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 620 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DictionaryExprSyntax.self))
 621 |   }
     :
 624 |   ///   - Parameter node: the node that is being visited
 625 |   ///   - Returns: the rewritten node
 626 |   open func visit(_ node: DictionaryTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 627 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(DictionaryTypeSyntax.self))
 628 |   }
     :
 631 |   ///   - Parameter node: the node that is being visited
 632 |   ///   - Returns: the rewritten node
 633 |   open func visit(_ node: DifferentiabilityArgumentListSyntax) -> DifferentiabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 634 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentListSyntax.self)
 635 |   }
     :
 638 |   ///   - Parameter node: the node that is being visited
 639 |   ///   - Returns: the rewritten node
 640 |   open func visit(_ node: DifferentiabilityArgumentSyntax) -> DifferentiabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 641 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentSyntax.self)
 642 |   }
     :
 645 |   ///   - Parameter node: the node that is being visited
 646 |   ///   - Returns: the rewritten node
 647 |   open func visit(_ node: DifferentiabilityArgumentsSyntax) -> DifferentiabilityArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 648 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentsSyntax.self)
 649 |   }
     :
 652 |   ///   - Parameter node: the node that is being visited
 653 |   ///   - Returns: the rewritten node
 654 |   open func visit(_ node: DifferentiabilityWithRespectToArgumentSyntax) -> DifferentiabilityWithRespectToArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 655 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityWithRespectToArgumentSyntax.self)
 656 |   }
     :
 659 |   ///   - Parameter node: the node that is being visited
 660 |   ///   - Returns: the rewritten node
 661 |   open func visit(_ node: DifferentiableAttributeArgumentsSyntax) -> DifferentiableAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 662 |     return visitChildren(node._syntaxNode).cast(DifferentiableAttributeArgumentsSyntax.self)
 663 |   }
     :
 666 |   ///   - Parameter node: the node that is being visited
 667 |   ///   - Returns: the rewritten node
 668 |   open func visit(_ node: DiscardAssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 669 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DiscardAssignmentExprSyntax.self))
 670 |   }
     :
 673 |   ///   - Parameter node: the node that is being visited
 674 |   ///   - Returns: the rewritten node
 675 |   open func visit(_ node: DiscardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 676 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DiscardStmtSyntax.self))
 677 |   }
     :
 690 |   ///   - Parameter node: the node that is being visited
 691 |   ///   - Returns: the rewritten node
 692 |   open func visit(_ node: DoStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 693 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DoStmtSyntax.self))
 694 |   }
     :
 697 |   ///   - Parameter node: the node that is being visited
 698 |   ///   - Returns: the rewritten node
 699 |   open func visit(_ node: DocumentationAttributeArgumentListSyntax) -> DocumentationAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 700 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentListSyntax.self)
 701 |   }
     :
 704 |   ///   - Parameter node: the node that is being visited
 705 |   ///   - Returns: the rewritten node
 706 |   open func visit(_ node: DocumentationAttributeArgumentSyntax) -> DocumentationAttributeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 707 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentSyntax.self)
 708 |   }
     :
 711 |   ///   - Parameter node: the node that is being visited
 712 |   ///   - Returns: the rewritten node
 713 |   open func visit(_ node: DynamicReplacementAttributeArgumentsSyntax) -> DynamicReplacementAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 714 |     return visitChildren(node._syntaxNode).cast(DynamicReplacementAttributeArgumentsSyntax.self)
 715 |   }
     :
 718 |   ///   - Parameter node: the node that is being visited
 719 |   ///   - Returns: the rewritten node
 720 |   open func visit(_ node: EditorPlaceholderDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 721 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderDeclSyntax.self))
 722 |   }
     :
 725 |   ///   - Parameter node: the node that is being visited
 726 |   ///   - Returns: the rewritten node
 727 |   open func visit(_ node: EditorPlaceholderExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 728 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderExprSyntax.self))
 729 |   }
     :
 732 |   ///   - Parameter node: the node that is being visited
 733 |   ///   - Returns: the rewritten node
 734 |   open func visit(_ node: EffectsAttributeArgumentListSyntax) -> EffectsAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 735 |     return visitChildren(node._syntaxNode).cast(EffectsAttributeArgumentListSyntax.self)
 736 |   }
     :
 739 |   ///   - Parameter node: the node that is being visited
 740 |   ///   - Returns: the rewritten node
 741 |   open func visit(_ node: EnumCaseDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 742 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumCaseDeclSyntax.self))
 743 |   }
     :
 746 |   ///   - Parameter node: the node that is being visited
 747 |   ///   - Returns: the rewritten node
 748 |   open func visit(_ node: EnumCaseElementListSyntax) -> EnumCaseElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 749 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementListSyntax.self)
 750 |   }
     :
 753 |   ///   - Parameter node: the node that is being visited
 754 |   ///   - Returns: the rewritten node
 755 |   open func visit(_ node: EnumCaseElementSyntax) -> EnumCaseElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 756 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementSyntax.self)
 757 |   }
     :
 760 |   ///   - Parameter node: the node that is being visited
 761 |   ///   - Returns: the rewritten node
 762 |   open func visit(_ node: EnumCaseParameterClauseSyntax) -> EnumCaseParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 763 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterClauseSyntax.self)
 764 |   }
     :
 767 |   ///   - Parameter node: the node that is being visited
 768 |   ///   - Returns: the rewritten node
 769 |   open func visit(_ node: EnumCaseParameterListSyntax) -> EnumCaseParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 770 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterListSyntax.self)
 771 |   }
     :
 774 |   ///   - Parameter node: the node that is being visited
 775 |   ///   - Returns: the rewritten node
 776 |   open func visit(_ node: EnumCaseParameterSyntax) -> EnumCaseParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 777 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterSyntax.self)
 778 |   }
     :
 781 |   ///   - Parameter node: the node that is being visited
 782 |   ///   - Returns: the rewritten node
 783 |   open func visit(_ node: EnumDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 784 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumDeclSyntax.self))
 785 |   }
     :
 788 |   ///   - Parameter node: the node that is being visited
 789 |   ///   - Returns: the rewritten node
 790 |   open func visit(_ node: ExposeAttributeArgumentsSyntax) -> ExposeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 791 |     return visitChildren(node._syntaxNode).cast(ExposeAttributeArgumentsSyntax.self)
 792 |   }
     :
 795 |   ///   - Parameter node: the node that is being visited
 796 |   ///   - Returns: the rewritten node
 797 |   open func visit(_ node: ExprListSyntax) -> ExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 798 |     return visitChildren(node._syntaxNode).cast(ExprListSyntax.self)
 799 |   }
     :
 802 |   ///   - Parameter node: the node that is being visited
 803 |   ///   - Returns: the rewritten node
 804 |   open func visit(_ node: ExpressionPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 805 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ExpressionPatternSyntax.self))
 806 |   }
     :
 809 |   ///   - Parameter node: the node that is being visited
 810 |   ///   - Returns: the rewritten node
 811 |   open func visit(_ node: ExpressionSegmentSyntax) -> ExpressionSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 812 |     return visitChildren(node._syntaxNode).cast(ExpressionSegmentSyntax.self)
 813 |   }
     :
 816 |   ///   - Parameter node: the node that is being visited
 817 |   ///   - Returns: the rewritten node
 818 |   open func visit(_ node: ExpressionStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 819 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ExpressionStmtSyntax.self))
 820 |   }
     :
 823 |   ///   - Parameter node: the node that is being visited
 824 |   ///   - Returns: the rewritten node
 825 |   open func visit(_ node: ExtensionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 826 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ExtensionDeclSyntax.self))
 827 |   }
     :
 830 |   ///   - Parameter node: the node that is being visited
 831 |   ///   - Returns: the rewritten node
 832 |   open func visit(_ node: FallThroughStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 833 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(FallThroughStmtSyntax.self))
 834 |   }
     :
 837 |   ///   - Parameter node: the node that is being visited
 838 |   ///   - Returns: the rewritten node
 839 |   open func visit(_ node: FloatLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 840 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FloatLiteralExprSyntax.self))
 841 |   }
     :
 844 |   ///   - Parameter node: the node that is being visited
 845 |   ///   - Returns: the rewritten node
 846 |   open func visit(_ node: ForStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 847 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ForStmtSyntax.self))
 848 |   }
     :
 851 |   ///   - Parameter node: the node that is being visited
 852 |   ///   - Returns: the rewritten node
 853 |   open func visit(_ node: ForceUnwrapExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 854 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ForceUnwrapExprSyntax.self))
 855 |   }
     :
 858 |   ///   - Parameter node: the node that is being visited
 859 |   ///   - Returns: the rewritten node
 860 |   open func visit(_ node: FunctionCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 861 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FunctionCallExprSyntax.self))
 862 |   }
     :
 865 |   ///   - Parameter node: the node that is being visited
 866 |   ///   - Returns: the rewritten node
 867 |   open func visit(_ node: FunctionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 868 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(FunctionDeclSyntax.self))
 869 |   }
     :
 872 |   ///   - Parameter node: the node that is being visited
 873 |   ///   - Returns: the rewritten node
 874 |   open func visit(_ node: FunctionEffectSpecifiersSyntax) -> FunctionEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 875 |     return visitChildren(node._syntaxNode).cast(FunctionEffectSpecifiersSyntax.self)
 876 |   }
     :
 879 |   ///   - Parameter node: the node that is being visited
 880 |   ///   - Returns: the rewritten node
 881 |   open func visit(_ node: FunctionParameterClauseSyntax) -> FunctionParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 882 |     return visitChildren(node._syntaxNode).cast(FunctionParameterClauseSyntax.self)
 883 |   }
     :
 886 |   ///   - Parameter node: the node that is being visited
 887 |   ///   - Returns: the rewritten node
 888 |   open func visit(_ node: FunctionParameterListSyntax) -> FunctionParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 889 |     return visitChildren(node._syntaxNode).cast(FunctionParameterListSyntax.self)
 890 |   }
     :
 893 |   ///   - Parameter node: the node that is being visited
 894 |   ///   - Returns: the rewritten node
 895 |   open func visit(_ node: FunctionParameterSyntax) -> FunctionParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 896 |     return visitChildren(node._syntaxNode).cast(FunctionParameterSyntax.self)
 897 |   }
     :
 900 |   ///   - Parameter node: the node that is being visited
 901 |   ///   - Returns: the rewritten node
 902 |   open func visit(_ node: FunctionSignatureSyntax) -> FunctionSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 903 |     return visitChildren(node._syntaxNode).cast(FunctionSignatureSyntax.self)
 904 |   }
     :
 907 |   ///   - Parameter node: the node that is being visited
 908 |   ///   - Returns: the rewritten node
 909 |   open func visit(_ node: FunctionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 910 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(FunctionTypeSyntax.self))
 911 |   }
     :
 914 |   ///   - Parameter node: the node that is being visited
 915 |   ///   - Returns: the rewritten node
 916 |   open func visit(_ node: GenericArgumentClauseSyntax) -> GenericArgumentClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 917 |     return visitChildren(node._syntaxNode).cast(GenericArgumentClauseSyntax.self)
 918 |   }
     :
 921 |   ///   - Parameter node: the node that is being visited
 922 |   ///   - Returns: the rewritten node
 923 |   open func visit(_ node: GenericArgumentListSyntax) -> GenericArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 924 |     return visitChildren(node._syntaxNode).cast(GenericArgumentListSyntax.self)
 925 |   }
     :
 928 |   ///   - Parameter node: the node that is being visited
 929 |   ///   - Returns: the rewritten node
 930 |   open func visit(_ node: GenericArgumentSyntax) -> GenericArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 931 |     return visitChildren(node._syntaxNode).cast(GenericArgumentSyntax.self)
 932 |   }
     :
 935 |   ///   - Parameter node: the node that is being visited
 936 |   ///   - Returns: the rewritten node
 937 |   open func visit(_ node: GenericParameterClauseSyntax) -> GenericParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 938 |     return visitChildren(node._syntaxNode).cast(GenericParameterClauseSyntax.self)
 939 |   }
     :
 942 |   ///   - Parameter node: the node that is being visited
 943 |   ///   - Returns: the rewritten node
 944 |   open func visit(_ node: GenericParameterListSyntax) -> GenericParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 945 |     return visitChildren(node._syntaxNode).cast(GenericParameterListSyntax.self)
 946 |   }
     :
 949 |   ///   - Parameter node: the node that is being visited
 950 |   ///   - Returns: the rewritten node
 951 |   open func visit(_ node: GenericParameterSyntax) -> GenericParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 952 |     return visitChildren(node._syntaxNode).cast(GenericParameterSyntax.self)
 953 |   }
     :
 956 |   ///   - Parameter node: the node that is being visited
 957 |   ///   - Returns: the rewritten node
 958 |   open func visit(_ node: GenericRequirementListSyntax) -> GenericRequirementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 959 |     return visitChildren(node._syntaxNode).cast(GenericRequirementListSyntax.self)
 960 |   }
     :
 963 |   ///   - Parameter node: the node that is being visited
 964 |   ///   - Returns: the rewritten node
 965 |   open func visit(_ node: GenericRequirementSyntax) -> GenericRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 966 |     return visitChildren(node._syntaxNode).cast(GenericRequirementSyntax.self)
 967 |   }
     :
 970 |   ///   - Parameter node: the node that is being visited
 971 |   ///   - Returns: the rewritten node
 972 |   open func visit(_ node: GenericSpecializationExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 973 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(GenericSpecializationExprSyntax.self))
 974 |   }
     :
 977 |   ///   - Parameter node: the node that is being visited
 978 |   ///   - Returns: the rewritten node
 979 |   open func visit(_ node: GenericWhereClauseSyntax) -> GenericWhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 980 |     return visitChildren(node._syntaxNode).cast(GenericWhereClauseSyntax.self)
 981 |   }
     :
 984 |   ///   - Parameter node: the node that is being visited
 985 |   ///   - Returns: the rewritten node
 986 |   open func visit(_ node: GuardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 987 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(GuardStmtSyntax.self))
 988 |   }
     :
 991 |   ///   - Parameter node: the node that is being visited
 992 |   ///   - Returns: the rewritten node
 993 |   open func visit(_ node: IdentifierPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 994 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IdentifierPatternSyntax.self))
 995 |   }
     :
 998 |   ///   - Parameter node: the node that is being visited
 999 |   ///   - Returns: the rewritten node
1000 |   open func visit(_ node: IdentifierTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1001 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(IdentifierTypeSyntax.self))
1002 |   }
     :
1005 |   ///   - Parameter node: the node that is being visited
1006 |   ///   - Returns: the rewritten node
1007 |   open func visit(_ node: IfConfigClauseListSyntax) -> IfConfigClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1008 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseListSyntax.self)
1009 |   }
     :
1012 |   ///   - Parameter node: the node that is being visited
1013 |   ///   - Returns: the rewritten node
1014 |   open func visit(_ node: IfConfigClauseSyntax) -> IfConfigClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1015 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseSyntax.self)
1016 |   }
     :
1019 |   ///   - Parameter node: the node that is being visited
1020 |   ///   - Returns: the rewritten node
1021 |   open func visit(_ node: IfConfigDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1022 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(IfConfigDeclSyntax.self))
1023 |   }
     :
1026 |   ///   - Parameter node: the node that is being visited
1027 |   ///   - Returns: the rewritten node
1028 |   open func visit(_ node: IfExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1029 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IfExprSyntax.self))
1030 |   }
     :
1033 |   ///   - Parameter node: the node that is being visited
1034 |   ///   - Returns: the rewritten node
1035 |   open func visit(_ node: ImplementsAttributeArgumentsSyntax) -> ImplementsAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1036 |     return visitChildren(node._syntaxNode).cast(ImplementsAttributeArgumentsSyntax.self)
1037 |   }
     :
1040 |   ///   - Parameter node: the node that is being visited
1041 |   ///   - Returns: the rewritten node
1042 |   open func visit(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1043 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ImplicitlyUnwrappedOptionalTypeSyntax.self))
1044 |   }
     :
1047 |   ///   - Parameter node: the node that is being visited
1048 |   ///   - Returns: the rewritten node
1049 |   open func visit(_ node: ImportDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1050 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ImportDeclSyntax.self))
1051 |   }
     :
1054 |   ///   - Parameter node: the node that is being visited
1055 |   ///   - Returns: the rewritten node
1056 |   open func visit(_ node: ImportPathComponentListSyntax) -> ImportPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1057 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentListSyntax.self)
1058 |   }
     :
1061 |   ///   - Parameter node: the node that is being visited
1062 |   ///   - Returns: the rewritten node
1063 |   open func visit(_ node: ImportPathComponentSyntax) -> ImportPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1064 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentSyntax.self)
1065 |   }
     :
1068 |   ///   - Parameter node: the node that is being visited
1069 |   ///   - Returns: the rewritten node
1070 |   open func visit(_ node: InOutExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1071 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InOutExprSyntax.self))
1072 |   }
     :
1075 |   ///   - Parameter node: the node that is being visited
1076 |   ///   - Returns: the rewritten node
1077 |   open func visit(_ node: InfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1078 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InfixOperatorExprSyntax.self))
1079 |   }
     :
1082 |   ///   - Parameter node: the node that is being visited
1083 |   ///   - Returns: the rewritten node
1084 |   open func visit(_ node: InheritanceClauseSyntax) -> InheritanceClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1085 |     return visitChildren(node._syntaxNode).cast(InheritanceClauseSyntax.self)
1086 |   }
     :
1089 |   ///   - Parameter node: the node that is being visited
1090 |   ///   - Returns: the rewritten node
1091 |   open func visit(_ node: InheritedTypeListSyntax) -> InheritedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1092 |     return visitChildren(node._syntaxNode).cast(InheritedTypeListSyntax.self)
1093 |   }
     :
1096 |   ///   - Parameter node: the node that is being visited
1097 |   ///   - Returns: the rewritten node
1098 |   open func visit(_ node: InheritedTypeSyntax) -> InheritedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1099 |     return visitChildren(node._syntaxNode).cast(InheritedTypeSyntax.self)
1100 |   }
     :
1103 |   ///   - Parameter node: the node that is being visited
1104 |   ///   - Returns: the rewritten node
1105 |   open func visit(_ node: InitializerClauseSyntax) -> InitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1106 |     return visitChildren(node._syntaxNode).cast(InitializerClauseSyntax.self)
1107 |   }
     :
1110 |   ///   - Parameter node: the node that is being visited
1111 |   ///   - Returns: the rewritten node
1112 |   open func visit(_ node: InitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1113 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(InitializerDeclSyntax.self))
1114 |   }
     :
1117 |   ///   - Parameter node: the node that is being visited
1118 |   ///   - Returns: the rewritten node
1119 |   open func visit(_ node: IntegerLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1120 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IntegerLiteralExprSyntax.self))
1121 |   }
     :
1124 |   ///   - Parameter node: the node that is being visited
1125 |   ///   - Returns: the rewritten node
1126 |   open func visit(_ node: IsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1127 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IsExprSyntax.self))
1128 |   }
     :
1131 |   ///   - Parameter node: the node that is being visited
1132 |   ///   - Returns: the rewritten node
1133 |   open func visit(_ node: IsTypePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1134 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IsTypePatternSyntax.self))
1135 |   }
     :
1138 |   ///   - Parameter node: the node that is being visited
1139 |   ///   - Returns: the rewritten node
1140 |   open func visit(_ node: KeyPathComponentListSyntax) -> KeyPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1141 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentListSyntax.self)
1142 |   }
     :
1145 |   ///   - Parameter node: the node that is being visited
1146 |   ///   - Returns: the rewritten node
1147 |   open func visit(_ node: KeyPathComponentSyntax) -> KeyPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1148 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentSyntax.self)
1149 |   }
     :
1152 |   ///   - Parameter node: the node that is being visited
1153 |   ///   - Returns: the rewritten node
1154 |   open func visit(_ node: KeyPathExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1155 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(KeyPathExprSyntax.self))
1156 |   }
     :
1159 |   ///   - Parameter node: the node that is being visited
1160 |   ///   - Returns: the rewritten node
1161 |   open func visit(_ node: KeyPathOptionalComponentSyntax) -> KeyPathOptionalComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1162 |     return visitChildren(node._syntaxNode).cast(KeyPathOptionalComponentSyntax.self)
1163 |   }
     :
1166 |   ///   - Parameter node: the node that is being visited
1167 |   ///   - Returns: the rewritten node
1168 |   open func visit(_ node: KeyPathPropertyComponentSyntax) -> KeyPathPropertyComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1169 |     return visitChildren(node._syntaxNode).cast(KeyPathPropertyComponentSyntax.self)
1170 |   }
     :
1173 |   ///   - Parameter node: the node that is being visited
1174 |   ///   - Returns: the rewritten node
1175 |   open func visit(_ node: KeyPathSubscriptComponentSyntax) -> KeyPathSubscriptComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1176 |     return visitChildren(node._syntaxNode).cast(KeyPathSubscriptComponentSyntax.self)
1177 |   }
     :
1180 |   ///   - Parameter node: the node that is being visited
1181 |   ///   - Returns: the rewritten node
1182 |   open func visit(_ node: LabeledExprListSyntax) -> LabeledExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1183 |     return visitChildren(node._syntaxNode).cast(LabeledExprListSyntax.self)
1184 |   }
     :
1187 |   ///   - Parameter node: the node that is being visited
1188 |   ///   - Returns: the rewritten node
1189 |   open func visit(_ node: LabeledExprSyntax) -> LabeledExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1190 |     return visitChildren(node._syntaxNode).cast(LabeledExprSyntax.self)
1191 |   }
     :
1194 |   ///   - Parameter node: the node that is being visited
1195 |   ///   - Returns: the rewritten node
1196 |   open func visit(_ node: LabeledSpecializeArgumentSyntax) -> LabeledSpecializeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1197 |     return visitChildren(node._syntaxNode).cast(LabeledSpecializeArgumentSyntax.self)
1198 |   }
     :
1201 |   ///   - Parameter node: the node that is being visited
1202 |   ///   - Returns: the rewritten node
1203 |   open func visit(_ node: LabeledStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1204 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(LabeledStmtSyntax.self))
1205 |   }
     :
1208 |   ///   - Parameter node: the node that is being visited
1209 |   ///   - Returns: the rewritten node
1210 |   open func visit(_ node: LayoutRequirementSyntax) -> LayoutRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1211 |     return visitChildren(node._syntaxNode).cast(LayoutRequirementSyntax.self)
1212 |   }
     :
1245 |   ///   - Parameter node: the node that is being visited
1246 |   ///   - Returns: the rewritten node
1247 |   open func visit(_ node: MacroDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1248 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroDeclSyntax.self))
1249 |   }
     :
1252 |   ///   - Parameter node: the node that is being visited
1253 |   ///   - Returns: the rewritten node
1254 |   open func visit(_ node: MacroExpansionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1255 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionDeclSyntax.self))
1256 |   }
     :
1259 |   ///   - Parameter node: the node that is being visited
1260 |   ///   - Returns: the rewritten node
1261 |   open func visit(_ node: MacroExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1262 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionExprSyntax.self))
1263 |   }
     :
1266 |   ///   - Parameter node: the node that is being visited
1267 |   ///   - Returns: the rewritten node
1268 |   open func visit(_ node: MatchingPatternConditionSyntax) -> MatchingPatternConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1269 |     return visitChildren(node._syntaxNode).cast(MatchingPatternConditionSyntax.self)
1270 |   }
     :
1273 |   ///   - Parameter node: the node that is being visited
1274 |   ///   - Returns: the rewritten node
1275 |   open func visit(_ node: MemberAccessExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1276 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MemberAccessExprSyntax.self))
1277 |   }
     :
1280 |   ///   - Parameter node: the node that is being visited
1281 |   ///   - Returns: the rewritten node
1282 |   open func visit(_ node: MemberBlockItemListSyntax) -> MemberBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1283 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemListSyntax.self)
1284 |   }
     :
1287 |   ///   - Parameter node: the node that is being visited
1288 |   ///   - Returns: the rewritten node
1289 |   open func visit(_ node: MemberBlockItemSyntax) -> MemberBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1290 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemSyntax.self)
1291 |   }
     :
1294 |   ///   - Parameter node: the node that is being visited
1295 |   ///   - Returns: the rewritten node
1296 |   open func visit(_ node: MemberBlockSyntax) -> MemberBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
1297 |     return visitChildren(node._syntaxNode).cast(MemberBlockSyntax.self)
1298 |   }
     :
1301 |   ///   - Parameter node: the node that is being visited
1302 |   ///   - Returns: the rewritten node
1303 |   open func visit(_ node: MemberTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1304 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MemberTypeSyntax.self))
1305 |   }
     :
1308 |   ///   - Parameter node: the node that is being visited
1309 |   ///   - Returns: the rewritten node
1310 |   open func visit(_ node: MetatypeTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1311 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MetatypeTypeSyntax.self))
1312 |   }
     :
1315 |   ///   - Parameter node: the node that is being visited
1316 |   ///   - Returns: the rewritten node
1317 |   open func visit(_ node: MissingDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1318 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MissingDeclSyntax.self))
1319 |   }
     :
1322 |   ///   - Parameter node: the node that is being visited
1323 |   ///   - Returns: the rewritten node
1324 |   open func visit(_ node: MissingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1325 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MissingExprSyntax.self))
1326 |   }
     :
1329 |   ///   - Parameter node: the node that is being visited
1330 |   ///   - Returns: the rewritten node
1331 |   open func visit(_ node: MissingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1332 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(MissingPatternSyntax.self))
1333 |   }
     :
1336 |   ///   - Parameter node: the node that is being visited
1337 |   ///   - Returns: the rewritten node
1338 |   open func visit(_ node: MissingStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1339 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(MissingStmtSyntax.self))
1340 |   }
     :
1343 |   ///   - Parameter node: the node that is being visited
1344 |   ///   - Returns: the rewritten node
1345 |   open func visit(_ node: MissingSyntax) -> Syntax {
     |             `- note: potential overridden instance method 'visit' here
1346 |     return Syntax(visitChildren(node._syntaxNode).cast(MissingSyntax.self))
1347 |   }
     :
1350 |   ///   - Parameter node: the node that is being visited
1351 |   ///   - Returns: the rewritten node
1352 |   open func visit(_ node: MissingTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1353 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MissingTypeSyntax.self))
1354 |   }
     :
1357 |   ///   - Parameter node: the node that is being visited
1358 |   ///   - Returns: the rewritten node
1359 |   open func visit(_ node: MultipleTrailingClosureElementListSyntax) -> MultipleTrailingClosureElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1360 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementListSyntax.self)
1361 |   }
     :
1364 |   ///   - Parameter node: the node that is being visited
1365 |   ///   - Returns: the rewritten node
1366 |   open func visit(_ node: MultipleTrailingClosureElementSyntax) -> MultipleTrailingClosureElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1367 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementSyntax.self)
1368 |   }
     :
1371 |   ///   - Parameter node: the node that is being visited
1372 |   ///   - Returns: the rewritten node
1373 |   open func visit(_ node: NamedOpaqueReturnTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1374 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(NamedOpaqueReturnTypeSyntax.self))
1375 |   }
     :
1378 |   ///   - Parameter node: the node that is being visited
1379 |   ///   - Returns: the rewritten node
1380 |   open func visit(_ node: NilLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1381 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(NilLiteralExprSyntax.self))
1382 |   }
     :
1385 |   ///   - Parameter node: the node that is being visited
1386 |   ///   - Returns: the rewritten node
1387 |   open func visit(_ node: ObjCSelectorPieceListSyntax) -> ObjCSelectorPieceListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1388 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceListSyntax.self)
1389 |   }
     :
1392 |   ///   - Parameter node: the node that is being visited
1393 |   ///   - Returns: the rewritten node
1394 |   open func visit(_ node: ObjCSelectorPieceSyntax) -> ObjCSelectorPieceSyntax {
     |             `- note: potential overridden instance method 'visit' here
1395 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceSyntax.self)
1396 |   }
     :
1399 |   ///   - Parameter node: the node that is being visited
1400 |   ///   - Returns: the rewritten node
1401 |   open func visit(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) -> OpaqueReturnTypeOfAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1402 |     return visitChildren(node._syntaxNode).cast(OpaqueReturnTypeOfAttributeArgumentsSyntax.self)
1403 |   }
     :
1406 |   ///   - Parameter node: the node that is being visited
1407 |   ///   - Returns: the rewritten node
1408 |   open func visit(_ node: OperatorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1409 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(OperatorDeclSyntax.self))
1410 |   }
     :
1413 |   ///   - Parameter node: the node that is being visited
1414 |   ///   - Returns: the rewritten node
1415 |   open func visit(_ node: OperatorPrecedenceAndTypesSyntax) -> OperatorPrecedenceAndTypesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1416 |     return visitChildren(node._syntaxNode).cast(OperatorPrecedenceAndTypesSyntax.self)
1417 |   }
     :
1420 |   ///   - Parameter node: the node that is being visited
1421 |   ///   - Returns: the rewritten node
1422 |   open func visit(_ node: OptionalBindingConditionSyntax) -> OptionalBindingConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1423 |     return visitChildren(node._syntaxNode).cast(OptionalBindingConditionSyntax.self)
1424 |   }
     :
1427 |   ///   - Parameter node: the node that is being visited
1428 |   ///   - Returns: the rewritten node
1429 |   open func visit(_ node: OptionalChainingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1430 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(OptionalChainingExprSyntax.self))
1431 |   }
     :
1434 |   ///   - Parameter node: the node that is being visited
1435 |   ///   - Returns: the rewritten node
1436 |   open func visit(_ node: OptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1437 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(OptionalTypeSyntax.self))
1438 |   }
     :
1441 |   ///   - Parameter node: the node that is being visited
1442 |   ///   - Returns: the rewritten node
1443 |   open func visit(_ node: OriginallyDefinedInAttributeArgumentsSyntax) -> OriginallyDefinedInAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1444 |     return visitChildren(node._syntaxNode).cast(OriginallyDefinedInAttributeArgumentsSyntax.self)
1445 |   }
     :
1448 |   ///   - Parameter node: the node that is being visited
1449 |   ///   - Returns: the rewritten node
1450 |   open func visit(_ node: PackElementExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1451 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackElementExprSyntax.self))
1452 |   }
     :
1455 |   ///   - Parameter node: the node that is being visited
1456 |   ///   - Returns: the rewritten node
1457 |   open func visit(_ node: PackElementTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1458 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackElementTypeSyntax.self))
1459 |   }
     :
1462 |   ///   - Parameter node: the node that is being visited
1463 |   ///   - Returns: the rewritten node
1464 |   open func visit(_ node: PackExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1465 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackExpansionExprSyntax.self))
1466 |   }
     :
1469 |   ///   - Parameter node: the node that is being visited
1470 |   ///   - Returns: the rewritten node
1471 |   open func visit(_ node: PackExpansionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1472 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackExpansionTypeSyntax.self))
1473 |   }
     :
1476 |   ///   - Parameter node: the node that is being visited
1477 |   ///   - Returns: the rewritten node
1478 |   open func visit(_ node: PatternBindingListSyntax) -> PatternBindingListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1479 |     return visitChildren(node._syntaxNode).cast(PatternBindingListSyntax.self)
1480 |   }
     :
1483 |   ///   - Parameter node: the node that is being visited
1484 |   ///   - Returns: the rewritten node
1485 |   open func visit(_ node: PatternBindingSyntax) -> PatternBindingSyntax {
     |             `- note: potential overridden instance method 'visit' here
1486 |     return visitChildren(node._syntaxNode).cast(PatternBindingSyntax.self)
1487 |   }
     :
1490 |   ///   - Parameter node: the node that is being visited
1491 |   ///   - Returns: the rewritten node
1492 |   open func visit(_ node: PatternExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1493 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PatternExprSyntax.self))
1494 |   }
     :
1497 |   ///   - Parameter node: the node that is being visited
1498 |   ///   - Returns: the rewritten node
1499 |   open func visit(_ node: PlatformVersionItemListSyntax) -> PlatformVersionItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1500 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemListSyntax.self)
1501 |   }
     :
1504 |   ///   - Parameter node: the node that is being visited
1505 |   ///   - Returns: the rewritten node
1506 |   open func visit(_ node: PlatformVersionItemSyntax) -> PlatformVersionItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1507 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemSyntax.self)
1508 |   }
     :
1511 |   ///   - Parameter node: the node that is being visited
1512 |   ///   - Returns: the rewritten node
1513 |   open func visit(_ node: PlatformVersionSyntax) -> PlatformVersionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1514 |     return visitChildren(node._syntaxNode).cast(PlatformVersionSyntax.self)
1515 |   }
     :
1518 |   ///   - Parameter node: the node that is being visited
1519 |   ///   - Returns: the rewritten node
1520 |   open func visit(_ node: PostfixIfConfigExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1521 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixIfConfigExprSyntax.self))
1522 |   }
     :
1525 |   ///   - Parameter node: the node that is being visited
1526 |   ///   - Returns: the rewritten node
1527 |   open func visit(_ node: PostfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1528 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixOperatorExprSyntax.self))
1529 |   }
     :
1532 |   ///   - Parameter node: the node that is being visited
1533 |   ///   - Returns: the rewritten node
1534 |   open func visit(_ node: PoundSourceLocationArgumentsSyntax) -> PoundSourceLocationArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1535 |     return visitChildren(node._syntaxNode).cast(PoundSourceLocationArgumentsSyntax.self)
1536 |   }
     :
1539 |   ///   - Parameter node: the node that is being visited
1540 |   ///   - Returns: the rewritten node
1541 |   open func visit(_ node: PoundSourceLocationSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1542 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PoundSourceLocationSyntax.self))
1543 |   }
     :
1546 |   ///   - Parameter node: the node that is being visited
1547 |   ///   - Returns: the rewritten node
1548 |   open func visit(_ node: PrecedenceGroupAssignmentSyntax) -> PrecedenceGroupAssignmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1549 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssignmentSyntax.self)
1550 |   }
     :
1553 |   ///   - Parameter node: the node that is being visited
1554 |   ///   - Returns: the rewritten node
1555 |   open func visit(_ node: PrecedenceGroupAssociativitySyntax) -> PrecedenceGroupAssociativitySyntax {
     |             `- note: potential overridden instance method 'visit' here
1556 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssociativitySyntax.self)
1557 |   }
     :
1560 |   ///   - Parameter node: the node that is being visited
1561 |   ///   - Returns: the rewritten node
1562 |   open func visit(_ node: PrecedenceGroupAttributeListSyntax) -> PrecedenceGroupAttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1563 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAttributeListSyntax.self)
1564 |   }
     :
1567 |   ///   - Parameter node: the node that is being visited
1568 |   ///   - Returns: the rewritten node
1569 |   open func visit(_ node: PrecedenceGroupDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1570 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PrecedenceGroupDeclSyntax.self))
1571 |   }
     :
1574 |   ///   - Parameter node: the node that is being visited
1575 |   ///   - Returns: the rewritten node
1576 |   open func visit(_ node: PrecedenceGroupNameListSyntax) -> PrecedenceGroupNameListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1577 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameListSyntax.self)
1578 |   }
     :
1581 |   ///   - Parameter node: the node that is being visited
1582 |   ///   - Returns: the rewritten node
1583 |   open func visit(_ node: PrecedenceGroupNameSyntax) -> PrecedenceGroupNameSyntax {
     |             `- note: potential overridden instance method 'visit' here
1584 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameSyntax.self)
1585 |   }
     :
1588 |   ///   - Parameter node: the node that is being visited
1589 |   ///   - Returns: the rewritten node
1590 |   open func visit(_ node: PrecedenceGroupRelationSyntax) -> PrecedenceGroupRelationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1591 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupRelationSyntax.self)
1592 |   }
     :
1595 |   ///   - Parameter node: the node that is being visited
1596 |   ///   - Returns: the rewritten node
1597 |   open func visit(_ node: PrefixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1598 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PrefixOperatorExprSyntax.self))
1599 |   }
     :
1602 |   ///   - Parameter node: the node that is being visited
1603 |   ///   - Returns: the rewritten node
1604 |   open func visit(_ node: PrimaryAssociatedTypeClauseSyntax) -> PrimaryAssociatedTypeClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1605 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeClauseSyntax.self)
1606 |   }
     :
1609 |   ///   - Parameter node: the node that is being visited
1610 |   ///   - Returns: the rewritten node
1611 |   open func visit(_ node: PrimaryAssociatedTypeListSyntax) -> PrimaryAssociatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1612 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeListSyntax.self)
1613 |   }
     :
1616 |   ///   - Parameter node: the node that is being visited
1617 |   ///   - Returns: the rewritten node
1618 |   open func visit(_ node: PrimaryAssociatedTypeSyntax) -> PrimaryAssociatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1619 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeSyntax.self)
1620 |   }
     :
1623 |   ///   - Parameter node: the node that is being visited
1624 |   ///   - Returns: the rewritten node
1625 |   open func visit(_ node: ProtocolDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1626 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ProtocolDeclSyntax.self))
1627 |   }
     :
1630 |   ///   - Parameter node: the node that is being visited
1631 |   ///   - Returns: the rewritten node
1632 |   open func visit(_ node: RegexLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1633 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(RegexLiteralExprSyntax.self))
1634 |   }
     :
1637 |   ///   - Parameter node: the node that is being visited
1638 |   ///   - Returns: the rewritten node
1639 |   open func visit(_ node: RepeatStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1640 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(RepeatStmtSyntax.self))
1641 |   }
     :
1644 |   ///   - Parameter node: the node that is being visited
1645 |   ///   - Returns: the rewritten node
1646 |   open func visit(_ node: ReturnClauseSyntax) -> ReturnClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1647 |     return visitChildren(node._syntaxNode).cast(ReturnClauseSyntax.self)
1648 |   }
     :
1651 |   ///   - Parameter node: the node that is being visited
1652 |   ///   - Returns: the rewritten node
1653 |   open func visit(_ node: ReturnStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1654 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ReturnStmtSyntax.self))
1655 |   }
     :
1658 |   ///   - Parameter node: the node that is being visited
1659 |   ///   - Returns: the rewritten node
1660 |   open func visit(_ node: SameTypeRequirementSyntax) -> SameTypeRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1661 |     return visitChildren(node._syntaxNode).cast(SameTypeRequirementSyntax.self)
1662 |   }
     :
1665 |   ///   - Parameter node: the node that is being visited
1666 |   ///   - Returns: the rewritten node
1667 |   open func visit(_ node: SequenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1668 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SequenceExprSyntax.self))
1669 |   }
     :
1672 |   ///   - Parameter node: the node that is being visited
1673 |   ///   - Returns: the rewritten node
1674 |   open func visit(_ node: SimpleStringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1675 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SimpleStringLiteralExprSyntax.self))
1676 |   }
     :
1679 |   ///   - Parameter node: the node that is being visited
1680 |   ///   - Returns: the rewritten node
1681 |   open func visit(_ node: SimpleStringLiteralSegmentListSyntax) -> SimpleStringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1682 |     return visitChildren(node._syntaxNode).cast(SimpleStringLiteralSegmentListSyntax.self)
1683 |   }
     :
1686 |   ///   - Parameter node: the node that is being visited
1687 |   ///   - Returns: the rewritten node
1688 |   open func visit(_ node: SimpleTypeSpecifierSyntax) -> SimpleTypeSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
1689 |     return visitChildren(node._syntaxNode).cast(SimpleTypeSpecifierSyntax.self)
1690 |   }
     :
1693 |   ///   - Parameter node: the node that is being visited
1694 |   ///   - Returns: the rewritten node
1695 |   open func visit(_ node: SomeOrAnyTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1696 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SomeOrAnyTypeSyntax.self))
1697 |   }
     :
1700 |   ///   - Parameter node: the node that is being visited
1701 |   ///   - Returns: the rewritten node
1702 |   open func visit(_ node: SourceFileSyntax) -> SourceFileSyntax {
     |             `- note: potential overridden instance method 'visit' here
1703 |     return visitChildren(node._syntaxNode).cast(SourceFileSyntax.self)
1704 |   }
     :
1707 |   ///   - Parameter node: the node that is being visited
1708 |   ///   - Returns: the rewritten node
1709 |   open func visit(_ node: SpecializeAttributeArgumentListSyntax) -> SpecializeAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1710 |     return visitChildren(node._syntaxNode).cast(SpecializeAttributeArgumentListSyntax.self)
1711 |   }
     :
1714 |   ///   - Parameter node: the node that is being visited
1715 |   ///   - Returns: the rewritten node
1716 |   open func visit(_ node: SpecializeAvailabilityArgumentSyntax) -> SpecializeAvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1717 |     return visitChildren(node._syntaxNode).cast(SpecializeAvailabilityArgumentSyntax.self)
1718 |   }
     :
1721 |   ///   - Parameter node: the node that is being visited
1722 |   ///   - Returns: the rewritten node
1723 |   open func visit(_ node: SpecializeTargetFunctionArgumentSyntax) -> SpecializeTargetFunctionArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1724 |     return visitChildren(node._syntaxNode).cast(SpecializeTargetFunctionArgumentSyntax.self)
1725 |   }
     :
1728 |   ///   - Parameter node: the node that is being visited
1729 |   ///   - Returns: the rewritten node
1730 |   open func visit(_ node: StringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1731 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(StringLiteralExprSyntax.self))
1732 |   }
     :
1735 |   ///   - Parameter node: the node that is being visited
1736 |   ///   - Returns: the rewritten node
1737 |   open func visit(_ node: StringLiteralSegmentListSyntax) -> StringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1738 |     return visitChildren(node._syntaxNode).cast(StringLiteralSegmentListSyntax.self)
1739 |   }
     :
1742 |   ///   - Parameter node: the node that is being visited
1743 |   ///   - Returns: the rewritten node
1744 |   open func visit(_ node: StringSegmentSyntax) -> StringSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1745 |     return visitChildren(node._syntaxNode).cast(StringSegmentSyntax.self)
1746 |   }
     :
1749 |   ///   - Parameter node: the node that is being visited
1750 |   ///   - Returns: the rewritten node
1751 |   open func visit(_ node: StructDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1752 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(StructDeclSyntax.self))
1753 |   }
     :
1756 |   ///   - Parameter node: the node that is being visited
1757 |   ///   - Returns: the rewritten node
1758 |   open func visit(_ node: SubscriptCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1759 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SubscriptCallExprSyntax.self))
1760 |   }
     :
1763 |   ///   - Parameter node: the node that is being visited
1764 |   ///   - Returns: the rewritten node
1765 |   open func visit(_ node: SubscriptDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1766 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(SubscriptDeclSyntax.self))
1767 |   }
     :
1770 |   ///   - Parameter node: the node that is being visited
1771 |   ///   - Returns: the rewritten node
1772 |   open func visit(_ node: SuperExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1773 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SuperExprSyntax.self))
1774 |   }
     :
1777 |   ///   - Parameter node: the node that is being visited
1778 |   ///   - Returns: the rewritten node
1779 |   open func visit(_ node: SuppressedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1780 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SuppressedTypeSyntax.self))
1781 |   }
     :
1784 |   ///   - Parameter node: the node that is being visited
1785 |   ///   - Returns: the rewritten node
1786 |   open func visit(_ node: SwitchCaseItemListSyntax) -> SwitchCaseItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1787 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemListSyntax.self)
1788 |   }
     :
1791 |   ///   - Parameter node: the node that is being visited
1792 |   ///   - Returns: the rewritten node
1793 |   open func visit(_ node: SwitchCaseItemSyntax) -> SwitchCaseItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1794 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemSyntax.self)
1795 |   }
     :
1798 |   ///   - Parameter node: the node that is being visited
1799 |   ///   - Returns: the rewritten node
1800 |   open func visit(_ node: SwitchCaseLabelSyntax) -> SwitchCaseLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1801 |     return visitChildren(node._syntaxNode).cast(SwitchCaseLabelSyntax.self)
1802 |   }
     :
1805 |   ///   - Parameter node: the node that is being visited
1806 |   ///   - Returns: the rewritten node
1807 |   open func visit(_ node: SwitchCaseListSyntax) -> SwitchCaseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1808 |     return visitChildren(node._syntaxNode).cast(SwitchCaseListSyntax.self)
1809 |   }
     :
1812 |   ///   - Parameter node: the node that is being visited
1813 |   ///   - Returns: the rewritten node
1814 |   open func visit(_ node: SwitchCaseSyntax) -> SwitchCaseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1815 |     return visitChildren(node._syntaxNode).cast(SwitchCaseSyntax.self)
1816 |   }
     :
1819 |   ///   - Parameter node: the node that is being visited
1820 |   ///   - Returns: the rewritten node
1821 |   open func visit(_ node: SwitchDefaultLabelSyntax) -> SwitchDefaultLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1822 |     return visitChildren(node._syntaxNode).cast(SwitchDefaultLabelSyntax.self)
1823 |   }
     :
1826 |   ///   - Parameter node: the node that is being visited
1827 |   ///   - Returns: the rewritten node
1828 |   open func visit(_ node: SwitchExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1829 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SwitchExprSyntax.self))
1830 |   }
     :
1833 |   ///   - Parameter node: the node that is being visited
1834 |   ///   - Returns: the rewritten node
1835 |   open func visit(_ node: TernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1836 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TernaryExprSyntax.self))
1837 |   }
     :
1850 |   ///   - Parameter node: the node that is being visited
1851 |   ///   - Returns: the rewritten node
1852 |   open func visit(_ node: ThrowStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1853 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ThrowStmtSyntax.self))
1854 |   }
     :
1857 |   ///   - Parameter node: the node that is being visited
1858 |   ///   - Returns: the rewritten node
1859 |   open func visit(_ node: ThrowsClauseSyntax) -> ThrowsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1860 |     return visitChildren(node._syntaxNode).cast(ThrowsClauseSyntax.self)
1861 |   }
     :
1864 |   ///   - Parameter node: the node that is being visited
1865 |   ///   - Returns: the rewritten node
1866 |   open func visit(_ node: TryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1867 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TryExprSyntax.self))
1868 |   }
     :
1871 |   ///   - Parameter node: the node that is being visited
1872 |   ///   - Returns: the rewritten node
1873 |   open func visit(_ node: TupleExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1874 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TupleExprSyntax.self))
1875 |   }
     :
1878 |   ///   - Parameter node: the node that is being visited
1879 |   ///   - Returns: the rewritten node
1880 |   open func visit(_ node: TuplePatternElementListSyntax) -> TuplePatternElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1881 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementListSyntax.self)
1882 |   }
     :
1885 |   ///   - Parameter node: the node that is being visited
1886 |   ///   - Returns: the rewritten node
1887 |   open func visit(_ node: TuplePatternElementSyntax) -> TuplePatternElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1888 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementSyntax.self)
1889 |   }
     :
1892 |   ///   - Parameter node: the node that is being visited
1893 |   ///   - Returns: the rewritten node
1894 |   open func visit(_ node: TuplePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1895 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(TuplePatternSyntax.self))
1896 |   }
     :
1899 |   ///   - Parameter node: the node that is being visited
1900 |   ///   - Returns: the rewritten node
1901 |   open func visit(_ node: TupleTypeElementListSyntax) -> TupleTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1902 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementListSyntax.self)
1903 |   }
     :
1906 |   ///   - Parameter node: the node that is being visited
1907 |   ///   - Returns: the rewritten node
1908 |   open func visit(_ node: TupleTypeElementSyntax) -> TupleTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1909 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementSyntax.self)
1910 |   }
     :
1913 |   ///   - Parameter node: the node that is being visited
1914 |   ///   - Returns: the rewritten node
1915 |   open func visit(_ node: TupleTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1916 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(TupleTypeSyntax.self))
1917 |   }
     :
1920 |   ///   - Parameter node: the node that is being visited
1921 |   ///   - Returns: the rewritten node
1922 |   open func visit(_ node: TypeAliasDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1923 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(TypeAliasDeclSyntax.self))
1924 |   }
     :
1927 |   ///   - Parameter node: the node that is being visited
1928 |   ///   - Returns: the rewritten node
1929 |   open func visit(_ node: TypeAnnotationSyntax) -> TypeAnnotationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1930 |     return visitChildren(node._syntaxNode).cast(TypeAnnotationSyntax.self)
1931 |   }
     :
1934 |   ///   - Parameter node: the node that is being visited
1935 |   ///   - Returns: the rewritten node
1936 |   open func visit(_ node: TypeEffectSpecifiersSyntax) -> TypeEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
1937 |     return visitChildren(node._syntaxNode).cast(TypeEffectSpecifiersSyntax.self)
1938 |   }
     :
1941 |   ///   - Parameter node: the node that is being visited
1942 |   ///   - Returns: the rewritten node
1943 |   open func visit(_ node: TypeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1944 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TypeExprSyntax.self))
1945 |   }
     :
1948 |   ///   - Parameter node: the node that is being visited
1949 |   ///   - Returns: the rewritten node
1950 |   open func visit(_ node: TypeInitializerClauseSyntax) -> TypeInitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1951 |     return visitChildren(node._syntaxNode).cast(TypeInitializerClauseSyntax.self)
1952 |   }
     :
1955 |   ///   - Parameter node: the node that is being visited
1956 |   ///   - Returns: the rewritten node
1957 |   open func visit(_ node: TypeSpecifierListSyntax) -> TypeSpecifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1958 |     return visitChildren(node._syntaxNode).cast(TypeSpecifierListSyntax.self)
1959 |   }
     :
1962 |   ///   - Parameter node: the node that is being visited
1963 |   ///   - Returns: the rewritten node
1964 |   open func visit(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) -> UnavailableFromAsyncAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1965 |     return visitChildren(node._syntaxNode).cast(UnavailableFromAsyncAttributeArgumentsSyntax.self)
1966 |   }
     :
1969 |   ///   - Parameter node: the node that is being visited
1970 |   ///   - Returns: the rewritten node
1971 |   open func visit(_ node: UnderscorePrivateAttributeArgumentsSyntax) -> UnderscorePrivateAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1972 |     return visitChildren(node._syntaxNode).cast(UnderscorePrivateAttributeArgumentsSyntax.self)
1973 |   }
     :
1976 |   ///   - Parameter node: the node that is being visited
1977 |   ///   - Returns: the rewritten node
1978 |   open func visit(_ node: UnexpectedNodesSyntax) -> UnexpectedNodesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1979 |     return visitChildren(node._syntaxNode).cast(UnexpectedNodesSyntax.self)
1980 |   }
     :
1983 |   ///   - Parameter node: the node that is being visited
1984 |   ///   - Returns: the rewritten node
1985 |   open func visit(_ node: UnresolvedAsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1986 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedAsExprSyntax.self))
1987 |   }
     :
1990 |   ///   - Parameter node: the node that is being visited
1991 |   ///   - Returns: the rewritten node
1992 |   open func visit(_ node: UnresolvedIsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1993 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedIsExprSyntax.self))
1994 |   }
     :
1997 |   ///   - Parameter node: the node that is being visited
1998 |   ///   - Returns: the rewritten node
1999 |   open func visit(_ node: UnresolvedTernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
2000 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedTernaryExprSyntax.self))
2001 |   }
     :
2004 |   ///   - Parameter node: the node that is being visited
2005 |   ///   - Returns: the rewritten node
2006 |   open func visit(_ node: ValueBindingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2007 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ValueBindingPatternSyntax.self))
2008 |   }
     :
2011 |   ///   - Parameter node: the node that is being visited
2012 |   ///   - Returns: the rewritten node
2013 |   open func visit(_ node: VariableDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
2014 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(VariableDeclSyntax.self))
2015 |   }
     :
2018 |   ///   - Parameter node: the node that is being visited
2019 |   ///   - Returns: the rewritten node
2020 |   open func visit(_ node: VersionComponentListSyntax) -> VersionComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2021 |     return visitChildren(node._syntaxNode).cast(VersionComponentListSyntax.self)
2022 |   }
     :
2025 |   ///   - Parameter node: the node that is being visited
2026 |   ///   - Returns: the rewritten node
2027 |   open func visit(_ node: VersionComponentSyntax) -> VersionComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
2028 |     return visitChildren(node._syntaxNode).cast(VersionComponentSyntax.self)
2029 |   }
     :
2032 |   ///   - Parameter node: the node that is being visited
2033 |   ///   - Returns: the rewritten node
2034 |   open func visit(_ node: VersionTupleSyntax) -> VersionTupleSyntax {
     |             `- note: potential overridden instance method 'visit' here
2035 |     return visitChildren(node._syntaxNode).cast(VersionTupleSyntax.self)
2036 |   }
     :
2039 |   ///   - Parameter node: the node that is being visited
2040 |   ///   - Returns: the rewritten node
2041 |   open func visit(_ node: WhereClauseSyntax) -> WhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2042 |     return visitChildren(node._syntaxNode).cast(WhereClauseSyntax.self)
2043 |   }
     :
2046 |   ///   - Parameter node: the node that is being visited
2047 |   ///   - Returns: the rewritten node
2048 |   open func visit(_ node: WhileStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2049 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(WhileStmtSyntax.self))
2050 |   }
     :
2053 |   ///   - Parameter node: the node that is being visited
2054 |   ///   - Returns: the rewritten node
2055 |   open func visit(_ node: WildcardPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2056 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(WildcardPatternSyntax.self))
2057 |   }
     :
2060 |   ///   - Parameter node: the node that is being visited
2061 |   ///   - Returns: the rewritten node
2062 |   open func visit(_ node: YieldStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2063 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(YieldStmtSyntax.self))
2064 |   }
     :
2067 |   ///   - Parameter node: the node that is being visited
2068 |   ///   - Returns: the rewritten node
2069 |   open func visit(_ node: YieldedExpressionListSyntax) -> YieldedExpressionListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2070 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionListSyntax.self)
2071 |   }
     :
2074 |   ///   - Parameter node: the node that is being visited
2075 |   ///   - Returns: the rewritten node
2076 |   open func visit(_ node: YieldedExpressionSyntax) -> YieldedExpressionSyntax {
     |             `- note: potential overridden instance method 'visit' here
2077 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionSyntax.self)
2078 |   }
     :
2081 |   ///   - Parameter node: the node that is being visited
2082 |   ///   - Returns: the rewritten node
2083 |   open func visit(_ node: YieldedExpressionsClauseSyntax) -> YieldedExpressionsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2084 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionsClauseSyntax.self)
2085 |   }
     :
2088 |   ///   - Parameter node: the node that is being visited
2089 |   ///   - Returns: the rewritten node
2090 |   public func visit(_ node: DeclSyntax) -> DeclSyntax {
     |               `- note: potential overridden instance method 'visit' here
2091 |     var node: Syntax = Syntax(node)
2092 |     dispatchVisit(&node)
     :
2097 |   ///   - Parameter node: the node that is being visited
2098 |   ///   - Returns: the rewritten node
2099 |   public func visit(_ node: ExprSyntax) -> ExprSyntax {
     |               `- note: potential overridden instance method 'visit' here
2100 |     var node: Syntax = Syntax(node)
2101 |     dispatchVisit(&node)
     :
2106 |   ///   - Parameter node: the node that is being visited
2107 |   ///   - Returns: the rewritten node
2108 |   public func visit(_ node: PatternSyntax) -> PatternSyntax {
     |               `- note: potential overridden instance method 'visit' here
2109 |     var node: Syntax = Syntax(node)
2110 |     dispatchVisit(&node)
     :
2115 |   ///   - Parameter node: the node that is being visited
2116 |   ///   - Returns: the rewritten node
2117 |   public func visit(_ node: StmtSyntax) -> StmtSyntax {
     |               `- note: potential overridden instance method 'visit' here
2118 |     var node: Syntax = Syntax(node)
2119 |     dispatchVisit(&node)
     :
2124 |   ///   - Parameter node: the node that is being visited
2125 |   ///   - Returns: the rewritten node
2126 |   public func visit(_ node: TypeSyntax) -> TypeSyntax {
     |               `- note: potential overridden instance method 'visit' here
2127 |     var node: Syntax = Syntax(node)
2128 |     dispatchVisit(&node)
/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:679:19: error: method does not override any method from its superclass
677 |     }
678 | 
679 |     override func visitAny(_ node: Syntax) -> SyntaxVisitorContinueKind {
    |                   `- error: method does not override any method from its superclass
680 |         currentIndex += 1
681 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:691:19: error: method does not override any method from its superclass
689 |     }
690 | 
691 |     override func visitPost(_ node: Syntax) {
    |                   `- error: method does not override any method from its superclass
692 |         _ = currentPath.popLast()
693 |     }

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxVisitor.swift:50:13: note: potential overridden instance method 'visitPost' here
  48 |   /// The function called after visiting ``AccessorBlockSyntax`` and its descendants.
  49 |   ///   - node: the node we just finished visiting.
  50 |   open func visitPost(_ node: AccessorBlockSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  51 |   }
  52 |   
     :
  60 |   /// The function called after visiting ``AccessorDeclListSyntax`` and its descendants.
  61 |   ///   - node: the node we just finished visiting.
  62 |   open func visitPost(_ node: AccessorDeclListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  63 |   }
  64 |   
     :
  72 |   /// The function called after visiting ``AccessorDeclSyntax`` and its descendants.
  73 |   ///   - node: the node we just finished visiting.
  74 |   open func visitPost(_ node: AccessorDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  75 |   }
  76 |   
     :
  84 |   /// The function called after visiting ``AccessorEffectSpecifiersSyntax`` and its descendants.
  85 |   ///   - node: the node we just finished visiting.
  86 |   open func visitPost(_ node: AccessorEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  87 |   }
  88 |   
     :
  96 |   /// The function called after visiting ``AccessorParametersSyntax`` and its descendants.
  97 |   ///   - node: the node we just finished visiting.
  98 |   open func visitPost(_ node: AccessorParametersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
  99 |   }
 100 |   
     :
 108 |   /// The function called after visiting ``ActorDeclSyntax`` and its descendants.
 109 |   ///   - node: the node we just finished visiting.
 110 |   open func visitPost(_ node: ActorDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 111 |   }
 112 |   
     :
 120 |   /// The function called after visiting ``ArrayElementListSyntax`` and its descendants.
 121 |   ///   - node: the node we just finished visiting.
 122 |   open func visitPost(_ node: ArrayElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 123 |   }
 124 |   
     :
 132 |   /// The function called after visiting ``ArrayElementSyntax`` and its descendants.
 133 |   ///   - node: the node we just finished visiting.
 134 |   open func visitPost(_ node: ArrayElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 135 |   }
 136 |   
     :
 144 |   /// The function called after visiting ``ArrayExprSyntax`` and its descendants.
 145 |   ///   - node: the node we just finished visiting.
 146 |   open func visitPost(_ node: ArrayExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 147 |   }
 148 |   
     :
 156 |   /// The function called after visiting ``ArrayTypeSyntax`` and its descendants.
 157 |   ///   - node: the node we just finished visiting.
 158 |   open func visitPost(_ node: ArrayTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 159 |   }
 160 |   
     :
 168 |   /// The function called after visiting ``ArrowExprSyntax`` and its descendants.
 169 |   ///   - node: the node we just finished visiting.
 170 |   open func visitPost(_ node: ArrowExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 171 |   }
 172 |   
     :
 180 |   /// The function called after visiting ``AsExprSyntax`` and its descendants.
 181 |   ///   - node: the node we just finished visiting.
 182 |   open func visitPost(_ node: AsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 183 |   }
 184 |   
     :
 192 |   /// The function called after visiting ``AssignmentExprSyntax`` and its descendants.
 193 |   ///   - node: the node we just finished visiting.
 194 |   open func visitPost(_ node: AssignmentExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 195 |   }
 196 |   
     :
 204 |   /// The function called after visiting ``AssociatedTypeDeclSyntax`` and its descendants.
 205 |   ///   - node: the node we just finished visiting.
 206 |   open func visitPost(_ node: AssociatedTypeDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 207 |   }
 208 |   
     :
 216 |   /// The function called after visiting ``AttributeListSyntax`` and its descendants.
 217 |   ///   - node: the node we just finished visiting.
 218 |   open func visitPost(_ node: AttributeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 219 |   }
 220 |   
     :
 228 |   /// The function called after visiting ``AttributeSyntax`` and its descendants.
 229 |   ///   - node: the node we just finished visiting.
 230 |   open func visitPost(_ node: AttributeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 231 |   }
 232 |   
     :
 240 |   /// The function called after visiting ``AttributedTypeSyntax`` and its descendants.
 241 |   ///   - node: the node we just finished visiting.
 242 |   open func visitPost(_ node: AttributedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 243 |   }
 244 |   
     :
 252 |   /// The function called after visiting ``AvailabilityArgumentListSyntax`` and its descendants.
 253 |   ///   - node: the node we just finished visiting.
 254 |   open func visitPost(_ node: AvailabilityArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 255 |   }
 256 |   
     :
 264 |   /// The function called after visiting ``AvailabilityArgumentSyntax`` and its descendants.
 265 |   ///   - node: the node we just finished visiting.
 266 |   open func visitPost(_ node: AvailabilityArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 267 |   }
 268 |   
     :
 276 |   /// The function called after visiting ``AvailabilityConditionSyntax`` and its descendants.
 277 |   ///   - node: the node we just finished visiting.
 278 |   open func visitPost(_ node: AvailabilityConditionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 279 |   }
 280 |   
     :
 288 |   /// The function called after visiting ``AvailabilityLabeledArgumentSyntax`` and its descendants.
 289 |   ///   - node: the node we just finished visiting.
 290 |   open func visitPost(_ node: AvailabilityLabeledArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 291 |   }
 292 |   
     :
 300 |   /// The function called after visiting ``AwaitExprSyntax`` and its descendants.
 301 |   ///   - node: the node we just finished visiting.
 302 |   open func visitPost(_ node: AwaitExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 303 |   }
 304 |   
     :
 312 |   /// The function called after visiting ``BackDeployedAttributeArgumentsSyntax`` and its descendants.
 313 |   ///   - node: the node we just finished visiting.
 314 |   open func visitPost(_ node: BackDeployedAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 315 |   }
 316 |   
     :
 324 |   /// The function called after visiting ``BinaryOperatorExprSyntax`` and its descendants.
 325 |   ///   - node: the node we just finished visiting.
 326 |   open func visitPost(_ node: BinaryOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 327 |   }
 328 |   
     :
 336 |   /// The function called after visiting ``BooleanLiteralExprSyntax`` and its descendants.
 337 |   ///   - node: the node we just finished visiting.
 338 |   open func visitPost(_ node: BooleanLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 339 |   }
 340 |   
     :
 348 |   /// The function called after visiting ``BorrowExprSyntax`` and its descendants.
 349 |   ///   - node: the node we just finished visiting.
 350 |   open func visitPost(_ node: BorrowExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 351 |   }
 352 |   
     :
 360 |   /// The function called after visiting ``BreakStmtSyntax`` and its descendants.
 361 |   ///   - node: the node we just finished visiting.
 362 |   open func visitPost(_ node: BreakStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 363 |   }
 364 |   
     :
 372 |   /// The function called after visiting `_CanImportExprSyntax` and its descendants.
 373 |   ///   - node: the node we just finished visiting.
 374 |   open func visitPost(_ node: _CanImportExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 375 |   }
 376 |   
     :
 384 |   /// The function called after visiting `_CanImportVersionInfoSyntax` and its descendants.
 385 |   ///   - node: the node we just finished visiting.
 386 |   open func visitPost(_ node: _CanImportVersionInfoSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 387 |   }
 388 |   
     :
 396 |   /// The function called after visiting ``CatchClauseListSyntax`` and its descendants.
 397 |   ///   - node: the node we just finished visiting.
 398 |   open func visitPost(_ node: CatchClauseListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 399 |   }
 400 |   
     :
 408 |   /// The function called after visiting ``CatchClauseSyntax`` and its descendants.
 409 |   ///   - node: the node we just finished visiting.
 410 |   open func visitPost(_ node: CatchClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 411 |   }
 412 |   
     :
 420 |   /// The function called after visiting ``CatchItemListSyntax`` and its descendants.
 421 |   ///   - node: the node we just finished visiting.
 422 |   open func visitPost(_ node: CatchItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 423 |   }
 424 |   
     :
 432 |   /// The function called after visiting ``CatchItemSyntax`` and its descendants.
 433 |   ///   - node: the node we just finished visiting.
 434 |   open func visitPost(_ node: CatchItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 435 |   }
 436 |   
     :
 444 |   /// The function called after visiting ``ClassDeclSyntax`` and its descendants.
 445 |   ///   - node: the node we just finished visiting.
 446 |   open func visitPost(_ node: ClassDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 447 |   }
 448 |   
     :
 456 |   /// The function called after visiting ``ClassRestrictionTypeSyntax`` and its descendants.
 457 |   ///   - node: the node we just finished visiting.
 458 |   open func visitPost(_ node: ClassRestrictionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 459 |   }
 460 |   
     :
 468 |   /// The function called after visiting ``ClosureCaptureClauseSyntax`` and its descendants.
 469 |   ///   - node: the node we just finished visiting.
 470 |   open func visitPost(_ node: ClosureCaptureClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 471 |   }
 472 |   
     :
 480 |   /// The function called after visiting ``ClosureCaptureListSyntax`` and its descendants.
 481 |   ///   - node: the node we just finished visiting.
 482 |   open func visitPost(_ node: ClosureCaptureListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 483 |   }
 484 |   
     :
 492 |   /// The function called after visiting ``ClosureCaptureSpecifierSyntax`` and its descendants.
 493 |   ///   - node: the node we just finished visiting.
 494 |   open func visitPost(_ node: ClosureCaptureSpecifierSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 495 |   }
 496 |   
     :
 504 |   /// The function called after visiting ``ClosureCaptureSyntax`` and its descendants.
 505 |   ///   - node: the node we just finished visiting.
 506 |   open func visitPost(_ node: ClosureCaptureSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 507 |   }
 508 |   
     :
 516 |   /// The function called after visiting ``ClosureExprSyntax`` and its descendants.
 517 |   ///   - node: the node we just finished visiting.
 518 |   open func visitPost(_ node: ClosureExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 519 |   }
 520 |   
     :
 528 |   /// The function called after visiting ``ClosureParameterClauseSyntax`` and its descendants.
 529 |   ///   - node: the node we just finished visiting.
 530 |   open func visitPost(_ node: ClosureParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 531 |   }
 532 |   
     :
 540 |   /// The function called after visiting ``ClosureParameterListSyntax`` and its descendants.
 541 |   ///   - node: the node we just finished visiting.
 542 |   open func visitPost(_ node: ClosureParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 543 |   }
 544 |   
     :
 552 |   /// The function called after visiting ``ClosureParameterSyntax`` and its descendants.
 553 |   ///   - node: the node we just finished visiting.
 554 |   open func visitPost(_ node: ClosureParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 555 |   }
 556 |   
     :
 564 |   /// The function called after visiting ``ClosureShorthandParameterListSyntax`` and its descendants.
 565 |   ///   - node: the node we just finished visiting.
 566 |   open func visitPost(_ node: ClosureShorthandParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 567 |   }
 568 |   
     :
 576 |   /// The function called after visiting ``ClosureShorthandParameterSyntax`` and its descendants.
 577 |   ///   - node: the node we just finished visiting.
 578 |   open func visitPost(_ node: ClosureShorthandParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 579 |   }
 580 |   
     :
 588 |   /// The function called after visiting ``ClosureSignatureSyntax`` and its descendants.
 589 |   ///   - node: the node we just finished visiting.
 590 |   open func visitPost(_ node: ClosureSignatureSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 591 |   }
 592 |   
     :
 600 |   /// The function called after visiting ``CodeBlockItemListSyntax`` and its descendants.
 601 |   ///   - node: the node we just finished visiting.
 602 |   open func visitPost(_ node: CodeBlockItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 603 |   }
 604 |   
     :
 612 |   /// The function called after visiting ``CodeBlockItemSyntax`` and its descendants.
 613 |   ///   - node: the node we just finished visiting.
 614 |   open func visitPost(_ node: CodeBlockItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 615 |   }
 616 |   
     :
 624 |   /// The function called after visiting ``CodeBlockSyntax`` and its descendants.
 625 |   ///   - node: the node we just finished visiting.
 626 |   open func visitPost(_ node: CodeBlockSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 627 |   }
 628 |   
     :
 636 |   /// The function called after visiting ``CompositionTypeElementListSyntax`` and its descendants.
 637 |   ///   - node: the node we just finished visiting.
 638 |   open func visitPost(_ node: CompositionTypeElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 639 |   }
 640 |   
     :
 648 |   /// The function called after visiting ``CompositionTypeElementSyntax`` and its descendants.
 649 |   ///   - node: the node we just finished visiting.
 650 |   open func visitPost(_ node: CompositionTypeElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 651 |   }
 652 |   
     :
 660 |   /// The function called after visiting ``CompositionTypeSyntax`` and its descendants.
 661 |   ///   - node: the node we just finished visiting.
 662 |   open func visitPost(_ node: CompositionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 663 |   }
 664 |   
     :
 672 |   /// The function called after visiting ``ConditionElementListSyntax`` and its descendants.
 673 |   ///   - node: the node we just finished visiting.
 674 |   open func visitPost(_ node: ConditionElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 675 |   }
 676 |   
     :
 684 |   /// The function called after visiting ``ConditionElementSyntax`` and its descendants.
 685 |   ///   - node: the node we just finished visiting.
 686 |   open func visitPost(_ node: ConditionElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 687 |   }
 688 |   
     :
 696 |   /// The function called after visiting ``ConformanceRequirementSyntax`` and its descendants.
 697 |   ///   - node: the node we just finished visiting.
 698 |   open func visitPost(_ node: ConformanceRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 699 |   }
 700 |   
     :
 708 |   /// The function called after visiting ``ConsumeExprSyntax`` and its descendants.
 709 |   ///   - node: the node we just finished visiting.
 710 |   open func visitPost(_ node: ConsumeExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 711 |   }
 712 |   
     :
 720 |   /// The function called after visiting ``ContinueStmtSyntax`` and its descendants.
 721 |   ///   - node: the node we just finished visiting.
 722 |   open func visitPost(_ node: ContinueStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 723 |   }
 724 |   
     :
 732 |   /// The function called after visiting ``ConventionAttributeArgumentsSyntax`` and its descendants.
 733 |   ///   - node: the node we just finished visiting.
 734 |   open func visitPost(_ node: ConventionAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 735 |   }
 736 |   
     :
 744 |   /// The function called after visiting ``ConventionWitnessMethodAttributeArgumentsSyntax`` and its descendants.
 745 |   ///   - node: the node we just finished visiting.
 746 |   open func visitPost(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 747 |   }
 748 |   
     :
 756 |   /// The function called after visiting ``CopyExprSyntax`` and its descendants.
 757 |   ///   - node: the node we just finished visiting.
 758 |   open func visitPost(_ node: CopyExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 759 |   }
 760 |   
     :
 768 |   /// The function called after visiting ``DeclModifierDetailSyntax`` and its descendants.
 769 |   ///   - node: the node we just finished visiting.
 770 |   open func visitPost(_ node: DeclModifierDetailSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 771 |   }
 772 |   
     :
 780 |   /// The function called after visiting ``DeclModifierListSyntax`` and its descendants.
 781 |   ///   - node: the node we just finished visiting.
 782 |   open func visitPost(_ node: DeclModifierListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 783 |   }
 784 |   
     :
 792 |   /// The function called after visiting ``DeclModifierSyntax`` and its descendants.
 793 |   ///   - node: the node we just finished visiting.
 794 |   open func visitPost(_ node: DeclModifierSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 795 |   }
 796 |   
     :
 804 |   /// The function called after visiting ``DeclNameArgumentListSyntax`` and its descendants.
 805 |   ///   - node: the node we just finished visiting.
 806 |   open func visitPost(_ node: DeclNameArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 807 |   }
 808 |   
     :
 816 |   /// The function called after visiting ``DeclNameArgumentSyntax`` and its descendants.
 817 |   ///   - node: the node we just finished visiting.
 818 |   open func visitPost(_ node: DeclNameArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 819 |   }
 820 |   
     :
 828 |   /// The function called after visiting ``DeclNameArgumentsSyntax`` and its descendants.
 829 |   ///   - node: the node we just finished visiting.
 830 |   open func visitPost(_ node: DeclNameArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 831 |   }
 832 |   
     :
 840 |   /// The function called after visiting ``DeclReferenceExprSyntax`` and its descendants.
 841 |   ///   - node: the node we just finished visiting.
 842 |   open func visitPost(_ node: DeclReferenceExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 843 |   }
 844 |   
     :
 852 |   /// The function called after visiting ``DeferStmtSyntax`` and its descendants.
 853 |   ///   - node: the node we just finished visiting.
 854 |   open func visitPost(_ node: DeferStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 855 |   }
 856 |   
     :
 864 |   /// The function called after visiting ``DeinitializerDeclSyntax`` and its descendants.
 865 |   ///   - node: the node we just finished visiting.
 866 |   open func visitPost(_ node: DeinitializerDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 867 |   }
 868 |   
     :
 876 |   /// The function called after visiting ``DeinitializerEffectSpecifiersSyntax`` and its descendants.
 877 |   ///   - node: the node we just finished visiting.
 878 |   open func visitPost(_ node: DeinitializerEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 879 |   }
 880 |   
     :
 888 |   /// The function called after visiting ``DerivativeAttributeArgumentsSyntax`` and its descendants.
 889 |   ///   - node: the node we just finished visiting.
 890 |   open func visitPost(_ node: DerivativeAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 891 |   }
 892 |   
     :
 900 |   /// The function called after visiting ``DesignatedTypeListSyntax`` and its descendants.
 901 |   ///   - node: the node we just finished visiting.
 902 |   open func visitPost(_ node: DesignatedTypeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 903 |   }
 904 |   
     :
 912 |   /// The function called after visiting ``DesignatedTypeSyntax`` and its descendants.
 913 |   ///   - node: the node we just finished visiting.
 914 |   open func visitPost(_ node: DesignatedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 915 |   }
 916 |   
     :
 924 |   /// The function called after visiting ``DictionaryElementListSyntax`` and its descendants.
 925 |   ///   - node: the node we just finished visiting.
 926 |   open func visitPost(_ node: DictionaryElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 927 |   }
 928 |   
     :
 936 |   /// The function called after visiting ``DictionaryElementSyntax`` and its descendants.
 937 |   ///   - node: the node we just finished visiting.
 938 |   open func visitPost(_ node: DictionaryElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 939 |   }
 940 |   
     :
 948 |   /// The function called after visiting ``DictionaryExprSyntax`` and its descendants.
 949 |   ///   - node: the node we just finished visiting.
 950 |   open func visitPost(_ node: DictionaryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 951 |   }
 952 |   
     :
 960 |   /// The function called after visiting ``DictionaryTypeSyntax`` and its descendants.
 961 |   ///   - node: the node we just finished visiting.
 962 |   open func visitPost(_ node: DictionaryTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 963 |   }
 964 |   
     :
 972 |   /// The function called after visiting ``DifferentiabilityArgumentListSyntax`` and its descendants.
 973 |   ///   - node: the node we just finished visiting.
 974 |   open func visitPost(_ node: DifferentiabilityArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 975 |   }
 976 |   
     :
 984 |   /// The function called after visiting ``DifferentiabilityArgumentSyntax`` and its descendants.
 985 |   ///   - node: the node we just finished visiting.
 986 |   open func visitPost(_ node: DifferentiabilityArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 987 |   }
 988 |   
     :
 996 |   /// The function called after visiting ``DifferentiabilityArgumentsSyntax`` and its descendants.
 997 |   ///   - node: the node we just finished visiting.
 998 |   open func visitPost(_ node: DifferentiabilityArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
 999 |   }
1000 |   
     :
1008 |   /// The function called after visiting ``DifferentiabilityWithRespectToArgumentSyntax`` and its descendants.
1009 |   ///   - node: the node we just finished visiting.
1010 |   open func visitPost(_ node: DifferentiabilityWithRespectToArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1011 |   }
1012 |   
     :
1020 |   /// The function called after visiting ``DifferentiableAttributeArgumentsSyntax`` and its descendants.
1021 |   ///   - node: the node we just finished visiting.
1022 |   open func visitPost(_ node: DifferentiableAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1023 |   }
1024 |   
     :
1032 |   /// The function called after visiting ``DiscardAssignmentExprSyntax`` and its descendants.
1033 |   ///   - node: the node we just finished visiting.
1034 |   open func visitPost(_ node: DiscardAssignmentExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1035 |   }
1036 |   
     :
1044 |   /// The function called after visiting ``DiscardStmtSyntax`` and its descendants.
1045 |   ///   - node: the node we just finished visiting.
1046 |   open func visitPost(_ node: DiscardStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1047 |   }
1048 |   
     :
1074 |   /// The function called after visiting ``DoStmtSyntax`` and its descendants.
1075 |   ///   - node: the node we just finished visiting.
1076 |   open func visitPost(_ node: DoStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1077 |   }
1078 |   
     :
1086 |   /// The function called after visiting ``DocumentationAttributeArgumentListSyntax`` and its descendants.
1087 |   ///   - node: the node we just finished visiting.
1088 |   open func visitPost(_ node: DocumentationAttributeArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1089 |   }
1090 |   
     :
1098 |   /// The function called after visiting ``DocumentationAttributeArgumentSyntax`` and its descendants.
1099 |   ///   - node: the node we just finished visiting.
1100 |   open func visitPost(_ node: DocumentationAttributeArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1101 |   }
1102 |   
     :
1110 |   /// The function called after visiting ``DynamicReplacementAttributeArgumentsSyntax`` and its descendants.
1111 |   ///   - node: the node we just finished visiting.
1112 |   open func visitPost(_ node: DynamicReplacementAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1113 |   }
1114 |   
     :
1122 |   /// The function called after visiting ``EditorPlaceholderDeclSyntax`` and its descendants.
1123 |   ///   - node: the node we just finished visiting.
1124 |   open func visitPost(_ node: EditorPlaceholderDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1125 |   }
1126 |   
     :
1134 |   /// The function called after visiting ``EditorPlaceholderExprSyntax`` and its descendants.
1135 |   ///   - node: the node we just finished visiting.
1136 |   open func visitPost(_ node: EditorPlaceholderExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1137 |   }
1138 |   
     :
1146 |   /// The function called after visiting ``EffectsAttributeArgumentListSyntax`` and its descendants.
1147 |   ///   - node: the node we just finished visiting.
1148 |   open func visitPost(_ node: EffectsAttributeArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1149 |   }
1150 |   
     :
1158 |   /// The function called after visiting ``EnumCaseDeclSyntax`` and its descendants.
1159 |   ///   - node: the node we just finished visiting.
1160 |   open func visitPost(_ node: EnumCaseDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1161 |   }
1162 |   
     :
1170 |   /// The function called after visiting ``EnumCaseElementListSyntax`` and its descendants.
1171 |   ///   - node: the node we just finished visiting.
1172 |   open func visitPost(_ node: EnumCaseElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1173 |   }
1174 |   
     :
1182 |   /// The function called after visiting ``EnumCaseElementSyntax`` and its descendants.
1183 |   ///   - node: the node we just finished visiting.
1184 |   open func visitPost(_ node: EnumCaseElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1185 |   }
1186 |   
     :
1194 |   /// The function called after visiting ``EnumCaseParameterClauseSyntax`` and its descendants.
1195 |   ///   - node: the node we just finished visiting.
1196 |   open func visitPost(_ node: EnumCaseParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1197 |   }
1198 |   
     :
1206 |   /// The function called after visiting ``EnumCaseParameterListSyntax`` and its descendants.
1207 |   ///   - node: the node we just finished visiting.
1208 |   open func visitPost(_ node: EnumCaseParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1209 |   }
1210 |   
     :
1218 |   /// The function called after visiting ``EnumCaseParameterSyntax`` and its descendants.
1219 |   ///   - node: the node we just finished visiting.
1220 |   open func visitPost(_ node: EnumCaseParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1221 |   }
1222 |   
     :
1230 |   /// The function called after visiting ``EnumDeclSyntax`` and its descendants.
1231 |   ///   - node: the node we just finished visiting.
1232 |   open func visitPost(_ node: EnumDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1233 |   }
1234 |   
     :
1242 |   /// The function called after visiting ``ExposeAttributeArgumentsSyntax`` and its descendants.
1243 |   ///   - node: the node we just finished visiting.
1244 |   open func visitPost(_ node: ExposeAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1245 |   }
1246 |   
     :
1254 |   /// The function called after visiting ``ExprListSyntax`` and its descendants.
1255 |   ///   - node: the node we just finished visiting.
1256 |   open func visitPost(_ node: ExprListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1257 |   }
1258 |   
     :
1266 |   /// The function called after visiting ``ExpressionPatternSyntax`` and its descendants.
1267 |   ///   - node: the node we just finished visiting.
1268 |   open func visitPost(_ node: ExpressionPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1269 |   }
1270 |   
     :
1278 |   /// The function called after visiting ``ExpressionSegmentSyntax`` and its descendants.
1279 |   ///   - node: the node we just finished visiting.
1280 |   open func visitPost(_ node: ExpressionSegmentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1281 |   }
1282 |   
     :
1290 |   /// The function called after visiting ``ExpressionStmtSyntax`` and its descendants.
1291 |   ///   - node: the node we just finished visiting.
1292 |   open func visitPost(_ node: ExpressionStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1293 |   }
1294 |   
     :
1302 |   /// The function called after visiting ``ExtensionDeclSyntax`` and its descendants.
1303 |   ///   - node: the node we just finished visiting.
1304 |   open func visitPost(_ node: ExtensionDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1305 |   }
1306 |   
     :
1314 |   /// The function called after visiting ``FallThroughStmtSyntax`` and its descendants.
1315 |   ///   - node: the node we just finished visiting.
1316 |   open func visitPost(_ node: FallThroughStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1317 |   }
1318 |   
     :
1326 |   /// The function called after visiting ``FloatLiteralExprSyntax`` and its descendants.
1327 |   ///   - node: the node we just finished visiting.
1328 |   open func visitPost(_ node: FloatLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1329 |   }
1330 |   
     :
1338 |   /// The function called after visiting ``ForStmtSyntax`` and its descendants.
1339 |   ///   - node: the node we just finished visiting.
1340 |   open func visitPost(_ node: ForStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1341 |   }
1342 |   
     :
1350 |   /// The function called after visiting ``ForceUnwrapExprSyntax`` and its descendants.
1351 |   ///   - node: the node we just finished visiting.
1352 |   open func visitPost(_ node: ForceUnwrapExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1353 |   }
1354 |   
     :
1362 |   /// The function called after visiting ``FunctionCallExprSyntax`` and its descendants.
1363 |   ///   - node: the node we just finished visiting.
1364 |   open func visitPost(_ node: FunctionCallExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1365 |   }
1366 |   
     :
1374 |   /// The function called after visiting ``FunctionDeclSyntax`` and its descendants.
1375 |   ///   - node: the node we just finished visiting.
1376 |   open func visitPost(_ node: FunctionDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1377 |   }
1378 |   
     :
1386 |   /// The function called after visiting ``FunctionEffectSpecifiersSyntax`` and its descendants.
1387 |   ///   - node: the node we just finished visiting.
1388 |   open func visitPost(_ node: FunctionEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1389 |   }
1390 |   
     :
1398 |   /// The function called after visiting ``FunctionParameterClauseSyntax`` and its descendants.
1399 |   ///   - node: the node we just finished visiting.
1400 |   open func visitPost(_ node: FunctionParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1401 |   }
1402 |   
     :
1410 |   /// The function called after visiting ``FunctionParameterListSyntax`` and its descendants.
1411 |   ///   - node: the node we just finished visiting.
1412 |   open func visitPost(_ node: FunctionParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1413 |   }
1414 |   
     :
1422 |   /// The function called after visiting ``FunctionParameterSyntax`` and its descendants.
1423 |   ///   - node: the node we just finished visiting.
1424 |   open func visitPost(_ node: FunctionParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1425 |   }
1426 |   
     :
1434 |   /// The function called after visiting ``FunctionSignatureSyntax`` and its descendants.
1435 |   ///   - node: the node we just finished visiting.
1436 |   open func visitPost(_ node: FunctionSignatureSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1437 |   }
1438 |   
     :
1446 |   /// The function called after visiting ``FunctionTypeSyntax`` and its descendants.
1447 |   ///   - node: the node we just finished visiting.
1448 |   open func visitPost(_ node: FunctionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1449 |   }
1450 |   
     :
1458 |   /// The function called after visiting ``GenericArgumentClauseSyntax`` and its descendants.
1459 |   ///   - node: the node we just finished visiting.
1460 |   open func visitPost(_ node: GenericArgumentClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1461 |   }
1462 |   
     :
1470 |   /// The function called after visiting ``GenericArgumentListSyntax`` and its descendants.
1471 |   ///   - node: the node we just finished visiting.
1472 |   open func visitPost(_ node: GenericArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1473 |   }
1474 |   
     :
1482 |   /// The function called after visiting ``GenericArgumentSyntax`` and its descendants.
1483 |   ///   - node: the node we just finished visiting.
1484 |   open func visitPost(_ node: GenericArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1485 |   }
1486 |   
     :
1494 |   /// The function called after visiting ``GenericParameterClauseSyntax`` and its descendants.
1495 |   ///   - node: the node we just finished visiting.
1496 |   open func visitPost(_ node: GenericParameterClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1497 |   }
1498 |   
     :
1506 |   /// The function called after visiting ``GenericParameterListSyntax`` and its descendants.
1507 |   ///   - node: the node we just finished visiting.
1508 |   open func visitPost(_ node: GenericParameterListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1509 |   }
1510 |   
     :
1518 |   /// The function called after visiting ``GenericParameterSyntax`` and its descendants.
1519 |   ///   - node: the node we just finished visiting.
1520 |   open func visitPost(_ node: GenericParameterSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1521 |   }
1522 |   
     :
1530 |   /// The function called after visiting ``GenericRequirementListSyntax`` and its descendants.
1531 |   ///   - node: the node we just finished visiting.
1532 |   open func visitPost(_ node: GenericRequirementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1533 |   }
1534 |   
     :
1542 |   /// The function called after visiting ``GenericRequirementSyntax`` and its descendants.
1543 |   ///   - node: the node we just finished visiting.
1544 |   open func visitPost(_ node: GenericRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1545 |   }
1546 |   
     :
1554 |   /// The function called after visiting ``GenericSpecializationExprSyntax`` and its descendants.
1555 |   ///   - node: the node we just finished visiting.
1556 |   open func visitPost(_ node: GenericSpecializationExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1557 |   }
1558 |   
     :
1566 |   /// The function called after visiting ``GenericWhereClauseSyntax`` and its descendants.
1567 |   ///   - node: the node we just finished visiting.
1568 |   open func visitPost(_ node: GenericWhereClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1569 |   }
1570 |   
     :
1578 |   /// The function called after visiting ``GuardStmtSyntax`` and its descendants.
1579 |   ///   - node: the node we just finished visiting.
1580 |   open func visitPost(_ node: GuardStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1581 |   }
1582 |   
     :
1590 |   /// The function called after visiting ``IdentifierPatternSyntax`` and its descendants.
1591 |   ///   - node: the node we just finished visiting.
1592 |   open func visitPost(_ node: IdentifierPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1593 |   }
1594 |   
     :
1602 |   /// The function called after visiting ``IdentifierTypeSyntax`` and its descendants.
1603 |   ///   - node: the node we just finished visiting.
1604 |   open func visitPost(_ node: IdentifierTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1605 |   }
1606 |   
     :
1614 |   /// The function called after visiting ``IfConfigClauseListSyntax`` and its descendants.
1615 |   ///   - node: the node we just finished visiting.
1616 |   open func visitPost(_ node: IfConfigClauseListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1617 |   }
1618 |   
     :
1626 |   /// The function called after visiting ``IfConfigClauseSyntax`` and its descendants.
1627 |   ///   - node: the node we just finished visiting.
1628 |   open func visitPost(_ node: IfConfigClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1629 |   }
1630 |   
     :
1638 |   /// The function called after visiting ``IfConfigDeclSyntax`` and its descendants.
1639 |   ///   - node: the node we just finished visiting.
1640 |   open func visitPost(_ node: IfConfigDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1641 |   }
1642 |   
     :
1650 |   /// The function called after visiting ``IfExprSyntax`` and its descendants.
1651 |   ///   - node: the node we just finished visiting.
1652 |   open func visitPost(_ node: IfExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1653 |   }
1654 |   
     :
1662 |   /// The function called after visiting ``ImplementsAttributeArgumentsSyntax`` and its descendants.
1663 |   ///   - node: the node we just finished visiting.
1664 |   open func visitPost(_ node: ImplementsAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1665 |   }
1666 |   
     :
1674 |   /// The function called after visiting ``ImplicitlyUnwrappedOptionalTypeSyntax`` and its descendants.
1675 |   ///   - node: the node we just finished visiting.
1676 |   open func visitPost(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1677 |   }
1678 |   
     :
1686 |   /// The function called after visiting ``ImportDeclSyntax`` and its descendants.
1687 |   ///   - node: the node we just finished visiting.
1688 |   open func visitPost(_ node: ImportDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1689 |   }
1690 |   
     :
1698 |   /// The function called after visiting ``ImportPathComponentListSyntax`` and its descendants.
1699 |   ///   - node: the node we just finished visiting.
1700 |   open func visitPost(_ node: ImportPathComponentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1701 |   }
1702 |   
     :
1710 |   /// The function called after visiting ``ImportPathComponentSyntax`` and its descendants.
1711 |   ///   - node: the node we just finished visiting.
1712 |   open func visitPost(_ node: ImportPathComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1713 |   }
1714 |   
     :
1722 |   /// The function called after visiting ``InOutExprSyntax`` and its descendants.
1723 |   ///   - node: the node we just finished visiting.
1724 |   open func visitPost(_ node: InOutExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1725 |   }
1726 |   
     :
1734 |   /// The function called after visiting ``InfixOperatorExprSyntax`` and its descendants.
1735 |   ///   - node: the node we just finished visiting.
1736 |   open func visitPost(_ node: InfixOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1737 |   }
1738 |   
     :
1746 |   /// The function called after visiting ``InheritanceClauseSyntax`` and its descendants.
1747 |   ///   - node: the node we just finished visiting.
1748 |   open func visitPost(_ node: InheritanceClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1749 |   }
1750 |   
     :
1758 |   /// The function called after visiting ``InheritedTypeListSyntax`` and its descendants.
1759 |   ///   - node: the node we just finished visiting.
1760 |   open func visitPost(_ node: InheritedTypeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1761 |   }
1762 |   
     :
1770 |   /// The function called after visiting ``InheritedTypeSyntax`` and its descendants.
1771 |   ///   - node: the node we just finished visiting.
1772 |   open func visitPost(_ node: InheritedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1773 |   }
1774 |   
     :
1782 |   /// The function called after visiting ``InitializerClauseSyntax`` and its descendants.
1783 |   ///   - node: the node we just finished visiting.
1784 |   open func visitPost(_ node: InitializerClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1785 |   }
1786 |   
     :
1794 |   /// The function called after visiting ``InitializerDeclSyntax`` and its descendants.
1795 |   ///   - node: the node we just finished visiting.
1796 |   open func visitPost(_ node: InitializerDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1797 |   }
1798 |   
     :
1806 |   /// The function called after visiting ``IntegerLiteralExprSyntax`` and its descendants.
1807 |   ///   - node: the node we just finished visiting.
1808 |   open func visitPost(_ node: IntegerLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1809 |   }
1810 |   
     :
1818 |   /// The function called after visiting ``IsExprSyntax`` and its descendants.
1819 |   ///   - node: the node we just finished visiting.
1820 |   open func visitPost(_ node: IsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1821 |   }
1822 |   
     :
1830 |   /// The function called after visiting ``IsTypePatternSyntax`` and its descendants.
1831 |   ///   - node: the node we just finished visiting.
1832 |   open func visitPost(_ node: IsTypePatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1833 |   }
1834 |   
     :
1842 |   /// The function called after visiting ``KeyPathComponentListSyntax`` and its descendants.
1843 |   ///   - node: the node we just finished visiting.
1844 |   open func visitPost(_ node: KeyPathComponentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1845 |   }
1846 |   
     :
1854 |   /// The function called after visiting ``KeyPathComponentSyntax`` and its descendants.
1855 |   ///   - node: the node we just finished visiting.
1856 |   open func visitPost(_ node: KeyPathComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1857 |   }
1858 |   
     :
1866 |   /// The function called after visiting ``KeyPathExprSyntax`` and its descendants.
1867 |   ///   - node: the node we just finished visiting.
1868 |   open func visitPost(_ node: KeyPathExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1869 |   }
1870 |   
     :
1878 |   /// The function called after visiting ``KeyPathOptionalComponentSyntax`` and its descendants.
1879 |   ///   - node: the node we just finished visiting.
1880 |   open func visitPost(_ node: KeyPathOptionalComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1881 |   }
1882 |   
     :
1890 |   /// The function called after visiting ``KeyPathPropertyComponentSyntax`` and its descendants.
1891 |   ///   - node: the node we just finished visiting.
1892 |   open func visitPost(_ node: KeyPathPropertyComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1893 |   }
1894 |   
     :
1902 |   /// The function called after visiting ``KeyPathSubscriptComponentSyntax`` and its descendants.
1903 |   ///   - node: the node we just finished visiting.
1904 |   open func visitPost(_ node: KeyPathSubscriptComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1905 |   }
1906 |   
     :
1914 |   /// The function called after visiting ``LabeledExprListSyntax`` and its descendants.
1915 |   ///   - node: the node we just finished visiting.
1916 |   open func visitPost(_ node: LabeledExprListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1917 |   }
1918 |   
     :
1926 |   /// The function called after visiting ``LabeledExprSyntax`` and its descendants.
1927 |   ///   - node: the node we just finished visiting.
1928 |   open func visitPost(_ node: LabeledExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1929 |   }
1930 |   
     :
1938 |   /// The function called after visiting ``LabeledSpecializeArgumentSyntax`` and its descendants.
1939 |   ///   - node: the node we just finished visiting.
1940 |   open func visitPost(_ node: LabeledSpecializeArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1941 |   }
1942 |   
     :
1950 |   /// The function called after visiting ``LabeledStmtSyntax`` and its descendants.
1951 |   ///   - node: the node we just finished visiting.
1952 |   open func visitPost(_ node: LabeledStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1953 |   }
1954 |   
     :
1962 |   /// The function called after visiting ``LayoutRequirementSyntax`` and its descendants.
1963 |   ///   - node: the node we just finished visiting.
1964 |   open func visitPost(_ node: LayoutRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
1965 |   }
1966 |   
     :
2028 |   /// The function called after visiting ``MacroDeclSyntax`` and its descendants.
2029 |   ///   - node: the node we just finished visiting.
2030 |   open func visitPost(_ node: MacroDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2031 |   }
2032 |   
     :
2040 |   /// The function called after visiting ``MacroExpansionDeclSyntax`` and its descendants.
2041 |   ///   - node: the node we just finished visiting.
2042 |   open func visitPost(_ node: MacroExpansionDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2043 |   }
2044 |   
     :
2052 |   /// The function called after visiting ``MacroExpansionExprSyntax`` and its descendants.
2053 |   ///   - node: the node we just finished visiting.
2054 |   open func visitPost(_ node: MacroExpansionExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2055 |   }
2056 |   
     :
2064 |   /// The function called after visiting ``MatchingPatternConditionSyntax`` and its descendants.
2065 |   ///   - node: the node we just finished visiting.
2066 |   open func visitPost(_ node: MatchingPatternConditionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2067 |   }
2068 |   
     :
2076 |   /// The function called after visiting ``MemberAccessExprSyntax`` and its descendants.
2077 |   ///   - node: the node we just finished visiting.
2078 |   open func visitPost(_ node: MemberAccessExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2079 |   }
2080 |   
     :
2088 |   /// The function called after visiting ``MemberBlockItemListSyntax`` and its descendants.
2089 |   ///   - node: the node we just finished visiting.
2090 |   open func visitPost(_ node: MemberBlockItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2091 |   }
2092 |   
     :
2100 |   /// The function called after visiting ``MemberBlockItemSyntax`` and its descendants.
2101 |   ///   - node: the node we just finished visiting.
2102 |   open func visitPost(_ node: MemberBlockItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2103 |   }
2104 |   
     :
2112 |   /// The function called after visiting ``MemberBlockSyntax`` and its descendants.
2113 |   ///   - node: the node we just finished visiting.
2114 |   open func visitPost(_ node: MemberBlockSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2115 |   }
2116 |   
     :
2124 |   /// The function called after visiting ``MemberTypeSyntax`` and its descendants.
2125 |   ///   - node: the node we just finished visiting.
2126 |   open func visitPost(_ node: MemberTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2127 |   }
2128 |   
     :
2136 |   /// The function called after visiting ``MetatypeTypeSyntax`` and its descendants.
2137 |   ///   - node: the node we just finished visiting.
2138 |   open func visitPost(_ node: MetatypeTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2139 |   }
2140 |   
     :
2148 |   /// The function called after visiting ``MissingDeclSyntax`` and its descendants.
2149 |   ///   - node: the node we just finished visiting.
2150 |   open func visitPost(_ node: MissingDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2151 |   }
2152 |   
     :
2160 |   /// The function called after visiting ``MissingExprSyntax`` and its descendants.
2161 |   ///   - node: the node we just finished visiting.
2162 |   open func visitPost(_ node: MissingExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2163 |   }
2164 |   
     :
2172 |   /// The function called after visiting ``MissingPatternSyntax`` and its descendants.
2173 |   ///   - node: the node we just finished visiting.
2174 |   open func visitPost(_ node: MissingPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2175 |   }
2176 |   
     :
2184 |   /// The function called after visiting ``MissingStmtSyntax`` and its descendants.
2185 |   ///   - node: the node we just finished visiting.
2186 |   open func visitPost(_ node: MissingStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2187 |   }
2188 |   
     :
2196 |   /// The function called after visiting ``MissingSyntax`` and its descendants.
2197 |   ///   - node: the node we just finished visiting.
2198 |   open func visitPost(_ node: MissingSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2199 |   }
2200 |   
     :
2208 |   /// The function called after visiting ``MissingTypeSyntax`` and its descendants.
2209 |   ///   - node: the node we just finished visiting.
2210 |   open func visitPost(_ node: MissingTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2211 |   }
2212 |   
     :
2220 |   /// The function called after visiting ``MultipleTrailingClosureElementListSyntax`` and its descendants.
2221 |   ///   - node: the node we just finished visiting.
2222 |   open func visitPost(_ node: MultipleTrailingClosureElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2223 |   }
2224 |   
     :
2232 |   /// The function called after visiting ``MultipleTrailingClosureElementSyntax`` and its descendants.
2233 |   ///   - node: the node we just finished visiting.
2234 |   open func visitPost(_ node: MultipleTrailingClosureElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2235 |   }
2236 |   
     :
2244 |   /// The function called after visiting ``NamedOpaqueReturnTypeSyntax`` and its descendants.
2245 |   ///   - node: the node we just finished visiting.
2246 |   open func visitPost(_ node: NamedOpaqueReturnTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2247 |   }
2248 |   
     :
2256 |   /// The function called after visiting ``NilLiteralExprSyntax`` and its descendants.
2257 |   ///   - node: the node we just finished visiting.
2258 |   open func visitPost(_ node: NilLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2259 |   }
2260 |   
     :
2268 |   /// The function called after visiting ``ObjCSelectorPieceListSyntax`` and its descendants.
2269 |   ///   - node: the node we just finished visiting.
2270 |   open func visitPost(_ node: ObjCSelectorPieceListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2271 |   }
2272 |   
     :
2280 |   /// The function called after visiting ``ObjCSelectorPieceSyntax`` and its descendants.
2281 |   ///   - node: the node we just finished visiting.
2282 |   open func visitPost(_ node: ObjCSelectorPieceSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2283 |   }
2284 |   
     :
2292 |   /// The function called after visiting ``OpaqueReturnTypeOfAttributeArgumentsSyntax`` and its descendants.
2293 |   ///   - node: the node we just finished visiting.
2294 |   open func visitPost(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2295 |   }
2296 |   
     :
2304 |   /// The function called after visiting ``OperatorDeclSyntax`` and its descendants.
2305 |   ///   - node: the node we just finished visiting.
2306 |   open func visitPost(_ node: OperatorDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2307 |   }
2308 |   
     :
2316 |   /// The function called after visiting ``OperatorPrecedenceAndTypesSyntax`` and its descendants.
2317 |   ///   - node: the node we just finished visiting.
2318 |   open func visitPost(_ node: OperatorPrecedenceAndTypesSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2319 |   }
2320 |   
     :
2328 |   /// The function called after visiting ``OptionalBindingConditionSyntax`` and its descendants.
2329 |   ///   - node: the node we just finished visiting.
2330 |   open func visitPost(_ node: OptionalBindingConditionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2331 |   }
2332 |   
     :
2340 |   /// The function called after visiting ``OptionalChainingExprSyntax`` and its descendants.
2341 |   ///   - node: the node we just finished visiting.
2342 |   open func visitPost(_ node: OptionalChainingExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2343 |   }
2344 |   
     :
2352 |   /// The function called after visiting ``OptionalTypeSyntax`` and its descendants.
2353 |   ///   - node: the node we just finished visiting.
2354 |   open func visitPost(_ node: OptionalTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2355 |   }
2356 |   
     :
2364 |   /// The function called after visiting ``OriginallyDefinedInAttributeArgumentsSyntax`` and its descendants.
2365 |   ///   - node: the node we just finished visiting.
2366 |   open func visitPost(_ node: OriginallyDefinedInAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2367 |   }
2368 |   
     :
2376 |   /// The function called after visiting ``PackElementExprSyntax`` and its descendants.
2377 |   ///   - node: the node we just finished visiting.
2378 |   open func visitPost(_ node: PackElementExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2379 |   }
2380 |   
     :
2388 |   /// The function called after visiting ``PackElementTypeSyntax`` and its descendants.
2389 |   ///   - node: the node we just finished visiting.
2390 |   open func visitPost(_ node: PackElementTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2391 |   }
2392 |   
     :
2400 |   /// The function called after visiting ``PackExpansionExprSyntax`` and its descendants.
2401 |   ///   - node: the node we just finished visiting.
2402 |   open func visitPost(_ node: PackExpansionExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2403 |   }
2404 |   
     :
2412 |   /// The function called after visiting ``PackExpansionTypeSyntax`` and its descendants.
2413 |   ///   - node: the node we just finished visiting.
2414 |   open func visitPost(_ node: PackExpansionTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2415 |   }
2416 |   
     :
2424 |   /// The function called after visiting ``PatternBindingListSyntax`` and its descendants.
2425 |   ///   - node: the node we just finished visiting.
2426 |   open func visitPost(_ node: PatternBindingListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2427 |   }
2428 |   
     :
2436 |   /// The function called after visiting ``PatternBindingSyntax`` and its descendants.
2437 |   ///   - node: the node we just finished visiting.
2438 |   open func visitPost(_ node: PatternBindingSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2439 |   }
2440 |   
     :
2448 |   /// The function called after visiting ``PatternExprSyntax`` and its descendants.
2449 |   ///   - node: the node we just finished visiting.
2450 |   open func visitPost(_ node: PatternExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2451 |   }
2452 |   
     :
2460 |   /// The function called after visiting ``PlatformVersionItemListSyntax`` and its descendants.
2461 |   ///   - node: the node we just finished visiting.
2462 |   open func visitPost(_ node: PlatformVersionItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2463 |   }
2464 |   
     :
2472 |   /// The function called after visiting ``PlatformVersionItemSyntax`` and its descendants.
2473 |   ///   - node: the node we just finished visiting.
2474 |   open func visitPost(_ node: PlatformVersionItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2475 |   }
2476 |   
     :
2484 |   /// The function called after visiting ``PlatformVersionSyntax`` and its descendants.
2485 |   ///   - node: the node we just finished visiting.
2486 |   open func visitPost(_ node: PlatformVersionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2487 |   }
2488 |   
     :
2496 |   /// The function called after visiting ``PostfixIfConfigExprSyntax`` and its descendants.
2497 |   ///   - node: the node we just finished visiting.
2498 |   open func visitPost(_ node: PostfixIfConfigExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2499 |   }
2500 |   
     :
2508 |   /// The function called after visiting ``PostfixOperatorExprSyntax`` and its descendants.
2509 |   ///   - node: the node we just finished visiting.
2510 |   open func visitPost(_ node: PostfixOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2511 |   }
2512 |   
     :
2520 |   /// The function called after visiting ``PoundSourceLocationArgumentsSyntax`` and its descendants.
2521 |   ///   - node: the node we just finished visiting.
2522 |   open func visitPost(_ node: PoundSourceLocationArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2523 |   }
2524 |   
     :
2532 |   /// The function called after visiting ``PoundSourceLocationSyntax`` and its descendants.
2533 |   ///   - node: the node we just finished visiting.
2534 |   open func visitPost(_ node: PoundSourceLocationSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2535 |   }
2536 |   
     :
2544 |   /// The function called after visiting ``PrecedenceGroupAssignmentSyntax`` and its descendants.
2545 |   ///   - node: the node we just finished visiting.
2546 |   open func visitPost(_ node: PrecedenceGroupAssignmentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2547 |   }
2548 |   
     :
2556 |   /// The function called after visiting ``PrecedenceGroupAssociativitySyntax`` and its descendants.
2557 |   ///   - node: the node we just finished visiting.
2558 |   open func visitPost(_ node: PrecedenceGroupAssociativitySyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2559 |   }
2560 |   
     :
2568 |   /// The function called after visiting ``PrecedenceGroupAttributeListSyntax`` and its descendants.
2569 |   ///   - node: the node we just finished visiting.
2570 |   open func visitPost(_ node: PrecedenceGroupAttributeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2571 |   }
2572 |   
     :
2580 |   /// The function called after visiting ``PrecedenceGroupDeclSyntax`` and its descendants.
2581 |   ///   - node: the node we just finished visiting.
2582 |   open func visitPost(_ node: PrecedenceGroupDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2583 |   }
2584 |   
     :
2592 |   /// The function called after visiting ``PrecedenceGroupNameListSyntax`` and its descendants.
2593 |   ///   - node: the node we just finished visiting.
2594 |   open func visitPost(_ node: PrecedenceGroupNameListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2595 |   }
2596 |   
     :
2604 |   /// The function called after visiting ``PrecedenceGroupNameSyntax`` and its descendants.
2605 |   ///   - node: the node we just finished visiting.
2606 |   open func visitPost(_ node: PrecedenceGroupNameSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2607 |   }
2608 |   
     :
2616 |   /// The function called after visiting ``PrecedenceGroupRelationSyntax`` and its descendants.
2617 |   ///   - node: the node we just finished visiting.
2618 |   open func visitPost(_ node: PrecedenceGroupRelationSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2619 |   }
2620 |   
     :
2628 |   /// The function called after visiting ``PrefixOperatorExprSyntax`` and its descendants.
2629 |   ///   - node: the node we just finished visiting.
2630 |   open func visitPost(_ node: PrefixOperatorExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2631 |   }
2632 |   
     :
2640 |   /// The function called after visiting ``PrimaryAssociatedTypeClauseSyntax`` and its descendants.
2641 |   ///   - node: the node we just finished visiting.
2642 |   open func visitPost(_ node: PrimaryAssociatedTypeClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2643 |   }
2644 |   
     :
2652 |   /// The function called after visiting ``PrimaryAssociatedTypeListSyntax`` and its descendants.
2653 |   ///   - node: the node we just finished visiting.
2654 |   open func visitPost(_ node: PrimaryAssociatedTypeListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2655 |   }
2656 |   
     :
2664 |   /// The function called after visiting ``PrimaryAssociatedTypeSyntax`` and its descendants.
2665 |   ///   - node: the node we just finished visiting.
2666 |   open func visitPost(_ node: PrimaryAssociatedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2667 |   }
2668 |   
     :
2676 |   /// The function called after visiting ``ProtocolDeclSyntax`` and its descendants.
2677 |   ///   - node: the node we just finished visiting.
2678 |   open func visitPost(_ node: ProtocolDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2679 |   }
2680 |   
     :
2688 |   /// The function called after visiting ``RegexLiteralExprSyntax`` and its descendants.
2689 |   ///   - node: the node we just finished visiting.
2690 |   open func visitPost(_ node: RegexLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2691 |   }
2692 |   
     :
2700 |   /// The function called after visiting ``RepeatStmtSyntax`` and its descendants.
2701 |   ///   - node: the node we just finished visiting.
2702 |   open func visitPost(_ node: RepeatStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2703 |   }
2704 |   
     :
2712 |   /// The function called after visiting ``ReturnClauseSyntax`` and its descendants.
2713 |   ///   - node: the node we just finished visiting.
2714 |   open func visitPost(_ node: ReturnClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2715 |   }
2716 |   
     :
2724 |   /// The function called after visiting ``ReturnStmtSyntax`` and its descendants.
2725 |   ///   - node: the node we just finished visiting.
2726 |   open func visitPost(_ node: ReturnStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2727 |   }
2728 |   
     :
2736 |   /// The function called after visiting ``SameTypeRequirementSyntax`` and its descendants.
2737 |   ///   - node: the node we just finished visiting.
2738 |   open func visitPost(_ node: SameTypeRequirementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2739 |   }
2740 |   
     :
2748 |   /// The function called after visiting ``SequenceExprSyntax`` and its descendants.
2749 |   ///   - node: the node we just finished visiting.
2750 |   open func visitPost(_ node: SequenceExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2751 |   }
2752 |   
     :
2760 |   /// The function called after visiting ``SimpleStringLiteralExprSyntax`` and its descendants.
2761 |   ///   - node: the node we just finished visiting.
2762 |   open func visitPost(_ node: SimpleStringLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2763 |   }
2764 |   
     :
2772 |   /// The function called after visiting ``SimpleStringLiteralSegmentListSyntax`` and its descendants.
2773 |   ///   - node: the node we just finished visiting.
2774 |   open func visitPost(_ node: SimpleStringLiteralSegmentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2775 |   }
2776 |   
     :
2784 |   /// The function called after visiting ``SimpleTypeSpecifierSyntax`` and its descendants.
2785 |   ///   - node: the node we just finished visiting.
2786 |   open func visitPost(_ node: SimpleTypeSpecifierSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2787 |   }
2788 |   
     :
2796 |   /// The function called after visiting ``SomeOrAnyTypeSyntax`` and its descendants.
2797 |   ///   - node: the node we just finished visiting.
2798 |   open func visitPost(_ node: SomeOrAnyTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2799 |   }
2800 |   
     :
2808 |   /// The function called after visiting ``SourceFileSyntax`` and its descendants.
2809 |   ///   - node: the node we just finished visiting.
2810 |   open func visitPost(_ node: SourceFileSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2811 |   }
2812 |   
     :
2820 |   /// The function called after visiting ``SpecializeAttributeArgumentListSyntax`` and its descendants.
2821 |   ///   - node: the node we just finished visiting.
2822 |   open func visitPost(_ node: SpecializeAttributeArgumentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2823 |   }
2824 |   
     :
2832 |   /// The function called after visiting ``SpecializeAvailabilityArgumentSyntax`` and its descendants.
2833 |   ///   - node: the node we just finished visiting.
2834 |   open func visitPost(_ node: SpecializeAvailabilityArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2835 |   }
2836 |   
     :
2844 |   /// The function called after visiting ``SpecializeTargetFunctionArgumentSyntax`` and its descendants.
2845 |   ///   - node: the node we just finished visiting.
2846 |   open func visitPost(_ node: SpecializeTargetFunctionArgumentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2847 |   }
2848 |   
     :
2856 |   /// The function called after visiting ``StringLiteralExprSyntax`` and its descendants.
2857 |   ///   - node: the node we just finished visiting.
2858 |   open func visitPost(_ node: StringLiteralExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2859 |   }
2860 |   
     :
2868 |   /// The function called after visiting ``StringLiteralSegmentListSyntax`` and its descendants.
2869 |   ///   - node: the node we just finished visiting.
2870 |   open func visitPost(_ node: StringLiteralSegmentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2871 |   }
2872 |   
     :
2880 |   /// The function called after visiting ``StringSegmentSyntax`` and its descendants.
2881 |   ///   - node: the node we just finished visiting.
2882 |   open func visitPost(_ node: StringSegmentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2883 |   }
2884 |   
     :
2892 |   /// The function called after visiting ``StructDeclSyntax`` and its descendants.
2893 |   ///   - node: the node we just finished visiting.
2894 |   open func visitPost(_ node: StructDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2895 |   }
2896 |   
     :
2904 |   /// The function called after visiting ``SubscriptCallExprSyntax`` and its descendants.
2905 |   ///   - node: the node we just finished visiting.
2906 |   open func visitPost(_ node: SubscriptCallExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2907 |   }
2908 |   
     :
2916 |   /// The function called after visiting ``SubscriptDeclSyntax`` and its descendants.
2917 |   ///   - node: the node we just finished visiting.
2918 |   open func visitPost(_ node: SubscriptDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2919 |   }
2920 |   
     :
2928 |   /// The function called after visiting ``SuperExprSyntax`` and its descendants.
2929 |   ///   - node: the node we just finished visiting.
2930 |   open func visitPost(_ node: SuperExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2931 |   }
2932 |   
     :
2940 |   /// The function called after visiting ``SuppressedTypeSyntax`` and its descendants.
2941 |   ///   - node: the node we just finished visiting.
2942 |   open func visitPost(_ node: SuppressedTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2943 |   }
2944 |   
     :
2952 |   /// The function called after visiting ``SwitchCaseItemListSyntax`` and its descendants.
2953 |   ///   - node: the node we just finished visiting.
2954 |   open func visitPost(_ node: SwitchCaseItemListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2955 |   }
2956 |   
     :
2964 |   /// The function called after visiting ``SwitchCaseItemSyntax`` and its descendants.
2965 |   ///   - node: the node we just finished visiting.
2966 |   open func visitPost(_ node: SwitchCaseItemSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2967 |   }
2968 |   
     :
2976 |   /// The function called after visiting ``SwitchCaseLabelSyntax`` and its descendants.
2977 |   ///   - node: the node we just finished visiting.
2978 |   open func visitPost(_ node: SwitchCaseLabelSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2979 |   }
2980 |   
     :
2988 |   /// The function called after visiting ``SwitchCaseListSyntax`` and its descendants.
2989 |   ///   - node: the node we just finished visiting.
2990 |   open func visitPost(_ node: SwitchCaseListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
2991 |   }
2992 |   
     :
3000 |   /// The function called after visiting ``SwitchCaseSyntax`` and its descendants.
3001 |   ///   - node: the node we just finished visiting.
3002 |   open func visitPost(_ node: SwitchCaseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3003 |   }
3004 |   
     :
3012 |   /// The function called after visiting ``SwitchDefaultLabelSyntax`` and its descendants.
3013 |   ///   - node: the node we just finished visiting.
3014 |   open func visitPost(_ node: SwitchDefaultLabelSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3015 |   }
3016 |   
     :
3024 |   /// The function called after visiting ``SwitchExprSyntax`` and its descendants.
3025 |   ///   - node: the node we just finished visiting.
3026 |   open func visitPost(_ node: SwitchExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3027 |   }
3028 |   
     :
3036 |   /// The function called after visiting ``TernaryExprSyntax`` and its descendants.
3037 |   ///   - node: the node we just finished visiting.
3038 |   open func visitPost(_ node: TernaryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3039 |   }
3040 |   
     :
3066 |   /// The function called after visiting ``ThrowStmtSyntax`` and its descendants.
3067 |   ///   - node: the node we just finished visiting.
3068 |   open func visitPost(_ node: ThrowStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3069 |   }
3070 |   
     :
3078 |   /// The function called after visiting ``ThrowsClauseSyntax`` and its descendants.
3079 |   ///   - node: the node we just finished visiting.
3080 |   open func visitPost(_ node: ThrowsClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3081 |   }
3082 |   
     :
3090 |   /// The function called after visiting ``TryExprSyntax`` and its descendants.
3091 |   ///   - node: the node we just finished visiting.
3092 |   open func visitPost(_ node: TryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3093 |   }
3094 |   
     :
3102 |   /// The function called after visiting ``TupleExprSyntax`` and its descendants.
3103 |   ///   - node: the node we just finished visiting.
3104 |   open func visitPost(_ node: TupleExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3105 |   }
3106 |   
     :
3114 |   /// The function called after visiting ``TuplePatternElementListSyntax`` and its descendants.
3115 |   ///   - node: the node we just finished visiting.
3116 |   open func visitPost(_ node: TuplePatternElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3117 |   }
3118 |   
     :
3126 |   /// The function called after visiting ``TuplePatternElementSyntax`` and its descendants.
3127 |   ///   - node: the node we just finished visiting.
3128 |   open func visitPost(_ node: TuplePatternElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3129 |   }
3130 |   
     :
3138 |   /// The function called after visiting ``TuplePatternSyntax`` and its descendants.
3139 |   ///   - node: the node we just finished visiting.
3140 |   open func visitPost(_ node: TuplePatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3141 |   }
3142 |   
     :
3150 |   /// The function called after visiting ``TupleTypeElementListSyntax`` and its descendants.
3151 |   ///   - node: the node we just finished visiting.
3152 |   open func visitPost(_ node: TupleTypeElementListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3153 |   }
3154 |   
     :
3162 |   /// The function called after visiting ``TupleTypeElementSyntax`` and its descendants.
3163 |   ///   - node: the node we just finished visiting.
3164 |   open func visitPost(_ node: TupleTypeElementSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3165 |   }
3166 |   
     :
3174 |   /// The function called after visiting ``TupleTypeSyntax`` and its descendants.
3175 |   ///   - node: the node we just finished visiting.
3176 |   open func visitPost(_ node: TupleTypeSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3177 |   }
3178 |   
     :
3186 |   /// The function called after visiting ``TypeAliasDeclSyntax`` and its descendants.
3187 |   ///   - node: the node we just finished visiting.
3188 |   open func visitPost(_ node: TypeAliasDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3189 |   }
3190 |   
     :
3198 |   /// The function called after visiting ``TypeAnnotationSyntax`` and its descendants.
3199 |   ///   - node: the node we just finished visiting.
3200 |   open func visitPost(_ node: TypeAnnotationSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3201 |   }
3202 |   
     :
3210 |   /// The function called after visiting ``TypeEffectSpecifiersSyntax`` and its descendants.
3211 |   ///   - node: the node we just finished visiting.
3212 |   open func visitPost(_ node: TypeEffectSpecifiersSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3213 |   }
3214 |   
     :
3222 |   /// The function called after visiting ``TypeExprSyntax`` and its descendants.
3223 |   ///   - node: the node we just finished visiting.
3224 |   open func visitPost(_ node: TypeExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3225 |   }
3226 |   
     :
3234 |   /// The function called after visiting ``TypeInitializerClauseSyntax`` and its descendants.
3235 |   ///   - node: the node we just finished visiting.
3236 |   open func visitPost(_ node: TypeInitializerClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3237 |   }
3238 |   
     :
3246 |   /// The function called after visiting ``TypeSpecifierListSyntax`` and its descendants.
3247 |   ///   - node: the node we just finished visiting.
3248 |   open func visitPost(_ node: TypeSpecifierListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3249 |   }
3250 |   
     :
3258 |   /// The function called after visiting ``UnavailableFromAsyncAttributeArgumentsSyntax`` and its descendants.
3259 |   ///   - node: the node we just finished visiting.
3260 |   open func visitPost(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3261 |   }
3262 |   
     :
3270 |   /// The function called after visiting ``UnderscorePrivateAttributeArgumentsSyntax`` and its descendants.
3271 |   ///   - node: the node we just finished visiting.
3272 |   open func visitPost(_ node: UnderscorePrivateAttributeArgumentsSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3273 |   }
3274 |   
     :
3282 |   /// The function called after visiting ``UnexpectedNodesSyntax`` and its descendants.
3283 |   ///   - node: the node we just finished visiting.
3284 |   open func visitPost(_ node: UnexpectedNodesSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3285 |   }
3286 |   
     :
3294 |   /// The function called after visiting ``UnresolvedAsExprSyntax`` and its descendants.
3295 |   ///   - node: the node we just finished visiting.
3296 |   open func visitPost(_ node: UnresolvedAsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3297 |   }
3298 |   
     :
3306 |   /// The function called after visiting ``UnresolvedIsExprSyntax`` and its descendants.
3307 |   ///   - node: the node we just finished visiting.
3308 |   open func visitPost(_ node: UnresolvedIsExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3309 |   }
3310 |   
     :
3318 |   /// The function called after visiting ``UnresolvedTernaryExprSyntax`` and its descendants.
3319 |   ///   - node: the node we just finished visiting.
3320 |   open func visitPost(_ node: UnresolvedTernaryExprSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3321 |   }
3322 |   
     :
3330 |   /// The function called after visiting ``ValueBindingPatternSyntax`` and its descendants.
3331 |   ///   - node: the node we just finished visiting.
3332 |   open func visitPost(_ node: ValueBindingPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3333 |   }
3334 |   
     :
3342 |   /// The function called after visiting ``VariableDeclSyntax`` and its descendants.
3343 |   ///   - node: the node we just finished visiting.
3344 |   open func visitPost(_ node: VariableDeclSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3345 |   }
3346 |   
     :
3354 |   /// The function called after visiting ``VersionComponentListSyntax`` and its descendants.
3355 |   ///   - node: the node we just finished visiting.
3356 |   open func visitPost(_ node: VersionComponentListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3357 |   }
3358 |   
     :
3366 |   /// The function called after visiting ``VersionComponentSyntax`` and its descendants.
3367 |   ///   - node: the node we just finished visiting.
3368 |   open func visitPost(_ node: VersionComponentSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3369 |   }
3370 |   
     :
3378 |   /// The function called after visiting ``VersionTupleSyntax`` and its descendants.
3379 |   ///   - node: the node we just finished visiting.
3380 |   open func visitPost(_ node: VersionTupleSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3381 |   }
3382 |   
     :
3390 |   /// The function called after visiting ``WhereClauseSyntax`` and its descendants.
3391 |   ///   - node: the node we just finished visiting.
3392 |   open func visitPost(_ node: WhereClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3393 |   }
3394 |   
     :
3402 |   /// The function called after visiting ``WhileStmtSyntax`` and its descendants.
3403 |   ///   - node: the node we just finished visiting.
3404 |   open func visitPost(_ node: WhileStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3405 |   }
3406 |   
     :
3414 |   /// The function called after visiting ``WildcardPatternSyntax`` and its descendants.
3415 |   ///   - node: the node we just finished visiting.
3416 |   open func visitPost(_ node: WildcardPatternSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3417 |   }
3418 |   
     :
3426 |   /// The function called after visiting ``YieldStmtSyntax`` and its descendants.
3427 |   ///   - node: the node we just finished visiting.
3428 |   open func visitPost(_ node: YieldStmtSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3429 |   }
3430 |   
     :
3438 |   /// The function called after visiting ``YieldedExpressionListSyntax`` and its descendants.
3439 |   ///   - node: the node we just finished visiting.
3440 |   open func visitPost(_ node: YieldedExpressionListSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3441 |   }
3442 |   
     :
3450 |   /// The function called after visiting ``YieldedExpressionSyntax`` and its descendants.
3451 |   ///   - node: the node we just finished visiting.
3452 |   open func visitPost(_ node: YieldedExpressionSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3453 |   }
3454 |   
     :
3462 |   /// The function called after visiting ``YieldedExpressionsClauseSyntax`` and its descendants.
3463 |   ///   - node: the node we just finished visiting.
3464 |   open func visitPost(_ node: YieldedExpressionsClauseSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3465 |   }
3466 |   
     :
3474 |   /// The function called after visiting the node and its descendants.
3475 |   ///   - node: the node we just finished visiting.
3476 |   open func visitPost(_ node: TokenSyntax) {
     |             `- note: potential overridden instance method 'visitPost' here
3477 |   }
3478 |   

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:710:19: error: method does not override any method from its superclass
708 |     }
709 | 
710 |     override func visit(_ token: TokenSyntax) -> Syntax {
    |                   `- error: method does not override any method from its superclass
711 |         currentIndex += 1
712 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift:50:13: note: potential overridden instance method 'visit' here
  48 |   ///   - Parameter node: the node that is being visited
  49 |   ///   - Returns: the rewritten node
  50 |   open func visit(_ token: TokenSyntax) -> TokenSyntax {
     |             `- note: potential overridden instance method 'visit' here
  51 |     return token
  52 |   }
     :
  77 |   ///   - Returns: the rewritten node
  78 |   @available(*, deprecated, renamed: "rewrite(_:detach:)")
  79 |   public func visit(_ node: Syntax) -> Syntax {
     |               `- note: potential overridden instance method 'visit' here
  80 |     var rewritten = node
  81 |     dispatchVisit(&rewritten)
     :
  92 |   ///   - Parameter node: the node that is being visited
  93 |   ///   - Returns: the rewritten node
  94 |   open func visit(_ node: AccessorBlockSyntax) -> AccessorBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
  95 |     return visitChildren(node._syntaxNode).cast(AccessorBlockSyntax.self)
  96 |   }
     :
  99 |   ///   - Parameter node: the node that is being visited
 100 |   ///   - Returns: the rewritten node
 101 |   open func visit(_ node: AccessorDeclListSyntax) -> AccessorDeclListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 102 |     return visitChildren(node._syntaxNode).cast(AccessorDeclListSyntax.self)
 103 |   }
     :
 106 |   ///   - Parameter node: the node that is being visited
 107 |   ///   - Returns: the rewritten node
 108 |   open func visit(_ node: AccessorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 109 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AccessorDeclSyntax.self))
 110 |   }
     :
 113 |   ///   - Parameter node: the node that is being visited
 114 |   ///   - Returns: the rewritten node
 115 |   open func visit(_ node: AccessorEffectSpecifiersSyntax) -> AccessorEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 116 |     return visitChildren(node._syntaxNode).cast(AccessorEffectSpecifiersSyntax.self)
 117 |   }
     :
 120 |   ///   - Parameter node: the node that is being visited
 121 |   ///   - Returns: the rewritten node
 122 |   open func visit(_ node: AccessorParametersSyntax) -> AccessorParametersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 123 |     return visitChildren(node._syntaxNode).cast(AccessorParametersSyntax.self)
 124 |   }
     :
 127 |   ///   - Parameter node: the node that is being visited
 128 |   ///   - Returns: the rewritten node
 129 |   open func visit(_ node: ActorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 130 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ActorDeclSyntax.self))
 131 |   }
     :
 134 |   ///   - Parameter node: the node that is being visited
 135 |   ///   - Returns: the rewritten node
 136 |   open func visit(_ node: ArrayElementListSyntax) -> ArrayElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 137 |     return visitChildren(node._syntaxNode).cast(ArrayElementListSyntax.self)
 138 |   }
     :
 141 |   ///   - Parameter node: the node that is being visited
 142 |   ///   - Returns: the rewritten node
 143 |   open func visit(_ node: ArrayElementSyntax) -> ArrayElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 144 |     return visitChildren(node._syntaxNode).cast(ArrayElementSyntax.self)
 145 |   }
     :
 148 |   ///   - Parameter node: the node that is being visited
 149 |   ///   - Returns: the rewritten node
 150 |   open func visit(_ node: ArrayExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 151 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrayExprSyntax.self))
 152 |   }
     :
 155 |   ///   - Parameter node: the node that is being visited
 156 |   ///   - Returns: the rewritten node
 157 |   open func visit(_ node: ArrayTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 158 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ArrayTypeSyntax.self))
 159 |   }
     :
 162 |   ///   - Parameter node: the node that is being visited
 163 |   ///   - Returns: the rewritten node
 164 |   open func visit(_ node: ArrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 165 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrowExprSyntax.self))
 166 |   }
     :
 169 |   ///   - Parameter node: the node that is being visited
 170 |   ///   - Returns: the rewritten node
 171 |   open func visit(_ node: AsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 172 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AsExprSyntax.self))
 173 |   }
     :
 176 |   ///   - Parameter node: the node that is being visited
 177 |   ///   - Returns: the rewritten node
 178 |   open func visit(_ node: AssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 179 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AssignmentExprSyntax.self))
 180 |   }
     :
 183 |   ///   - Parameter node: the node that is being visited
 184 |   ///   - Returns: the rewritten node
 185 |   open func visit(_ node: AssociatedTypeDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 186 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AssociatedTypeDeclSyntax.self))
 187 |   }
     :
 190 |   ///   - Parameter node: the node that is being visited
 191 |   ///   - Returns: the rewritten node
 192 |   open func visit(_ node: AttributeListSyntax) -> AttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 193 |     return visitChildren(node._syntaxNode).cast(AttributeListSyntax.self)
 194 |   }
     :
 197 |   ///   - Parameter node: the node that is being visited
 198 |   ///   - Returns: the rewritten node
 199 |   open func visit(_ node: AttributeSyntax) -> AttributeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 200 |     return visitChildren(node._syntaxNode).cast(AttributeSyntax.self)
 201 |   }
     :
 204 |   ///   - Parameter node: the node that is being visited
 205 |   ///   - Returns: the rewritten node
 206 |   open func visit(_ node: AttributedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 207 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(AttributedTypeSyntax.self))
 208 |   }
     :
 211 |   ///   - Parameter node: the node that is being visited
 212 |   ///   - Returns: the rewritten node
 213 |   open func visit(_ node: AvailabilityArgumentListSyntax) -> AvailabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 214 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentListSyntax.self)
 215 |   }
     :
 218 |   ///   - Parameter node: the node that is being visited
 219 |   ///   - Returns: the rewritten node
 220 |   open func visit(_ node: AvailabilityArgumentSyntax) -> AvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 221 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentSyntax.self)
 222 |   }
     :
 225 |   ///   - Parameter node: the node that is being visited
 226 |   ///   - Returns: the rewritten node
 227 |   open func visit(_ node: AvailabilityConditionSyntax) -> AvailabilityConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
 228 |     return visitChildren(node._syntaxNode).cast(AvailabilityConditionSyntax.self)
 229 |   }
     :
 232 |   ///   - Parameter node: the node that is being visited
 233 |   ///   - Returns: the rewritten node
 234 |   open func visit(_ node: AvailabilityLabeledArgumentSyntax) -> AvailabilityLabeledArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 235 |     return visitChildren(node._syntaxNode).cast(AvailabilityLabeledArgumentSyntax.self)
 236 |   }
     :
 239 |   ///   - Parameter node: the node that is being visited
 240 |   ///   - Returns: the rewritten node
 241 |   open func visit(_ node: AwaitExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 242 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AwaitExprSyntax.self))
 243 |   }
     :
 246 |   ///   - Parameter node: the node that is being visited
 247 |   ///   - Returns: the rewritten node
 248 |   open func visit(_ node: BackDeployedAttributeArgumentsSyntax) -> BackDeployedAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 249 |     return visitChildren(node._syntaxNode).cast(BackDeployedAttributeArgumentsSyntax.self)
 250 |   }
     :
 253 |   ///   - Parameter node: the node that is being visited
 254 |   ///   - Returns: the rewritten node
 255 |   open func visit(_ node: BinaryOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 256 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BinaryOperatorExprSyntax.self))
 257 |   }
     :
 260 |   ///   - Parameter node: the node that is being visited
 261 |   ///   - Returns: the rewritten node
 262 |   open func visit(_ node: BooleanLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 263 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BooleanLiteralExprSyntax.self))
 264 |   }
     :
 267 |   ///   - Parameter node: the node that is being visited
 268 |   ///   - Returns: the rewritten node
 269 |   open func visit(_ node: BorrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 270 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BorrowExprSyntax.self))
 271 |   }
     :
 274 |   ///   - Parameter node: the node that is being visited
 275 |   ///   - Returns: the rewritten node
 276 |   open func visit(_ node: BreakStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 277 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(BreakStmtSyntax.self))
 278 |   }
     :
 281 |   ///   - Parameter node: the node that is being visited
 282 |   ///   - Returns: the rewritten node
 283 |   open func visit(_ node: _CanImportExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 284 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportExprSyntax.self))
 285 |   }
     :
 288 |   ///   - Parameter node: the node that is being visited
 289 |   ///   - Returns: the rewritten node
 290 |   open func visit(_ node: _CanImportVersionInfoSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 291 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportVersionInfoSyntax.self))
 292 |   }
     :
 295 |   ///   - Parameter node: the node that is being visited
 296 |   ///   - Returns: the rewritten node
 297 |   open func visit(_ node: CatchClauseListSyntax) -> CatchClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 298 |     return visitChildren(node._syntaxNode).cast(CatchClauseListSyntax.self)
 299 |   }
     :
 302 |   ///   - Parameter node: the node that is being visited
 303 |   ///   - Returns: the rewritten node
 304 |   open func visit(_ node: CatchClauseSyntax) -> CatchClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 305 |     return visitChildren(node._syntaxNode).cast(CatchClauseSyntax.self)
 306 |   }
     :
 309 |   ///   - Parameter node: the node that is being visited
 310 |   ///   - Returns: the rewritten node
 311 |   open func visit(_ node: CatchItemListSyntax) -> CatchItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 312 |     return visitChildren(node._syntaxNode).cast(CatchItemListSyntax.self)
 313 |   }
     :
 316 |   ///   - Parameter node: the node that is being visited
 317 |   ///   - Returns: the rewritten node
 318 |   open func visit(_ node: CatchItemSyntax) -> CatchItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 319 |     return visitChildren(node._syntaxNode).cast(CatchItemSyntax.self)
 320 |   }
     :
 323 |   ///   - Parameter node: the node that is being visited
 324 |   ///   - Returns: the rewritten node
 325 |   open func visit(_ node: ClassDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 326 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ClassDeclSyntax.self))
 327 |   }
     :
 330 |   ///   - Parameter node: the node that is being visited
 331 |   ///   - Returns: the rewritten node
 332 |   open func visit(_ node: ClassRestrictionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 333 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ClassRestrictionTypeSyntax.self))
 334 |   }
     :
 337 |   ///   - Parameter node: the node that is being visited
 338 |   ///   - Returns: the rewritten node
 339 |   open func visit(_ node: ClosureCaptureClauseSyntax) -> ClosureCaptureClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 340 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureClauseSyntax.self)
 341 |   }
     :
 344 |   ///   - Parameter node: the node that is being visited
 345 |   ///   - Returns: the rewritten node
 346 |   open func visit(_ node: ClosureCaptureListSyntax) -> ClosureCaptureListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 347 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureListSyntax.self)
 348 |   }
     :
 351 |   ///   - Parameter node: the node that is being visited
 352 |   ///   - Returns: the rewritten node
 353 |   open func visit(_ node: ClosureCaptureSpecifierSyntax) -> ClosureCaptureSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 354 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSpecifierSyntax.self)
 355 |   }
     :
 358 |   ///   - Parameter node: the node that is being visited
 359 |   ///   - Returns: the rewritten node
 360 |   open func visit(_ node: ClosureCaptureSyntax) -> ClosureCaptureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 361 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSyntax.self)
 362 |   }
     :
 365 |   ///   - Parameter node: the node that is being visited
 366 |   ///   - Returns: the rewritten node
 367 |   open func visit(_ node: ClosureExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 368 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ClosureExprSyntax.self))
 369 |   }
     :
 372 |   ///   - Parameter node: the node that is being visited
 373 |   ///   - Returns: the rewritten node
 374 |   open func visit(_ node: ClosureParameterClauseSyntax) -> ClosureParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 375 |     return visitChildren(node._syntaxNode).cast(ClosureParameterClauseSyntax.self)
 376 |   }
     :
 379 |   ///   - Parameter node: the node that is being visited
 380 |   ///   - Returns: the rewritten node
 381 |   open func visit(_ node: ClosureParameterListSyntax) -> ClosureParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 382 |     return visitChildren(node._syntaxNode).cast(ClosureParameterListSyntax.self)
 383 |   }
     :
 386 |   ///   - Parameter node: the node that is being visited
 387 |   ///   - Returns: the rewritten node
 388 |   open func visit(_ node: ClosureParameterSyntax) -> ClosureParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 389 |     return visitChildren(node._syntaxNode).cast(ClosureParameterSyntax.self)
 390 |   }
     :
 393 |   ///   - Parameter node: the node that is being visited
 394 |   ///   - Returns: the rewritten node
 395 |   open func visit(_ node: ClosureShorthandParameterListSyntax) -> ClosureShorthandParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 396 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterListSyntax.self)
 397 |   }
     :
 400 |   ///   - Parameter node: the node that is being visited
 401 |   ///   - Returns: the rewritten node
 402 |   open func visit(_ node: ClosureShorthandParameterSyntax) -> ClosureShorthandParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 403 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterSyntax.self)
 404 |   }
     :
 407 |   ///   - Parameter node: the node that is being visited
 408 |   ///   - Returns: the rewritten node
 409 |   open func visit(_ node: ClosureSignatureSyntax) -> ClosureSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 410 |     return visitChildren(node._syntaxNode).cast(ClosureSignatureSyntax.self)
 411 |   }
     :
 414 |   ///   - Parameter node: the node that is being visited
 415 |   ///   - Returns: the rewritten node
 416 |   open func visit(_ node: CodeBlockItemListSyntax) -> CodeBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 417 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemListSyntax.self)
 418 |   }
     :
 421 |   ///   - Parameter node: the node that is being visited
 422 |   ///   - Returns: the rewritten node
 423 |   open func visit(_ node: CodeBlockItemSyntax) -> CodeBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 424 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemSyntax.self)
 425 |   }
     :
 428 |   ///   - Parameter node: the node that is being visited
 429 |   ///   - Returns: the rewritten node
 430 |   open func visit(_ node: CodeBlockSyntax) -> CodeBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
 431 |     return visitChildren(node._syntaxNode).cast(CodeBlockSyntax.self)
 432 |   }
     :
 435 |   ///   - Parameter node: the node that is being visited
 436 |   ///   - Returns: the rewritten node
 437 |   open func visit(_ node: CompositionTypeElementListSyntax) -> CompositionTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 438 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementListSyntax.self)
 439 |   }
     :
 442 |   ///   - Parameter node: the node that is being visited
 443 |   ///   - Returns: the rewritten node
 444 |   open func visit(_ node: CompositionTypeElementSyntax) -> CompositionTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 445 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementSyntax.self)
 446 |   }
     :
 449 |   ///   - Parameter node: the node that is being visited
 450 |   ///   - Returns: the rewritten node
 451 |   open func visit(_ node: CompositionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 452 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(CompositionTypeSyntax.self))
 453 |   }
     :
 456 |   ///   - Parameter node: the node that is being visited
 457 |   ///   - Returns: the rewritten node
 458 |   open func visit(_ node: ConditionElementListSyntax) -> ConditionElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 459 |     return visitChildren(node._syntaxNode).cast(ConditionElementListSyntax.self)
 460 |   }
     :
 463 |   ///   - Parameter node: the node that is being visited
 464 |   ///   - Returns: the rewritten node
 465 |   open func visit(_ node: ConditionElementSyntax) -> ConditionElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 466 |     return visitChildren(node._syntaxNode).cast(ConditionElementSyntax.self)
 467 |   }
     :
 470 |   ///   - Parameter node: the node that is being visited
 471 |   ///   - Returns: the rewritten node
 472 |   open func visit(_ node: ConformanceRequirementSyntax) -> ConformanceRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 473 |     return visitChildren(node._syntaxNode).cast(ConformanceRequirementSyntax.self)
 474 |   }
     :
 477 |   ///   - Parameter node: the node that is being visited
 478 |   ///   - Returns: the rewritten node
 479 |   open func visit(_ node: ConsumeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 480 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ConsumeExprSyntax.self))
 481 |   }
     :
 484 |   ///   - Parameter node: the node that is being visited
 485 |   ///   - Returns: the rewritten node
 486 |   open func visit(_ node: ContinueStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 487 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ContinueStmtSyntax.self))
 488 |   }
     :
 491 |   ///   - Parameter node: the node that is being visited
 492 |   ///   - Returns: the rewritten node
 493 |   open func visit(_ node: ConventionAttributeArgumentsSyntax) -> ConventionAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 494 |     return visitChildren(node._syntaxNode).cast(ConventionAttributeArgumentsSyntax.self)
 495 |   }
     :
 498 |   ///   - Parameter node: the node that is being visited
 499 |   ///   - Returns: the rewritten node
 500 |   open func visit(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) -> ConventionWitnessMethodAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 501 |     return visitChildren(node._syntaxNode).cast(ConventionWitnessMethodAttributeArgumentsSyntax.self)
 502 |   }
     :
 505 |   ///   - Parameter node: the node that is being visited
 506 |   ///   - Returns: the rewritten node
 507 |   open func visit(_ node: CopyExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 508 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(CopyExprSyntax.self))
 509 |   }
     :
 512 |   ///   - Parameter node: the node that is being visited
 513 |   ///   - Returns: the rewritten node
 514 |   open func visit(_ node: DeclModifierDetailSyntax) -> DeclModifierDetailSyntax {
     |             `- note: potential overridden instance method 'visit' here
 515 |     return visitChildren(node._syntaxNode).cast(DeclModifierDetailSyntax.self)
 516 |   }
     :
 519 |   ///   - Parameter node: the node that is being visited
 520 |   ///   - Returns: the rewritten node
 521 |   open func visit(_ node: DeclModifierListSyntax) -> DeclModifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 522 |     return visitChildren(node._syntaxNode).cast(DeclModifierListSyntax.self)
 523 |   }
     :
 526 |   ///   - Parameter node: the node that is being visited
 527 |   ///   - Returns: the rewritten node
 528 |   open func visit(_ node: DeclModifierSyntax) -> DeclModifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 529 |     return visitChildren(node._syntaxNode).cast(DeclModifierSyntax.self)
 530 |   }
     :
 533 |   ///   - Parameter node: the node that is being visited
 534 |   ///   - Returns: the rewritten node
 535 |   open func visit(_ node: DeclNameArgumentListSyntax) -> DeclNameArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 536 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentListSyntax.self)
 537 |   }
     :
 540 |   ///   - Parameter node: the node that is being visited
 541 |   ///   - Returns: the rewritten node
 542 |   open func visit(_ node: DeclNameArgumentSyntax) -> DeclNameArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 543 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentSyntax.self)
 544 |   }
     :
 547 |   ///   - Parameter node: the node that is being visited
 548 |   ///   - Returns: the rewritten node
 549 |   open func visit(_ node: DeclNameArgumentsSyntax) -> DeclNameArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 550 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentsSyntax.self)
 551 |   }
     :
 554 |   ///   - Parameter node: the node that is being visited
 555 |   ///   - Returns: the rewritten node
 556 |   open func visit(_ node: DeclReferenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 557 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DeclReferenceExprSyntax.self))
 558 |   }
     :
 561 |   ///   - Parameter node: the node that is being visited
 562 |   ///   - Returns: the rewritten node
 563 |   open func visit(_ node: DeferStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 564 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DeferStmtSyntax.self))
 565 |   }
     :
 568 |   ///   - Parameter node: the node that is being visited
 569 |   ///   - Returns: the rewritten node
 570 |   open func visit(_ node: DeinitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 571 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(DeinitializerDeclSyntax.self))
 572 |   }
     :
 575 |   ///   - Parameter node: the node that is being visited
 576 |   ///   - Returns: the rewritten node
 577 |   open func visit(_ node: DeinitializerEffectSpecifiersSyntax) -> DeinitializerEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 578 |     return visitChildren(node._syntaxNode).cast(DeinitializerEffectSpecifiersSyntax.self)
 579 |   }
     :
 582 |   ///   - Parameter node: the node that is being visited
 583 |   ///   - Returns: the rewritten node
 584 |   open func visit(_ node: DerivativeAttributeArgumentsSyntax) -> DerivativeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 585 |     return visitChildren(node._syntaxNode).cast(DerivativeAttributeArgumentsSyntax.self)
 586 |   }
     :
 589 |   ///   - Parameter node: the node that is being visited
 590 |   ///   - Returns: the rewritten node
 591 |   open func visit(_ node: DesignatedTypeListSyntax) -> DesignatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 592 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeListSyntax.self)
 593 |   }
     :
 596 |   ///   - Parameter node: the node that is being visited
 597 |   ///   - Returns: the rewritten node
 598 |   open func visit(_ node: DesignatedTypeSyntax) -> DesignatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 599 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeSyntax.self)
 600 |   }
     :
 603 |   ///   - Parameter node: the node that is being visited
 604 |   ///   - Returns: the rewritten node
 605 |   open func visit(_ node: DictionaryElementListSyntax) -> DictionaryElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 606 |     return visitChildren(node._syntaxNode).cast(DictionaryElementListSyntax.self)
 607 |   }
     :
 610 |   ///   - Parameter node: the node that is being visited
 611 |   ///   - Returns: the rewritten node
 612 |   open func visit(_ node: DictionaryElementSyntax) -> DictionaryElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 613 |     return visitChildren(node._syntaxNode).cast(DictionaryElementSyntax.self)
 614 |   }
     :
 617 |   ///   - Parameter node: the node that is being visited
 618 |   ///   - Returns: the rewritten node
 619 |   open func visit(_ node: DictionaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 620 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DictionaryExprSyntax.self))
 621 |   }
     :
 624 |   ///   - Parameter node: the node that is being visited
 625 |   ///   - Returns: the rewritten node
 626 |   open func visit(_ node: DictionaryTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 627 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(DictionaryTypeSyntax.self))
 628 |   }
     :
 631 |   ///   - Parameter node: the node that is being visited
 632 |   ///   - Returns: the rewritten node
 633 |   open func visit(_ node: DifferentiabilityArgumentListSyntax) -> DifferentiabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 634 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentListSyntax.self)
 635 |   }
     :
 638 |   ///   - Parameter node: the node that is being visited
 639 |   ///   - Returns: the rewritten node
 640 |   open func visit(_ node: DifferentiabilityArgumentSyntax) -> DifferentiabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 641 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentSyntax.self)
 642 |   }
     :
 645 |   ///   - Parameter node: the node that is being visited
 646 |   ///   - Returns: the rewritten node
 647 |   open func visit(_ node: DifferentiabilityArgumentsSyntax) -> DifferentiabilityArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 648 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentsSyntax.self)
 649 |   }
     :
 652 |   ///   - Parameter node: the node that is being visited
 653 |   ///   - Returns: the rewritten node
 654 |   open func visit(_ node: DifferentiabilityWithRespectToArgumentSyntax) -> DifferentiabilityWithRespectToArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 655 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityWithRespectToArgumentSyntax.self)
 656 |   }
     :
 659 |   ///   - Parameter node: the node that is being visited
 660 |   ///   - Returns: the rewritten node
 661 |   open func visit(_ node: DifferentiableAttributeArgumentsSyntax) -> DifferentiableAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 662 |     return visitChildren(node._syntaxNode).cast(DifferentiableAttributeArgumentsSyntax.self)
 663 |   }
     :
 666 |   ///   - Parameter node: the node that is being visited
 667 |   ///   - Returns: the rewritten node
 668 |   open func visit(_ node: DiscardAssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 669 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DiscardAssignmentExprSyntax.self))
 670 |   }
     :
 673 |   ///   - Parameter node: the node that is being visited
 674 |   ///   - Returns: the rewritten node
 675 |   open func visit(_ node: DiscardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 676 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DiscardStmtSyntax.self))
 677 |   }
     :
 690 |   ///   - Parameter node: the node that is being visited
 691 |   ///   - Returns: the rewritten node
 692 |   open func visit(_ node: DoStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 693 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DoStmtSyntax.self))
 694 |   }
     :
 697 |   ///   - Parameter node: the node that is being visited
 698 |   ///   - Returns: the rewritten node
 699 |   open func visit(_ node: DocumentationAttributeArgumentListSyntax) -> DocumentationAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 700 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentListSyntax.self)
 701 |   }
     :
 704 |   ///   - Parameter node: the node that is being visited
 705 |   ///   - Returns: the rewritten node
 706 |   open func visit(_ node: DocumentationAttributeArgumentSyntax) -> DocumentationAttributeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 707 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentSyntax.self)
 708 |   }
     :
 711 |   ///   - Parameter node: the node that is being visited
 712 |   ///   - Returns: the rewritten node
 713 |   open func visit(_ node: DynamicReplacementAttributeArgumentsSyntax) -> DynamicReplacementAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 714 |     return visitChildren(node._syntaxNode).cast(DynamicReplacementAttributeArgumentsSyntax.self)
 715 |   }
     :
 718 |   ///   - Parameter node: the node that is being visited
 719 |   ///   - Returns: the rewritten node
 720 |   open func visit(_ node: EditorPlaceholderDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 721 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderDeclSyntax.self))
 722 |   }
     :
 725 |   ///   - Parameter node: the node that is being visited
 726 |   ///   - Returns: the rewritten node
 727 |   open func visit(_ node: EditorPlaceholderExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 728 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderExprSyntax.self))
 729 |   }
     :
 732 |   ///   - Parameter node: the node that is being visited
 733 |   ///   - Returns: the rewritten node
 734 |   open func visit(_ node: EffectsAttributeArgumentListSyntax) -> EffectsAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 735 |     return visitChildren(node._syntaxNode).cast(EffectsAttributeArgumentListSyntax.self)
 736 |   }
     :
 739 |   ///   - Parameter node: the node that is being visited
 740 |   ///   - Returns: the rewritten node
 741 |   open func visit(_ node: EnumCaseDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 742 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumCaseDeclSyntax.self))
 743 |   }
     :
 746 |   ///   - Parameter node: the node that is being visited
 747 |   ///   - Returns: the rewritten node
 748 |   open func visit(_ node: EnumCaseElementListSyntax) -> EnumCaseElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 749 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementListSyntax.self)
 750 |   }
     :
 753 |   ///   - Parameter node: the node that is being visited
 754 |   ///   - Returns: the rewritten node
 755 |   open func visit(_ node: EnumCaseElementSyntax) -> EnumCaseElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 756 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementSyntax.self)
 757 |   }
     :
 760 |   ///   - Parameter node: the node that is being visited
 761 |   ///   - Returns: the rewritten node
 762 |   open func visit(_ node: EnumCaseParameterClauseSyntax) -> EnumCaseParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 763 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterClauseSyntax.self)
 764 |   }
     :
 767 |   ///   - Parameter node: the node that is being visited
 768 |   ///   - Returns: the rewritten node
 769 |   open func visit(_ node: EnumCaseParameterListSyntax) -> EnumCaseParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 770 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterListSyntax.self)
 771 |   }
     :
 774 |   ///   - Parameter node: the node that is being visited
 775 |   ///   - Returns: the rewritten node
 776 |   open func visit(_ node: EnumCaseParameterSyntax) -> EnumCaseParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 777 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterSyntax.self)
 778 |   }
     :
 781 |   ///   - Parameter node: the node that is being visited
 782 |   ///   - Returns: the rewritten node
 783 |   open func visit(_ node: EnumDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 784 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumDeclSyntax.self))
 785 |   }
     :
 788 |   ///   - Parameter node: the node that is being visited
 789 |   ///   - Returns: the rewritten node
 790 |   open func visit(_ node: ExposeAttributeArgumentsSyntax) -> ExposeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 791 |     return visitChildren(node._syntaxNode).cast(ExposeAttributeArgumentsSyntax.self)
 792 |   }
     :
 795 |   ///   - Parameter node: the node that is being visited
 796 |   ///   - Returns: the rewritten node
 797 |   open func visit(_ node: ExprListSyntax) -> ExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 798 |     return visitChildren(node._syntaxNode).cast(ExprListSyntax.self)
 799 |   }
     :
 802 |   ///   - Parameter node: the node that is being visited
 803 |   ///   - Returns: the rewritten node
 804 |   open func visit(_ node: ExpressionPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 805 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ExpressionPatternSyntax.self))
 806 |   }
     :
 809 |   ///   - Parameter node: the node that is being visited
 810 |   ///   - Returns: the rewritten node
 811 |   open func visit(_ node: ExpressionSegmentSyntax) -> ExpressionSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 812 |     return visitChildren(node._syntaxNode).cast(ExpressionSegmentSyntax.self)
 813 |   }
     :
 816 |   ///   - Parameter node: the node that is being visited
 817 |   ///   - Returns: the rewritten node
 818 |   open func visit(_ node: ExpressionStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 819 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ExpressionStmtSyntax.self))
 820 |   }
     :
 823 |   ///   - Parameter node: the node that is being visited
 824 |   ///   - Returns: the rewritten node
 825 |   open func visit(_ node: ExtensionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 826 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ExtensionDeclSyntax.self))
 827 |   }
     :
 830 |   ///   - Parameter node: the node that is being visited
 831 |   ///   - Returns: the rewritten node
 832 |   open func visit(_ node: FallThroughStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 833 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(FallThroughStmtSyntax.self))
 834 |   }
     :
 837 |   ///   - Parameter node: the node that is being visited
 838 |   ///   - Returns: the rewritten node
 839 |   open func visit(_ node: FloatLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 840 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FloatLiteralExprSyntax.self))
 841 |   }
     :
 844 |   ///   - Parameter node: the node that is being visited
 845 |   ///   - Returns: the rewritten node
 846 |   open func visit(_ node: ForStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 847 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ForStmtSyntax.self))
 848 |   }
     :
 851 |   ///   - Parameter node: the node that is being visited
 852 |   ///   - Returns: the rewritten node
 853 |   open func visit(_ node: ForceUnwrapExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 854 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ForceUnwrapExprSyntax.self))
 855 |   }
     :
 858 |   ///   - Parameter node: the node that is being visited
 859 |   ///   - Returns: the rewritten node
 860 |   open func visit(_ node: FunctionCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 861 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FunctionCallExprSyntax.self))
 862 |   }
     :
 865 |   ///   - Parameter node: the node that is being visited
 866 |   ///   - Returns: the rewritten node
 867 |   open func visit(_ node: FunctionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 868 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(FunctionDeclSyntax.self))
 869 |   }
     :
 872 |   ///   - Parameter node: the node that is being visited
 873 |   ///   - Returns: the rewritten node
 874 |   open func visit(_ node: FunctionEffectSpecifiersSyntax) -> FunctionEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 875 |     return visitChildren(node._syntaxNode).cast(FunctionEffectSpecifiersSyntax.self)
 876 |   }
     :
 879 |   ///   - Parameter node: the node that is being visited
 880 |   ///   - Returns: the rewritten node
 881 |   open func visit(_ node: FunctionParameterClauseSyntax) -> FunctionParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 882 |     return visitChildren(node._syntaxNode).cast(FunctionParameterClauseSyntax.self)
 883 |   }
     :
 886 |   ///   - Parameter node: the node that is being visited
 887 |   ///   - Returns: the rewritten node
 888 |   open func visit(_ node: FunctionParameterListSyntax) -> FunctionParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 889 |     return visitChildren(node._syntaxNode).cast(FunctionParameterListSyntax.self)
 890 |   }
     :
 893 |   ///   - Parameter node: the node that is being visited
 894 |   ///   - Returns: the rewritten node
 895 |   open func visit(_ node: FunctionParameterSyntax) -> FunctionParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 896 |     return visitChildren(node._syntaxNode).cast(FunctionParameterSyntax.self)
 897 |   }
     :
 900 |   ///   - Parameter node: the node that is being visited
 901 |   ///   - Returns: the rewritten node
 902 |   open func visit(_ node: FunctionSignatureSyntax) -> FunctionSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 903 |     return visitChildren(node._syntaxNode).cast(FunctionSignatureSyntax.self)
 904 |   }
     :
 907 |   ///   - Parameter node: the node that is being visited
 908 |   ///   - Returns: the rewritten node
 909 |   open func visit(_ node: FunctionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 910 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(FunctionTypeSyntax.self))
 911 |   }
     :
 914 |   ///   - Parameter node: the node that is being visited
 915 |   ///   - Returns: the rewritten node
 916 |   open func visit(_ node: GenericArgumentClauseSyntax) -> GenericArgumentClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 917 |     return visitChildren(node._syntaxNode).cast(GenericArgumentClauseSyntax.self)
 918 |   }
     :
 921 |   ///   - Parameter node: the node that is being visited
 922 |   ///   - Returns: the rewritten node
 923 |   open func visit(_ node: GenericArgumentListSyntax) -> GenericArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 924 |     return visitChildren(node._syntaxNode).cast(GenericArgumentListSyntax.self)
 925 |   }
     :
 928 |   ///   - Parameter node: the node that is being visited
 929 |   ///   - Returns: the rewritten node
 930 |   open func visit(_ node: GenericArgumentSyntax) -> GenericArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 931 |     return visitChildren(node._syntaxNode).cast(GenericArgumentSyntax.self)
 932 |   }
     :
 935 |   ///   - Parameter node: the node that is being visited
 936 |   ///   - Returns: the rewritten node
 937 |   open func visit(_ node: GenericParameterClauseSyntax) -> GenericParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 938 |     return visitChildren(node._syntaxNode).cast(GenericParameterClauseSyntax.self)
 939 |   }
     :
 942 |   ///   - Parameter node: the node that is being visited
 943 |   ///   - Returns: the rewritten node
 944 |   open func visit(_ node: GenericParameterListSyntax) -> GenericParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 945 |     return visitChildren(node._syntaxNode).cast(GenericParameterListSyntax.self)
 946 |   }
     :
 949 |   ///   - Parameter node: the node that is being visited
 950 |   ///   - Returns: the rewritten node
 951 |   open func visit(_ node: GenericParameterSyntax) -> GenericParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 952 |     return visitChildren(node._syntaxNode).cast(GenericParameterSyntax.self)
 953 |   }
     :
 956 |   ///   - Parameter node: the node that is being visited
 957 |   ///   - Returns: the rewritten node
 958 |   open func visit(_ node: GenericRequirementListSyntax) -> GenericRequirementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 959 |     return visitChildren(node._syntaxNode).cast(GenericRequirementListSyntax.self)
 960 |   }
     :
 963 |   ///   - Parameter node: the node that is being visited
 964 |   ///   - Returns: the rewritten node
 965 |   open func visit(_ node: GenericRequirementSyntax) -> GenericRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 966 |     return visitChildren(node._syntaxNode).cast(GenericRequirementSyntax.self)
 967 |   }
     :
 970 |   ///   - Parameter node: the node that is being visited
 971 |   ///   - Returns: the rewritten node
 972 |   open func visit(_ node: GenericSpecializationExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 973 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(GenericSpecializationExprSyntax.self))
 974 |   }
     :
 977 |   ///   - Parameter node: the node that is being visited
 978 |   ///   - Returns: the rewritten node
 979 |   open func visit(_ node: GenericWhereClauseSyntax) -> GenericWhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 980 |     return visitChildren(node._syntaxNode).cast(GenericWhereClauseSyntax.self)
 981 |   }
     :
 984 |   ///   - Parameter node: the node that is being visited
 985 |   ///   - Returns: the rewritten node
 986 |   open func visit(_ node: GuardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 987 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(GuardStmtSyntax.self))
 988 |   }
     :
 991 |   ///   - Parameter node: the node that is being visited
 992 |   ///   - Returns: the rewritten node
 993 |   open func visit(_ node: IdentifierPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 994 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IdentifierPatternSyntax.self))
 995 |   }
     :
 998 |   ///   - Parameter node: the node that is being visited
 999 |   ///   - Returns: the rewritten node
1000 |   open func visit(_ node: IdentifierTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1001 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(IdentifierTypeSyntax.self))
1002 |   }
     :
1005 |   ///   - Parameter node: the node that is being visited
1006 |   ///   - Returns: the rewritten node
1007 |   open func visit(_ node: IfConfigClauseListSyntax) -> IfConfigClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1008 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseListSyntax.self)
1009 |   }
     :
1012 |   ///   - Parameter node: the node that is being visited
1013 |   ///   - Returns: the rewritten node
1014 |   open func visit(_ node: IfConfigClauseSyntax) -> IfConfigClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1015 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseSyntax.self)
1016 |   }
     :
1019 |   ///   - Parameter node: the node that is being visited
1020 |   ///   - Returns: the rewritten node
1021 |   open func visit(_ node: IfConfigDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1022 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(IfConfigDeclSyntax.self))
1023 |   }
     :
1026 |   ///   - Parameter node: the node that is being visited
1027 |   ///   - Returns: the rewritten node
1028 |   open func visit(_ node: IfExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1029 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IfExprSyntax.self))
1030 |   }
     :
1033 |   ///   - Parameter node: the node that is being visited
1034 |   ///   - Returns: the rewritten node
1035 |   open func visit(_ node: ImplementsAttributeArgumentsSyntax) -> ImplementsAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1036 |     return visitChildren(node._syntaxNode).cast(ImplementsAttributeArgumentsSyntax.self)
1037 |   }
     :
1040 |   ///   - Parameter node: the node that is being visited
1041 |   ///   - Returns: the rewritten node
1042 |   open func visit(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1043 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ImplicitlyUnwrappedOptionalTypeSyntax.self))
1044 |   }
     :
1047 |   ///   - Parameter node: the node that is being visited
1048 |   ///   - Returns: the rewritten node
1049 |   open func visit(_ node: ImportDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1050 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ImportDeclSyntax.self))
1051 |   }
     :
1054 |   ///   - Parameter node: the node that is being visited
1055 |   ///   - Returns: the rewritten node
1056 |   open func visit(_ node: ImportPathComponentListSyntax) -> ImportPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1057 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentListSyntax.self)
1058 |   }
     :
1061 |   ///   - Parameter node: the node that is being visited
1062 |   ///   - Returns: the rewritten node
1063 |   open func visit(_ node: ImportPathComponentSyntax) -> ImportPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1064 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentSyntax.self)
1065 |   }
     :
1068 |   ///   - Parameter node: the node that is being visited
1069 |   ///   - Returns: the rewritten node
1070 |   open func visit(_ node: InOutExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1071 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InOutExprSyntax.self))
1072 |   }
     :
1075 |   ///   - Parameter node: the node that is being visited
1076 |   ///   - Returns: the rewritten node
1077 |   open func visit(_ node: InfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1078 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InfixOperatorExprSyntax.self))
1079 |   }
     :
1082 |   ///   - Parameter node: the node that is being visited
1083 |   ///   - Returns: the rewritten node
1084 |   open func visit(_ node: InheritanceClauseSyntax) -> InheritanceClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1085 |     return visitChildren(node._syntaxNode).cast(InheritanceClauseSyntax.self)
1086 |   }
     :
1089 |   ///   - Parameter node: the node that is being visited
1090 |   ///   - Returns: the rewritten node
1091 |   open func visit(_ node: InheritedTypeListSyntax) -> InheritedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1092 |     return visitChildren(node._syntaxNode).cast(InheritedTypeListSyntax.self)
1093 |   }
     :
1096 |   ///   - Parameter node: the node that is being visited
1097 |   ///   - Returns: the rewritten node
1098 |   open func visit(_ node: InheritedTypeSyntax) -> InheritedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1099 |     return visitChildren(node._syntaxNode).cast(InheritedTypeSyntax.self)
1100 |   }
     :
1103 |   ///   - Parameter node: the node that is being visited
1104 |   ///   - Returns: the rewritten node
1105 |   open func visit(_ node: InitializerClauseSyntax) -> InitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1106 |     return visitChildren(node._syntaxNode).cast(InitializerClauseSyntax.self)
1107 |   }
     :
1110 |   ///   - Parameter node: the node that is being visited
1111 |   ///   - Returns: the rewritten node
1112 |   open func visit(_ node: InitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1113 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(InitializerDeclSyntax.self))
1114 |   }
     :
1117 |   ///   - Parameter node: the node that is being visited
1118 |   ///   - Returns: the rewritten node
1119 |   open func visit(_ node: IntegerLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1120 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IntegerLiteralExprSyntax.self))
1121 |   }
     :
1124 |   ///   - Parameter node: the node that is being visited
1125 |   ///   - Returns: the rewritten node
1126 |   open func visit(_ node: IsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1127 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IsExprSyntax.self))
1128 |   }
     :
1131 |   ///   - Parameter node: the node that is being visited
1132 |   ///   - Returns: the rewritten node
1133 |   open func visit(_ node: IsTypePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1134 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IsTypePatternSyntax.self))
1135 |   }
     :
1138 |   ///   - Parameter node: the node that is being visited
1139 |   ///   - Returns: the rewritten node
1140 |   open func visit(_ node: KeyPathComponentListSyntax) -> KeyPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1141 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentListSyntax.self)
1142 |   }
     :
1145 |   ///   - Parameter node: the node that is being visited
1146 |   ///   - Returns: the rewritten node
1147 |   open func visit(_ node: KeyPathComponentSyntax) -> KeyPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1148 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentSyntax.self)
1149 |   }
     :
1152 |   ///   - Parameter node: the node that is being visited
1153 |   ///   - Returns: the rewritten node
1154 |   open func visit(_ node: KeyPathExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1155 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(KeyPathExprSyntax.self))
1156 |   }
     :
1159 |   ///   - Parameter node: the node that is being visited
1160 |   ///   - Returns: the rewritten node
1161 |   open func visit(_ node: KeyPathOptionalComponentSyntax) -> KeyPathOptionalComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1162 |     return visitChildren(node._syntaxNode).cast(KeyPathOptionalComponentSyntax.self)
1163 |   }
     :
1166 |   ///   - Parameter node: the node that is being visited
1167 |   ///   - Returns: the rewritten node
1168 |   open func visit(_ node: KeyPathPropertyComponentSyntax) -> KeyPathPropertyComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1169 |     return visitChildren(node._syntaxNode).cast(KeyPathPropertyComponentSyntax.self)
1170 |   }
     :
1173 |   ///   - Parameter node: the node that is being visited
1174 |   ///   - Returns: the rewritten node
1175 |   open func visit(_ node: KeyPathSubscriptComponentSyntax) -> KeyPathSubscriptComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1176 |     return visitChildren(node._syntaxNode).cast(KeyPathSubscriptComponentSyntax.self)
1177 |   }
     :
1180 |   ///   - Parameter node: the node that is being visited
1181 |   ///   - Returns: the rewritten node
1182 |   open func visit(_ node: LabeledExprListSyntax) -> LabeledExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1183 |     return visitChildren(node._syntaxNode).cast(LabeledExprListSyntax.self)
1184 |   }
     :
1187 |   ///   - Parameter node: the node that is being visited
1188 |   ///   - Returns: the rewritten node
1189 |   open func visit(_ node: LabeledExprSyntax) -> LabeledExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1190 |     return visitChildren(node._syntaxNode).cast(LabeledExprSyntax.self)
1191 |   }
     :
1194 |   ///   - Parameter node: the node that is being visited
1195 |   ///   - Returns: the rewritten node
1196 |   open func visit(_ node: LabeledSpecializeArgumentSyntax) -> LabeledSpecializeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1197 |     return visitChildren(node._syntaxNode).cast(LabeledSpecializeArgumentSyntax.self)
1198 |   }
     :
1201 |   ///   - Parameter node: the node that is being visited
1202 |   ///   - Returns: the rewritten node
1203 |   open func visit(_ node: LabeledStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1204 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(LabeledStmtSyntax.self))
1205 |   }
     :
1208 |   ///   - Parameter node: the node that is being visited
1209 |   ///   - Returns: the rewritten node
1210 |   open func visit(_ node: LayoutRequirementSyntax) -> LayoutRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1211 |     return visitChildren(node._syntaxNode).cast(LayoutRequirementSyntax.self)
1212 |   }
     :
1245 |   ///   - Parameter node: the node that is being visited
1246 |   ///   - Returns: the rewritten node
1247 |   open func visit(_ node: MacroDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1248 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroDeclSyntax.self))
1249 |   }
     :
1252 |   ///   - Parameter node: the node that is being visited
1253 |   ///   - Returns: the rewritten node
1254 |   open func visit(_ node: MacroExpansionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1255 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionDeclSyntax.self))
1256 |   }
     :
1259 |   ///   - Parameter node: the node that is being visited
1260 |   ///   - Returns: the rewritten node
1261 |   open func visit(_ node: MacroExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1262 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionExprSyntax.self))
1263 |   }
     :
1266 |   ///   - Parameter node: the node that is being visited
1267 |   ///   - Returns: the rewritten node
1268 |   open func visit(_ node: MatchingPatternConditionSyntax) -> MatchingPatternConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1269 |     return visitChildren(node._syntaxNode).cast(MatchingPatternConditionSyntax.self)
1270 |   }
     :
1273 |   ///   - Parameter node: the node that is being visited
1274 |   ///   - Returns: the rewritten node
1275 |   open func visit(_ node: MemberAccessExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1276 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MemberAccessExprSyntax.self))
1277 |   }
     :
1280 |   ///   - Parameter node: the node that is being visited
1281 |   ///   - Returns: the rewritten node
1282 |   open func visit(_ node: MemberBlockItemListSyntax) -> MemberBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1283 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemListSyntax.self)
1284 |   }
     :
1287 |   ///   - Parameter node: the node that is being visited
1288 |   ///   - Returns: the rewritten node
1289 |   open func visit(_ node: MemberBlockItemSyntax) -> MemberBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1290 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemSyntax.self)
1291 |   }
     :
1294 |   ///   - Parameter node: the node that is being visited
1295 |   ///   - Returns: the rewritten node
1296 |   open func visit(_ node: MemberBlockSyntax) -> MemberBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
1297 |     return visitChildren(node._syntaxNode).cast(MemberBlockSyntax.self)
1298 |   }
     :
1301 |   ///   - Parameter node: the node that is being visited
1302 |   ///   - Returns: the rewritten node
1303 |   open func visit(_ node: MemberTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1304 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MemberTypeSyntax.self))
1305 |   }
     :
1308 |   ///   - Parameter node: the node that is being visited
1309 |   ///   - Returns: the rewritten node
1310 |   open func visit(_ node: MetatypeTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1311 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MetatypeTypeSyntax.self))
1312 |   }
     :
1315 |   ///   - Parameter node: the node that is being visited
1316 |   ///   - Returns: the rewritten node
1317 |   open func visit(_ node: MissingDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1318 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MissingDeclSyntax.self))
1319 |   }
     :
1322 |   ///   - Parameter node: the node that is being visited
1323 |   ///   - Returns: the rewritten node
1324 |   open func visit(_ node: MissingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1325 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MissingExprSyntax.self))
1326 |   }
     :
1329 |   ///   - Parameter node: the node that is being visited
1330 |   ///   - Returns: the rewritten node
1331 |   open func visit(_ node: MissingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1332 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(MissingPatternSyntax.self))
1333 |   }
     :
1336 |   ///   - Parameter node: the node that is being visited
1337 |   ///   - Returns: the rewritten node
1338 |   open func visit(_ node: MissingStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1339 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(MissingStmtSyntax.self))
1340 |   }
     :
1343 |   ///   - Parameter node: the node that is being visited
1344 |   ///   - Returns: the rewritten node
1345 |   open func visit(_ node: MissingSyntax) -> Syntax {
     |             `- note: potential overridden instance method 'visit' here
1346 |     return Syntax(visitChildren(node._syntaxNode).cast(MissingSyntax.self))
1347 |   }
     :
1350 |   ///   - Parameter node: the node that is being visited
1351 |   ///   - Returns: the rewritten node
1352 |   open func visit(_ node: MissingTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1353 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MissingTypeSyntax.self))
1354 |   }
     :
1357 |   ///   - Parameter node: the node that is being visited
1358 |   ///   - Returns: the rewritten node
1359 |   open func visit(_ node: MultipleTrailingClosureElementListSyntax) -> MultipleTrailingClosureElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1360 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementListSyntax.self)
1361 |   }
     :
1364 |   ///   - Parameter node: the node that is being visited
1365 |   ///   - Returns: the rewritten node
1366 |   open func visit(_ node: MultipleTrailingClosureElementSyntax) -> MultipleTrailingClosureElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1367 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementSyntax.self)
1368 |   }
     :
1371 |   ///   - Parameter node: the node that is being visited
1372 |   ///   - Returns: the rewritten node
1373 |   open func visit(_ node: NamedOpaqueReturnTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1374 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(NamedOpaqueReturnTypeSyntax.self))
1375 |   }
     :
1378 |   ///   - Parameter node: the node that is being visited
1379 |   ///   - Returns: the rewritten node
1380 |   open func visit(_ node: NilLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1381 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(NilLiteralExprSyntax.self))
1382 |   }
     :
1385 |   ///   - Parameter node: the node that is being visited
1386 |   ///   - Returns: the rewritten node
1387 |   open func visit(_ node: ObjCSelectorPieceListSyntax) -> ObjCSelectorPieceListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1388 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceListSyntax.self)
1389 |   }
     :
1392 |   ///   - Parameter node: the node that is being visited
1393 |   ///   - Returns: the rewritten node
1394 |   open func visit(_ node: ObjCSelectorPieceSyntax) -> ObjCSelectorPieceSyntax {
     |             `- note: potential overridden instance method 'visit' here
1395 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceSyntax.self)
1396 |   }
     :
1399 |   ///   - Parameter node: the node that is being visited
1400 |   ///   - Returns: the rewritten node
1401 |   open func visit(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) -> OpaqueReturnTypeOfAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1402 |     return visitChildren(node._syntaxNode).cast(OpaqueReturnTypeOfAttributeArgumentsSyntax.self)
1403 |   }
     :
1406 |   ///   - Parameter node: the node that is being visited
1407 |   ///   - Returns: the rewritten node
1408 |   open func visit(_ node: OperatorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1409 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(OperatorDeclSyntax.self))
1410 |   }
     :
1413 |   ///   - Parameter node: the node that is being visited
1414 |   ///   - Returns: the rewritten node
1415 |   open func visit(_ node: OperatorPrecedenceAndTypesSyntax) -> OperatorPrecedenceAndTypesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1416 |     return visitChildren(node._syntaxNode).cast(OperatorPrecedenceAndTypesSyntax.self)
1417 |   }
     :
1420 |   ///   - Parameter node: the node that is being visited
1421 |   ///   - Returns: the rewritten node
1422 |   open func visit(_ node: OptionalBindingConditionSyntax) -> OptionalBindingConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1423 |     return visitChildren(node._syntaxNode).cast(OptionalBindingConditionSyntax.self)
1424 |   }
     :
1427 |   ///   - Parameter node: the node that is being visited
1428 |   ///   - Returns: the rewritten node
1429 |   open func visit(_ node: OptionalChainingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1430 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(OptionalChainingExprSyntax.self))
1431 |   }
     :
1434 |   ///   - Parameter node: the node that is being visited
1435 |   ///   - Returns: the rewritten node
1436 |   open func visit(_ node: OptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1437 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(OptionalTypeSyntax.self))
1438 |   }
     :
1441 |   ///   - Parameter node: the node that is being visited
1442 |   ///   - Returns: the rewritten node
1443 |   open func visit(_ node: OriginallyDefinedInAttributeArgumentsSyntax) -> OriginallyDefinedInAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1444 |     return visitChildren(node._syntaxNode).cast(OriginallyDefinedInAttributeArgumentsSyntax.self)
1445 |   }
     :
1448 |   ///   - Parameter node: the node that is being visited
1449 |   ///   - Returns: the rewritten node
1450 |   open func visit(_ node: PackElementExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1451 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackElementExprSyntax.self))
1452 |   }
     :
1455 |   ///   - Parameter node: the node that is being visited
1456 |   ///   - Returns: the rewritten node
1457 |   open func visit(_ node: PackElementTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1458 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackElementTypeSyntax.self))
1459 |   }
     :
1462 |   ///   - Parameter node: the node that is being visited
1463 |   ///   - Returns: the rewritten node
1464 |   open func visit(_ node: PackExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1465 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackExpansionExprSyntax.self))
1466 |   }
     :
1469 |   ///   - Parameter node: the node that is being visited
1470 |   ///   - Returns: the rewritten node
1471 |   open func visit(_ node: PackExpansionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1472 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackExpansionTypeSyntax.self))
1473 |   }
     :
1476 |   ///   - Parameter node: the node that is being visited
1477 |   ///   - Returns: the rewritten node
1478 |   open func visit(_ node: PatternBindingListSyntax) -> PatternBindingListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1479 |     return visitChildren(node._syntaxNode).cast(PatternBindingListSyntax.self)
1480 |   }
     :
1483 |   ///   - Parameter node: the node that is being visited
1484 |   ///   - Returns: the rewritten node
1485 |   open func visit(_ node: PatternBindingSyntax) -> PatternBindingSyntax {
     |             `- note: potential overridden instance method 'visit' here
1486 |     return visitChildren(node._syntaxNode).cast(PatternBindingSyntax.self)
1487 |   }
     :
1490 |   ///   - Parameter node: the node that is being visited
1491 |   ///   - Returns: the rewritten node
1492 |   open func visit(_ node: PatternExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1493 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PatternExprSyntax.self))
1494 |   }
     :
1497 |   ///   - Parameter node: the node that is being visited
1498 |   ///   - Returns: the rewritten node
1499 |   open func visit(_ node: PlatformVersionItemListSyntax) -> PlatformVersionItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1500 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemListSyntax.self)
1501 |   }
     :
1504 |   ///   - Parameter node: the node that is being visited
1505 |   ///   - Returns: the rewritten node
1506 |   open func visit(_ node: PlatformVersionItemSyntax) -> PlatformVersionItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1507 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemSyntax.self)
1508 |   }
     :
1511 |   ///   - Parameter node: the node that is being visited
1512 |   ///   - Returns: the rewritten node
1513 |   open func visit(_ node: PlatformVersionSyntax) -> PlatformVersionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1514 |     return visitChildren(node._syntaxNode).cast(PlatformVersionSyntax.self)
1515 |   }
     :
1518 |   ///   - Parameter node: the node that is being visited
1519 |   ///   - Returns: the rewritten node
1520 |   open func visit(_ node: PostfixIfConfigExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1521 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixIfConfigExprSyntax.self))
1522 |   }
     :
1525 |   ///   - Parameter node: the node that is being visited
1526 |   ///   - Returns: the rewritten node
1527 |   open func visit(_ node: PostfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1528 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixOperatorExprSyntax.self))
1529 |   }
     :
1532 |   ///   - Parameter node: the node that is being visited
1533 |   ///   - Returns: the rewritten node
1534 |   open func visit(_ node: PoundSourceLocationArgumentsSyntax) -> PoundSourceLocationArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1535 |     return visitChildren(node._syntaxNode).cast(PoundSourceLocationArgumentsSyntax.self)
1536 |   }
     :
1539 |   ///   - Parameter node: the node that is being visited
1540 |   ///   - Returns: the rewritten node
1541 |   open func visit(_ node: PoundSourceLocationSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1542 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PoundSourceLocationSyntax.self))
1543 |   }
     :
1546 |   ///   - Parameter node: the node that is being visited
1547 |   ///   - Returns: the rewritten node
1548 |   open func visit(_ node: PrecedenceGroupAssignmentSyntax) -> PrecedenceGroupAssignmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1549 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssignmentSyntax.self)
1550 |   }
     :
1553 |   ///   - Parameter node: the node that is being visited
1554 |   ///   - Returns: the rewritten node
1555 |   open func visit(_ node: PrecedenceGroupAssociativitySyntax) -> PrecedenceGroupAssociativitySyntax {
     |             `- note: potential overridden instance method 'visit' here
1556 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssociativitySyntax.self)
1557 |   }
     :
1560 |   ///   - Parameter node: the node that is being visited
1561 |   ///   - Returns: the rewritten node
1562 |   open func visit(_ node: PrecedenceGroupAttributeListSyntax) -> PrecedenceGroupAttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1563 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAttributeListSyntax.self)
1564 |   }
     :
1567 |   ///   - Parameter node: the node that is being visited
1568 |   ///   - Returns: the rewritten node
1569 |   open func visit(_ node: PrecedenceGroupDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1570 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PrecedenceGroupDeclSyntax.self))
1571 |   }
     :
1574 |   ///   - Parameter node: the node that is being visited
1575 |   ///   - Returns: the rewritten node
1576 |   open func visit(_ node: PrecedenceGroupNameListSyntax) -> PrecedenceGroupNameListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1577 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameListSyntax.self)
1578 |   }
     :
1581 |   ///   - Parameter node: the node that is being visited
1582 |   ///   - Returns: the rewritten node
1583 |   open func visit(_ node: PrecedenceGroupNameSyntax) -> PrecedenceGroupNameSyntax {
     |             `- note: potential overridden instance method 'visit' here
1584 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameSyntax.self)
1585 |   }
     :
1588 |   ///   - Parameter node: the node that is being visited
1589 |   ///   - Returns: the rewritten node
1590 |   open func visit(_ node: PrecedenceGroupRelationSyntax) -> PrecedenceGroupRelationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1591 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupRelationSyntax.self)
1592 |   }
     :
1595 |   ///   - Parameter node: the node that is being visited
1596 |   ///   - Returns: the rewritten node
1597 |   open func visit(_ node: PrefixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1598 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PrefixOperatorExprSyntax.self))
1599 |   }
     :
1602 |   ///   - Parameter node: the node that is being visited
1603 |   ///   - Returns: the rewritten node
1604 |   open func visit(_ node: PrimaryAssociatedTypeClauseSyntax) -> PrimaryAssociatedTypeClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1605 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeClauseSyntax.self)
1606 |   }
     :
1609 |   ///   - Parameter node: the node that is being visited
1610 |   ///   - Returns: the rewritten node
1611 |   open func visit(_ node: PrimaryAssociatedTypeListSyntax) -> PrimaryAssociatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1612 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeListSyntax.self)
1613 |   }
     :
1616 |   ///   - Parameter node: the node that is being visited
1617 |   ///   - Returns: the rewritten node
1618 |   open func visit(_ node: PrimaryAssociatedTypeSyntax) -> PrimaryAssociatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1619 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeSyntax.self)
1620 |   }
     :
1623 |   ///   - Parameter node: the node that is being visited
1624 |   ///   - Returns: the rewritten node
1625 |   open func visit(_ node: ProtocolDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1626 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ProtocolDeclSyntax.self))
1627 |   }
     :
1630 |   ///   - Parameter node: the node that is being visited
1631 |   ///   - Returns: the rewritten node
1632 |   open func visit(_ node: RegexLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1633 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(RegexLiteralExprSyntax.self))
1634 |   }
     :
1637 |   ///   - Parameter node: the node that is being visited
1638 |   ///   - Returns: the rewritten node
1639 |   open func visit(_ node: RepeatStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1640 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(RepeatStmtSyntax.self))
1641 |   }
     :
1644 |   ///   - Parameter node: the node that is being visited
1645 |   ///   - Returns: the rewritten node
1646 |   open func visit(_ node: ReturnClauseSyntax) -> ReturnClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1647 |     return visitChildren(node._syntaxNode).cast(ReturnClauseSyntax.self)
1648 |   }
     :
1651 |   ///   - Parameter node: the node that is being visited
1652 |   ///   - Returns: the rewritten node
1653 |   open func visit(_ node: ReturnStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1654 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ReturnStmtSyntax.self))
1655 |   }
     :
1658 |   ///   - Parameter node: the node that is being visited
1659 |   ///   - Returns: the rewritten node
1660 |   open func visit(_ node: SameTypeRequirementSyntax) -> SameTypeRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1661 |     return visitChildren(node._syntaxNode).cast(SameTypeRequirementSyntax.self)
1662 |   }
     :
1665 |   ///   - Parameter node: the node that is being visited
1666 |   ///   - Returns: the rewritten node
1667 |   open func visit(_ node: SequenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1668 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SequenceExprSyntax.self))
1669 |   }
     :
1672 |   ///   - Parameter node: the node that is being visited
1673 |   ///   - Returns: the rewritten node
1674 |   open func visit(_ node: SimpleStringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1675 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SimpleStringLiteralExprSyntax.self))
1676 |   }
     :
1679 |   ///   - Parameter node: the node that is being visited
1680 |   ///   - Returns: the rewritten node
1681 |   open func visit(_ node: SimpleStringLiteralSegmentListSyntax) -> SimpleStringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1682 |     return visitChildren(node._syntaxNode).cast(SimpleStringLiteralSegmentListSyntax.self)
1683 |   }
     :
1686 |   ///   - Parameter node: the node that is being visited
1687 |   ///   - Returns: the rewritten node
1688 |   open func visit(_ node: SimpleTypeSpecifierSyntax) -> SimpleTypeSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
1689 |     return visitChildren(node._syntaxNode).cast(SimpleTypeSpecifierSyntax.self)
1690 |   }
     :
1693 |   ///   - Parameter node: the node that is being visited
1694 |   ///   - Returns: the rewritten node
1695 |   open func visit(_ node: SomeOrAnyTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1696 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SomeOrAnyTypeSyntax.self))
1697 |   }
     :
1700 |   ///   - Parameter node: the node that is being visited
1701 |   ///   - Returns: the rewritten node
1702 |   open func visit(_ node: SourceFileSyntax) -> SourceFileSyntax {
     |             `- note: potential overridden instance method 'visit' here
1703 |     return visitChildren(node._syntaxNode).cast(SourceFileSyntax.self)
1704 |   }
     :
1707 |   ///   - Parameter node: the node that is being visited
1708 |   ///   - Returns: the rewritten node
1709 |   open func visit(_ node: SpecializeAttributeArgumentListSyntax) -> SpecializeAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1710 |     return visitChildren(node._syntaxNode).cast(SpecializeAttributeArgumentListSyntax.self)
1711 |   }
     :
1714 |   ///   - Parameter node: the node that is being visited
1715 |   ///   - Returns: the rewritten node
1716 |   open func visit(_ node: SpecializeAvailabilityArgumentSyntax) -> SpecializeAvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1717 |     return visitChildren(node._syntaxNode).cast(SpecializeAvailabilityArgumentSyntax.self)
1718 |   }
     :
1721 |   ///   - Parameter node: the node that is being visited
1722 |   ///   - Returns: the rewritten node
1723 |   open func visit(_ node: SpecializeTargetFunctionArgumentSyntax) -> SpecializeTargetFunctionArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1724 |     return visitChildren(node._syntaxNode).cast(SpecializeTargetFunctionArgumentSyntax.self)
1725 |   }
     :
1728 |   ///   - Parameter node: the node that is being visited
1729 |   ///   - Returns: the rewritten node
1730 |   open func visit(_ node: StringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1731 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(StringLiteralExprSyntax.self))
1732 |   }
     :
1735 |   ///   - Parameter node: the node that is being visited
1736 |   ///   - Returns: the rewritten node
1737 |   open func visit(_ node: StringLiteralSegmentListSyntax) -> StringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1738 |     return visitChildren(node._syntaxNode).cast(StringLiteralSegmentListSyntax.self)
1739 |   }
     :
1742 |   ///   - Parameter node: the node that is being visited
1743 |   ///   - Returns: the rewritten node
1744 |   open func visit(_ node: StringSegmentSyntax) -> StringSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1745 |     return visitChildren(node._syntaxNode).cast(StringSegmentSyntax.self)
1746 |   }
     :
1749 |   ///   - Parameter node: the node that is being visited
1750 |   ///   - Returns: the rewritten node
1751 |   open func visit(_ node: StructDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1752 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(StructDeclSyntax.self))
1753 |   }
     :
1756 |   ///   - Parameter node: the node that is being visited
1757 |   ///   - Returns: the rewritten node
1758 |   open func visit(_ node: SubscriptCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1759 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SubscriptCallExprSyntax.self))
1760 |   }
     :
1763 |   ///   - Parameter node: the node that is being visited
1764 |   ///   - Returns: the rewritten node
1765 |   open func visit(_ node: SubscriptDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1766 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(SubscriptDeclSyntax.self))
1767 |   }
     :
1770 |   ///   - Parameter node: the node that is being visited
1771 |   ///   - Returns: the rewritten node
1772 |   open func visit(_ node: SuperExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1773 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SuperExprSyntax.self))
1774 |   }
     :
1777 |   ///   - Parameter node: the node that is being visited
1778 |   ///   - Returns: the rewritten node
1779 |   open func visit(_ node: SuppressedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1780 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SuppressedTypeSyntax.self))
1781 |   }
     :
1784 |   ///   - Parameter node: the node that is being visited
1785 |   ///   - Returns: the rewritten node
1786 |   open func visit(_ node: SwitchCaseItemListSyntax) -> SwitchCaseItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1787 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemListSyntax.self)
1788 |   }
     :
1791 |   ///   - Parameter node: the node that is being visited
1792 |   ///   - Returns: the rewritten node
1793 |   open func visit(_ node: SwitchCaseItemSyntax) -> SwitchCaseItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1794 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemSyntax.self)
1795 |   }
     :
1798 |   ///   - Parameter node: the node that is being visited
1799 |   ///   - Returns: the rewritten node
1800 |   open func visit(_ node: SwitchCaseLabelSyntax) -> SwitchCaseLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1801 |     return visitChildren(node._syntaxNode).cast(SwitchCaseLabelSyntax.self)
1802 |   }
     :
1805 |   ///   - Parameter node: the node that is being visited
1806 |   ///   - Returns: the rewritten node
1807 |   open func visit(_ node: SwitchCaseListSyntax) -> SwitchCaseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1808 |     return visitChildren(node._syntaxNode).cast(SwitchCaseListSyntax.self)
1809 |   }
     :
1812 |   ///   - Parameter node: the node that is being visited
1813 |   ///   - Returns: the rewritten node
1814 |   open func visit(_ node: SwitchCaseSyntax) -> SwitchCaseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1815 |     return visitChildren(node._syntaxNode).cast(SwitchCaseSyntax.self)
1816 |   }
     :
1819 |   ///   - Parameter node: the node that is being visited
1820 |   ///   - Returns: the rewritten node
1821 |   open func visit(_ node: SwitchDefaultLabelSyntax) -> SwitchDefaultLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1822 |     return visitChildren(node._syntaxNode).cast(SwitchDefaultLabelSyntax.self)
1823 |   }
     :
1826 |   ///   - Parameter node: the node that is being visited
1827 |   ///   - Returns: the rewritten node
1828 |   open func visit(_ node: SwitchExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1829 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SwitchExprSyntax.self))
1830 |   }
     :
1833 |   ///   - Parameter node: the node that is being visited
1834 |   ///   - Returns: the rewritten node
1835 |   open func visit(_ node: TernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1836 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TernaryExprSyntax.self))
1837 |   }
     :
1850 |   ///   - Parameter node: the node that is being visited
1851 |   ///   - Returns: the rewritten node
1852 |   open func visit(_ node: ThrowStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1853 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ThrowStmtSyntax.self))
1854 |   }
     :
1857 |   ///   - Parameter node: the node that is being visited
1858 |   ///   - Returns: the rewritten node
1859 |   open func visit(_ node: ThrowsClauseSyntax) -> ThrowsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1860 |     return visitChildren(node._syntaxNode).cast(ThrowsClauseSyntax.self)
1861 |   }
     :
1864 |   ///   - Parameter node: the node that is being visited
1865 |   ///   - Returns: the rewritten node
1866 |   open func visit(_ node: TryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1867 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TryExprSyntax.self))
1868 |   }
     :
1871 |   ///   - Parameter node: the node that is being visited
1872 |   ///   - Returns: the rewritten node
1873 |   open func visit(_ node: TupleExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1874 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TupleExprSyntax.self))
1875 |   }
     :
1878 |   ///   - Parameter node: the node that is being visited
1879 |   ///   - Returns: the rewritten node
1880 |   open func visit(_ node: TuplePatternElementListSyntax) -> TuplePatternElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1881 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementListSyntax.self)
1882 |   }
     :
1885 |   ///   - Parameter node: the node that is being visited
1886 |   ///   - Returns: the rewritten node
1887 |   open func visit(_ node: TuplePatternElementSyntax) -> TuplePatternElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1888 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementSyntax.self)
1889 |   }
     :
1892 |   ///   - Parameter node: the node that is being visited
1893 |   ///   - Returns: the rewritten node
1894 |   open func visit(_ node: TuplePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1895 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(TuplePatternSyntax.self))
1896 |   }
     :
1899 |   ///   - Parameter node: the node that is being visited
1900 |   ///   - Returns: the rewritten node
1901 |   open func visit(_ node: TupleTypeElementListSyntax) -> TupleTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1902 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementListSyntax.self)
1903 |   }
     :
1906 |   ///   - Parameter node: the node that is being visited
1907 |   ///   - Returns: the rewritten node
1908 |   open func visit(_ node: TupleTypeElementSyntax) -> TupleTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1909 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementSyntax.self)
1910 |   }
     :
1913 |   ///   - Parameter node: the node that is being visited
1914 |   ///   - Returns: the rewritten node
1915 |   open func visit(_ node: TupleTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1916 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(TupleTypeSyntax.self))
1917 |   }
     :
1920 |   ///   - Parameter node: the node that is being visited
1921 |   ///   - Returns: the rewritten node
1922 |   open func visit(_ node: TypeAliasDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1923 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(TypeAliasDeclSyntax.self))
1924 |   }
     :
1927 |   ///   - Parameter node: the node that is being visited
1928 |   ///   - Returns: the rewritten node
1929 |   open func visit(_ node: TypeAnnotationSyntax) -> TypeAnnotationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1930 |     return visitChildren(node._syntaxNode).cast(TypeAnnotationSyntax.self)
1931 |   }
     :
1934 |   ///   - Parameter node: the node that is being visited
1935 |   ///   - Returns: the rewritten node
1936 |   open func visit(_ node: TypeEffectSpecifiersSyntax) -> TypeEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
1937 |     return visitChildren(node._syntaxNode).cast(TypeEffectSpecifiersSyntax.self)
1938 |   }
     :
1941 |   ///   - Parameter node: the node that is being visited
1942 |   ///   - Returns: the rewritten node
1943 |   open func visit(_ node: TypeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1944 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TypeExprSyntax.self))
1945 |   }
     :
1948 |   ///   - Parameter node: the node that is being visited
1949 |   ///   - Returns: the rewritten node
1950 |   open func visit(_ node: TypeInitializerClauseSyntax) -> TypeInitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1951 |     return visitChildren(node._syntaxNode).cast(TypeInitializerClauseSyntax.self)
1952 |   }
     :
1955 |   ///   - Parameter node: the node that is being visited
1956 |   ///   - Returns: the rewritten node
1957 |   open func visit(_ node: TypeSpecifierListSyntax) -> TypeSpecifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1958 |     return visitChildren(node._syntaxNode).cast(TypeSpecifierListSyntax.self)
1959 |   }
     :
1962 |   ///   - Parameter node: the node that is being visited
1963 |   ///   - Returns: the rewritten node
1964 |   open func visit(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) -> UnavailableFromAsyncAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1965 |     return visitChildren(node._syntaxNode).cast(UnavailableFromAsyncAttributeArgumentsSyntax.self)
1966 |   }
     :
1969 |   ///   - Parameter node: the node that is being visited
1970 |   ///   - Returns: the rewritten node
1971 |   open func visit(_ node: UnderscorePrivateAttributeArgumentsSyntax) -> UnderscorePrivateAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1972 |     return visitChildren(node._syntaxNode).cast(UnderscorePrivateAttributeArgumentsSyntax.self)
1973 |   }
     :
1976 |   ///   - Parameter node: the node that is being visited
1977 |   ///   - Returns: the rewritten node
1978 |   open func visit(_ node: UnexpectedNodesSyntax) -> UnexpectedNodesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1979 |     return visitChildren(node._syntaxNode).cast(UnexpectedNodesSyntax.self)
1980 |   }
     :
1983 |   ///   - Parameter node: the node that is being visited
1984 |   ///   - Returns: the rewritten node
1985 |   open func visit(_ node: UnresolvedAsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1986 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedAsExprSyntax.self))
1987 |   }
     :
1990 |   ///   - Parameter node: the node that is being visited
1991 |   ///   - Returns: the rewritten node
1992 |   open func visit(_ node: UnresolvedIsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1993 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedIsExprSyntax.self))
1994 |   }
     :
1997 |   ///   - Parameter node: the node that is being visited
1998 |   ///   - Returns: the rewritten node
1999 |   open func visit(_ node: UnresolvedTernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
2000 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedTernaryExprSyntax.self))
2001 |   }
     :
2004 |   ///   - Parameter node: the node that is being visited
2005 |   ///   - Returns: the rewritten node
2006 |   open func visit(_ node: ValueBindingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2007 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ValueBindingPatternSyntax.self))
2008 |   }
     :
2011 |   ///   - Parameter node: the node that is being visited
2012 |   ///   - Returns: the rewritten node
2013 |   open func visit(_ node: VariableDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
2014 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(VariableDeclSyntax.self))
2015 |   }
     :
2018 |   ///   - Parameter node: the node that is being visited
2019 |   ///   - Returns: the rewritten node
2020 |   open func visit(_ node: VersionComponentListSyntax) -> VersionComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2021 |     return visitChildren(node._syntaxNode).cast(VersionComponentListSyntax.self)
2022 |   }
     :
2025 |   ///   - Parameter node: the node that is being visited
2026 |   ///   - Returns: the rewritten node
2027 |   open func visit(_ node: VersionComponentSyntax) -> VersionComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
2028 |     return visitChildren(node._syntaxNode).cast(VersionComponentSyntax.self)
2029 |   }
     :
2032 |   ///   - Parameter node: the node that is being visited
2033 |   ///   - Returns: the rewritten node
2034 |   open func visit(_ node: VersionTupleSyntax) -> VersionTupleSyntax {
     |             `- note: potential overridden instance method 'visit' here
2035 |     return visitChildren(node._syntaxNode).cast(VersionTupleSyntax.self)
2036 |   }
     :
2039 |   ///   - Parameter node: the node that is being visited
2040 |   ///   - Returns: the rewritten node
2041 |   open func visit(_ node: WhereClauseSyntax) -> WhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2042 |     return visitChildren(node._syntaxNode).cast(WhereClauseSyntax.self)
2043 |   }
     :
2046 |   ///   - Parameter node: the node that is being visited
2047 |   ///   - Returns: the rewritten node
2048 |   open func visit(_ node: WhileStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2049 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(WhileStmtSyntax.self))
2050 |   }
     :
2053 |   ///   - Parameter node: the node that is being visited
2054 |   ///   - Returns: the rewritten node
2055 |   open func visit(_ node: WildcardPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2056 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(WildcardPatternSyntax.self))
2057 |   }
     :
2060 |   ///   - Parameter node: the node that is being visited
2061 |   ///   - Returns: the rewritten node
2062 |   open func visit(_ node: YieldStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2063 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(YieldStmtSyntax.self))
2064 |   }
     :
2067 |   ///   - Parameter node: the node that is being visited
2068 |   ///   - Returns: the rewritten node
2069 |   open func visit(_ node: YieldedExpressionListSyntax) -> YieldedExpressionListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2070 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionListSyntax.self)
2071 |   }
     :
2074 |   ///   - Parameter node: the node that is being visited
2075 |   ///   - Returns: the rewritten node
2076 |   open func visit(_ node: YieldedExpressionSyntax) -> YieldedExpressionSyntax {
     |             `- note: potential overridden instance method 'visit' here
2077 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionSyntax.self)
2078 |   }
     :
2081 |   ///   - Parameter node: the node that is being visited
2082 |   ///   - Returns: the rewritten node
2083 |   open func visit(_ node: YieldedExpressionsClauseSyntax) -> YieldedExpressionsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2084 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionsClauseSyntax.self)
2085 |   }
     :
2088 |   ///   - Parameter node: the node that is being visited
2089 |   ///   - Returns: the rewritten node
2090 |   public func visit(_ node: DeclSyntax) -> DeclSyntax {
     |               `- note: potential overridden instance method 'visit' here
2091 |     var node: Syntax = Syntax(node)
2092 |     dispatchVisit(&node)
     :
2097 |   ///   - Parameter node: the node that is being visited
2098 |   ///   - Returns: the rewritten node
2099 |   public func visit(_ node: ExprSyntax) -> ExprSyntax {
     |               `- note: potential overridden instance method 'visit' here
2100 |     var node: Syntax = Syntax(node)
2101 |     dispatchVisit(&node)
     :
2106 |   ///   - Parameter node: the node that is being visited
2107 |   ///   - Returns: the rewritten node
2108 |   public func visit(_ node: PatternSyntax) -> PatternSyntax {
     |               `- note: potential overridden instance method 'visit' here
2109 |     var node: Syntax = Syntax(node)
2110 |     dispatchVisit(&node)
     :
2115 |   ///   - Parameter node: the node that is being visited
2116 |   ///   - Returns: the rewritten node
2117 |   public func visit(_ node: StmtSyntax) -> StmtSyntax {
     |               `- note: potential overridden instance method 'visit' here
2118 |     var node: Syntax = Syntax(node)
2119 |     dispatchVisit(&node)
     :
2124 |   ///   - Parameter node: the node that is being visited
2125 |   ///   - Returns: the rewritten node
2126 |   public func visit(_ node: TypeSyntax) -> TypeSyntax {
     |               `- note: potential overridden instance method 'visit' here
2127 |     var node: Syntax = Syntax(node)
2128 |     dispatchVisit(&node)

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:742:19: error: method does not override any method from its superclass
740 |     }
741 | 
742 |     override func visit(_ token: TokenSyntax) -> Syntax {
    |                   `- error: method does not override any method from its superclass
743 |         currentIndex += 1
744 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift:50:13: note: potential overridden instance method 'visit' here
  48 |   ///   - Parameter node: the node that is being visited
  49 |   ///   - Returns: the rewritten node
  50 |   open func visit(_ token: TokenSyntax) -> TokenSyntax {
     |             `- note: potential overridden instance method 'visit' here
  51 |     return token
  52 |   }
     :
  77 |   ///   - Returns: the rewritten node
  78 |   @available(*, deprecated, renamed: "rewrite(_:detach:)")
  79 |   public func visit(_ node: Syntax) -> Syntax {
     |               `- note: potential overridden instance method 'visit' here
  80 |     var rewritten = node
  81 |     dispatchVisit(&rewritten)
     :
  92 |   ///   - Parameter node: the node that is being visited
  93 |   ///   - Returns: the rewritten node
  94 |   open func visit(_ node: AccessorBlockSyntax) -> AccessorBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
  95 |     return visitChildren(node._syntaxNode).cast(AccessorBlockSyntax.self)
  96 |   }
     :
  99 |   ///   - Parameter node: the node that is being visited
 100 |   ///   - Returns: the rewritten node
 101 |   open func visit(_ node: AccessorDeclListSyntax) -> AccessorDeclListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 102 |     return visitChildren(node._syntaxNode).cast(AccessorDeclListSyntax.self)
 103 |   }
     :
 106 |   ///   - Parameter node: the node that is being visited
 107 |   ///   - Returns: the rewritten node
 108 |   open func visit(_ node: AccessorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 109 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AccessorDeclSyntax.self))
 110 |   }
     :
 113 |   ///   - Parameter node: the node that is being visited
 114 |   ///   - Returns: the rewritten node
 115 |   open func visit(_ node: AccessorEffectSpecifiersSyntax) -> AccessorEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 116 |     return visitChildren(node._syntaxNode).cast(AccessorEffectSpecifiersSyntax.self)
 117 |   }
     :
 120 |   ///   - Parameter node: the node that is being visited
 121 |   ///   - Returns: the rewritten node
 122 |   open func visit(_ node: AccessorParametersSyntax) -> AccessorParametersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 123 |     return visitChildren(node._syntaxNode).cast(AccessorParametersSyntax.self)
 124 |   }
     :
 127 |   ///   - Parameter node: the node that is being visited
 128 |   ///   - Returns: the rewritten node
 129 |   open func visit(_ node: ActorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 130 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ActorDeclSyntax.self))
 131 |   }
     :
 134 |   ///   - Parameter node: the node that is being visited
 135 |   ///   - Returns: the rewritten node
 136 |   open func visit(_ node: ArrayElementListSyntax) -> ArrayElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 137 |     return visitChildren(node._syntaxNode).cast(ArrayElementListSyntax.self)
 138 |   }
     :
 141 |   ///   - Parameter node: the node that is being visited
 142 |   ///   - Returns: the rewritten node
 143 |   open func visit(_ node: ArrayElementSyntax) -> ArrayElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 144 |     return visitChildren(node._syntaxNode).cast(ArrayElementSyntax.self)
 145 |   }
     :
 148 |   ///   - Parameter node: the node that is being visited
 149 |   ///   - Returns: the rewritten node
 150 |   open func visit(_ node: ArrayExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 151 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrayExprSyntax.self))
 152 |   }
     :
 155 |   ///   - Parameter node: the node that is being visited
 156 |   ///   - Returns: the rewritten node
 157 |   open func visit(_ node: ArrayTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 158 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ArrayTypeSyntax.self))
 159 |   }
     :
 162 |   ///   - Parameter node: the node that is being visited
 163 |   ///   - Returns: the rewritten node
 164 |   open func visit(_ node: ArrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 165 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrowExprSyntax.self))
 166 |   }
     :
 169 |   ///   - Parameter node: the node that is being visited
 170 |   ///   - Returns: the rewritten node
 171 |   open func visit(_ node: AsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 172 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AsExprSyntax.self))
 173 |   }
     :
 176 |   ///   - Parameter node: the node that is being visited
 177 |   ///   - Returns: the rewritten node
 178 |   open func visit(_ node: AssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 179 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AssignmentExprSyntax.self))
 180 |   }
     :
 183 |   ///   - Parameter node: the node that is being visited
 184 |   ///   - Returns: the rewritten node
 185 |   open func visit(_ node: AssociatedTypeDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 186 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AssociatedTypeDeclSyntax.self))
 187 |   }
     :
 190 |   ///   - Parameter node: the node that is being visited
 191 |   ///   - Returns: the rewritten node
 192 |   open func visit(_ node: AttributeListSyntax) -> AttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 193 |     return visitChildren(node._syntaxNode).cast(AttributeListSyntax.self)
 194 |   }
     :
 197 |   ///   - Parameter node: the node that is being visited
 198 |   ///   - Returns: the rewritten node
 199 |   open func visit(_ node: AttributeSyntax) -> AttributeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 200 |     return visitChildren(node._syntaxNode).cast(AttributeSyntax.self)
 201 |   }
     :
 204 |   ///   - Parameter node: the node that is being visited
 205 |   ///   - Returns: the rewritten node
 206 |   open func visit(_ node: AttributedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 207 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(AttributedTypeSyntax.self))
 208 |   }
     :
 211 |   ///   - Parameter node: the node that is being visited
 212 |   ///   - Returns: the rewritten node
 213 |   open func visit(_ node: AvailabilityArgumentListSyntax) -> AvailabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 214 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentListSyntax.self)
 215 |   }
     :
 218 |   ///   - Parameter node: the node that is being visited
 219 |   ///   - Returns: the rewritten node
 220 |   open func visit(_ node: AvailabilityArgumentSyntax) -> AvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 221 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentSyntax.self)
 222 |   }
     :
 225 |   ///   - Parameter node: the node that is being visited
 226 |   ///   - Returns: the rewritten node
 227 |   open func visit(_ node: AvailabilityConditionSyntax) -> AvailabilityConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
 228 |     return visitChildren(node._syntaxNode).cast(AvailabilityConditionSyntax.self)
 229 |   }
     :
 232 |   ///   - Parameter node: the node that is being visited
 233 |   ///   - Returns: the rewritten node
 234 |   open func visit(_ node: AvailabilityLabeledArgumentSyntax) -> AvailabilityLabeledArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 235 |     return visitChildren(node._syntaxNode).cast(AvailabilityLabeledArgumentSyntax.self)
 236 |   }
     :
 239 |   ///   - Parameter node: the node that is being visited
 240 |   ///   - Returns: the rewritten node
 241 |   open func visit(_ node: AwaitExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 242 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AwaitExprSyntax.self))
 243 |   }
     :
 246 |   ///   - Parameter node: the node that is being visited
 247 |   ///   - Returns: the rewritten node
 248 |   open func visit(_ node: BackDeployedAttributeArgumentsSyntax) -> BackDeployedAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 249 |     return visitChildren(node._syntaxNode).cast(BackDeployedAttributeArgumentsSyntax.self)
 250 |   }
     :
 253 |   ///   - Parameter node: the node that is being visited
 254 |   ///   - Returns: the rewritten node
 255 |   open func visit(_ node: BinaryOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 256 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BinaryOperatorExprSyntax.self))
 257 |   }
     :
 260 |   ///   - Parameter node: the node that is being visited
 261 |   ///   - Returns: the rewritten node
 262 |   open func visit(_ node: BooleanLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 263 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BooleanLiteralExprSyntax.self))
 264 |   }
     :
 267 |   ///   - Parameter node: the node that is being visited
 268 |   ///   - Returns: the rewritten node
 269 |   open func visit(_ node: BorrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 270 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BorrowExprSyntax.self))
 271 |   }
     :
 274 |   ///   - Parameter node: the node that is being visited
 275 |   ///   - Returns: the rewritten node
 276 |   open func visit(_ node: BreakStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 277 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(BreakStmtSyntax.self))
 278 |   }
     :
 281 |   ///   - Parameter node: the node that is being visited
 282 |   ///   - Returns: the rewritten node
 283 |   open func visit(_ node: _CanImportExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 284 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportExprSyntax.self))
 285 |   }
     :
 288 |   ///   - Parameter node: the node that is being visited
 289 |   ///   - Returns: the rewritten node
 290 |   open func visit(_ node: _CanImportVersionInfoSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 291 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportVersionInfoSyntax.self))
 292 |   }
     :
 295 |   ///   - Parameter node: the node that is being visited
 296 |   ///   - Returns: the rewritten node
 297 |   open func visit(_ node: CatchClauseListSyntax) -> CatchClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 298 |     return visitChildren(node._syntaxNode).cast(CatchClauseListSyntax.self)
 299 |   }
     :
 302 |   ///   - Parameter node: the node that is being visited
 303 |   ///   - Returns: the rewritten node
 304 |   open func visit(_ node: CatchClauseSyntax) -> CatchClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 305 |     return visitChildren(node._syntaxNode).cast(CatchClauseSyntax.self)
 306 |   }
     :
 309 |   ///   - Parameter node: the node that is being visited
 310 |   ///   - Returns: the rewritten node
 311 |   open func visit(_ node: CatchItemListSyntax) -> CatchItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 312 |     return visitChildren(node._syntaxNode).cast(CatchItemListSyntax.self)
 313 |   }
     :
 316 |   ///   - Parameter node: the node that is being visited
 317 |   ///   - Returns: the rewritten node
 318 |   open func visit(_ node: CatchItemSyntax) -> CatchItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 319 |     return visitChildren(node._syntaxNode).cast(CatchItemSyntax.self)
 320 |   }
     :
 323 |   ///   - Parameter node: the node that is being visited
 324 |   ///   - Returns: the rewritten node
 325 |   open func visit(_ node: ClassDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 326 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ClassDeclSyntax.self))
 327 |   }
     :
 330 |   ///   - Parameter node: the node that is being visited
 331 |   ///   - Returns: the rewritten node
 332 |   open func visit(_ node: ClassRestrictionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 333 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ClassRestrictionTypeSyntax.self))
 334 |   }
     :
 337 |   ///   - Parameter node: the node that is being visited
 338 |   ///   - Returns: the rewritten node
 339 |   open func visit(_ node: ClosureCaptureClauseSyntax) -> ClosureCaptureClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 340 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureClauseSyntax.self)
 341 |   }
     :
 344 |   ///   - Parameter node: the node that is being visited
 345 |   ///   - Returns: the rewritten node
 346 |   open func visit(_ node: ClosureCaptureListSyntax) -> ClosureCaptureListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 347 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureListSyntax.self)
 348 |   }
     :
 351 |   ///   - Parameter node: the node that is being visited
 352 |   ///   - Returns: the rewritten node
 353 |   open func visit(_ node: ClosureCaptureSpecifierSyntax) -> ClosureCaptureSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 354 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSpecifierSyntax.self)
 355 |   }
     :
 358 |   ///   - Parameter node: the node that is being visited
 359 |   ///   - Returns: the rewritten node
 360 |   open func visit(_ node: ClosureCaptureSyntax) -> ClosureCaptureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 361 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSyntax.self)
 362 |   }
     :
 365 |   ///   - Parameter node: the node that is being visited
 366 |   ///   - Returns: the rewritten node
 367 |   open func visit(_ node: ClosureExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 368 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ClosureExprSyntax.self))
 369 |   }
     :
 372 |   ///   - Parameter node: the node that is being visited
 373 |   ///   - Returns: the rewritten node
 374 |   open func visit(_ node: ClosureParameterClauseSyntax) -> ClosureParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 375 |     return visitChildren(node._syntaxNode).cast(ClosureParameterClauseSyntax.self)
 376 |   }
     :
 379 |   ///   - Parameter node: the node that is being visited
 380 |   ///   - Returns: the rewritten node
 381 |   open func visit(_ node: ClosureParameterListSyntax) -> ClosureParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 382 |     return visitChildren(node._syntaxNode).cast(ClosureParameterListSyntax.self)
 383 |   }
     :
 386 |   ///   - Parameter node: the node that is being visited
 387 |   ///   - Returns: the rewritten node
 388 |   open func visit(_ node: ClosureParameterSyntax) -> ClosureParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 389 |     return visitChildren(node._syntaxNode).cast(ClosureParameterSyntax.self)
 390 |   }
     :
 393 |   ///   - Parameter node: the node that is being visited
 394 |   ///   - Returns: the rewritten node
 395 |   open func visit(_ node: ClosureShorthandParameterListSyntax) -> ClosureShorthandParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 396 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterListSyntax.self)
 397 |   }
     :
 400 |   ///   - Parameter node: the node that is being visited
 401 |   ///   - Returns: the rewritten node
 402 |   open func visit(_ node: ClosureShorthandParameterSyntax) -> ClosureShorthandParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 403 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterSyntax.self)
 404 |   }
     :
 407 |   ///   - Parameter node: the node that is being visited
 408 |   ///   - Returns: the rewritten node
 409 |   open func visit(_ node: ClosureSignatureSyntax) -> ClosureSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 410 |     return visitChildren(node._syntaxNode).cast(ClosureSignatureSyntax.self)
 411 |   }
     :
 414 |   ///   - Parameter node: the node that is being visited
 415 |   ///   - Returns: the rewritten node
 416 |   open func visit(_ node: CodeBlockItemListSyntax) -> CodeBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 417 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemListSyntax.self)
 418 |   }
     :
 421 |   ///   - Parameter node: the node that is being visited
 422 |   ///   - Returns: the rewritten node
 423 |   open func visit(_ node: CodeBlockItemSyntax) -> CodeBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 424 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemSyntax.self)
 425 |   }
     :
 428 |   ///   - Parameter node: the node that is being visited
 429 |   ///   - Returns: the rewritten node
 430 |   open func visit(_ node: CodeBlockSyntax) -> CodeBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
 431 |     return visitChildren(node._syntaxNode).cast(CodeBlockSyntax.self)
 432 |   }
     :
 435 |   ///   - Parameter node: the node that is being visited
 436 |   ///   - Returns: the rewritten node
 437 |   open func visit(_ node: CompositionTypeElementListSyntax) -> CompositionTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 438 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementListSyntax.self)
 439 |   }
     :
 442 |   ///   - Parameter node: the node that is being visited
 443 |   ///   - Returns: the rewritten node
 444 |   open func visit(_ node: CompositionTypeElementSyntax) -> CompositionTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 445 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementSyntax.self)
 446 |   }
     :
 449 |   ///   - Parameter node: the node that is being visited
 450 |   ///   - Returns: the rewritten node
 451 |   open func visit(_ node: CompositionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 452 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(CompositionTypeSyntax.self))
 453 |   }
     :
 456 |   ///   - Parameter node: the node that is being visited
 457 |   ///   - Returns: the rewritten node
 458 |   open func visit(_ node: ConditionElementListSyntax) -> ConditionElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 459 |     return visitChildren(node._syntaxNode).cast(ConditionElementListSyntax.self)
 460 |   }
     :
 463 |   ///   - Parameter node: the node that is being visited
 464 |   ///   - Returns: the rewritten node
 465 |   open func visit(_ node: ConditionElementSyntax) -> ConditionElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 466 |     return visitChildren(node._syntaxNode).cast(ConditionElementSyntax.self)
 467 |   }
     :
 470 |   ///   - Parameter node: the node that is being visited
 471 |   ///   - Returns: the rewritten node
 472 |   open func visit(_ node: ConformanceRequirementSyntax) -> ConformanceRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 473 |     return visitChildren(node._syntaxNode).cast(ConformanceRequirementSyntax.self)
 474 |   }
     :
 477 |   ///   - Parameter node: the node that is being visited
 478 |   ///   - Returns: the rewritten node
 479 |   open func visit(_ node: ConsumeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 480 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ConsumeExprSyntax.self))
 481 |   }
     :
 484 |   ///   - Parameter node: the node that is being visited
 485 |   ///   - Returns: the rewritten node
 486 |   open func visit(_ node: ContinueStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 487 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ContinueStmtSyntax.self))
 488 |   }
     :
 491 |   ///   - Parameter node: the node that is being visited
 492 |   ///   - Returns: the rewritten node
 493 |   open func visit(_ node: ConventionAttributeArgumentsSyntax) -> ConventionAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 494 |     return visitChildren(node._syntaxNode).cast(ConventionAttributeArgumentsSyntax.self)
 495 |   }
     :
 498 |   ///   - Parameter node: the node that is being visited
 499 |   ///   - Returns: the rewritten node
 500 |   open func visit(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) -> ConventionWitnessMethodAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 501 |     return visitChildren(node._syntaxNode).cast(ConventionWitnessMethodAttributeArgumentsSyntax.self)
 502 |   }
     :
 505 |   ///   - Parameter node: the node that is being visited
 506 |   ///   - Returns: the rewritten node
 507 |   open func visit(_ node: CopyExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 508 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(CopyExprSyntax.self))
 509 |   }
     :
 512 |   ///   - Parameter node: the node that is being visited
 513 |   ///   - Returns: the rewritten node
 514 |   open func visit(_ node: DeclModifierDetailSyntax) -> DeclModifierDetailSyntax {
     |             `- note: potential overridden instance method 'visit' here
 515 |     return visitChildren(node._syntaxNode).cast(DeclModifierDetailSyntax.self)
 516 |   }
     :
 519 |   ///   - Parameter node: the node that is being visited
 520 |   ///   - Returns: the rewritten node
 521 |   open func visit(_ node: DeclModifierListSyntax) -> DeclModifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 522 |     return visitChildren(node._syntaxNode).cast(DeclModifierListSyntax.self)
 523 |   }
     :
 526 |   ///   - Parameter node: the node that is being visited
 527 |   ///   - Returns: the rewritten node
 528 |   open func visit(_ node: DeclModifierSyntax) -> DeclModifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 529 |     return visitChildren(node._syntaxNode).cast(DeclModifierSyntax.self)
 530 |   }
     :
 533 |   ///   - Parameter node: the node that is being visited
 534 |   ///   - Returns: the rewritten node
 535 |   open func visit(_ node: DeclNameArgumentListSyntax) -> DeclNameArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 536 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentListSyntax.self)
 537 |   }
     :
 540 |   ///   - Parameter node: the node that is being visited
 541 |   ///   - Returns: the rewritten node
 542 |   open func visit(_ node: DeclNameArgumentSyntax) -> DeclNameArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 543 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentSyntax.self)
 544 |   }
     :
 547 |   ///   - Parameter node: the node that is being visited
 548 |   ///   - Returns: the rewritten node
 549 |   open func visit(_ node: DeclNameArgumentsSyntax) -> DeclNameArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 550 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentsSyntax.self)
 551 |   }
     :
 554 |   ///   - Parameter node: the node that is being visited
 555 |   ///   - Returns: the rewritten node
 556 |   open func visit(_ node: DeclReferenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 557 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DeclReferenceExprSyntax.self))
 558 |   }
     :
 561 |   ///   - Parameter node: the node that is being visited
 562 |   ///   - Returns: the rewritten node
 563 |   open func visit(_ node: DeferStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 564 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DeferStmtSyntax.self))
 565 |   }
     :
 568 |   ///   - Parameter node: the node that is being visited
 569 |   ///   - Returns: the rewritten node
 570 |   open func visit(_ node: DeinitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 571 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(DeinitializerDeclSyntax.self))
 572 |   }
     :
 575 |   ///   - Parameter node: the node that is being visited
 576 |   ///   - Returns: the rewritten node
 577 |   open func visit(_ node: DeinitializerEffectSpecifiersSyntax) -> DeinitializerEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 578 |     return visitChildren(node._syntaxNode).cast(DeinitializerEffectSpecifiersSyntax.self)
 579 |   }
     :
 582 |   ///   - Parameter node: the node that is being visited
 583 |   ///   - Returns: the rewritten node
 584 |   open func visit(_ node: DerivativeAttributeArgumentsSyntax) -> DerivativeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 585 |     return visitChildren(node._syntaxNode).cast(DerivativeAttributeArgumentsSyntax.self)
 586 |   }
     :
 589 |   ///   - Parameter node: the node that is being visited
 590 |   ///   - Returns: the rewritten node
 591 |   open func visit(_ node: DesignatedTypeListSyntax) -> DesignatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 592 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeListSyntax.self)
 593 |   }
     :
 596 |   ///   - Parameter node: the node that is being visited
 597 |   ///   - Returns: the rewritten node
 598 |   open func visit(_ node: DesignatedTypeSyntax) -> DesignatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 599 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeSyntax.self)
 600 |   }
     :
 603 |   ///   - Parameter node: the node that is being visited
 604 |   ///   - Returns: the rewritten node
 605 |   open func visit(_ node: DictionaryElementListSyntax) -> DictionaryElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 606 |     return visitChildren(node._syntaxNode).cast(DictionaryElementListSyntax.self)
 607 |   }
     :
 610 |   ///   - Parameter node: the node that is being visited
 611 |   ///   - Returns: the rewritten node
 612 |   open func visit(_ node: DictionaryElementSyntax) -> DictionaryElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 613 |     return visitChildren(node._syntaxNode).cast(DictionaryElementSyntax.self)
 614 |   }
     :
 617 |   ///   - Parameter node: the node that is being visited
 618 |   ///   - Returns: the rewritten node
 619 |   open func visit(_ node: DictionaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 620 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DictionaryExprSyntax.self))
 621 |   }
     :
 624 |   ///   - Parameter node: the node that is being visited
 625 |   ///   - Returns: the rewritten node
 626 |   open func visit(_ node: DictionaryTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 627 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(DictionaryTypeSyntax.self))
 628 |   }
     :
 631 |   ///   - Parameter node: the node that is being visited
 632 |   ///   - Returns: the rewritten node
 633 |   open func visit(_ node: DifferentiabilityArgumentListSyntax) -> DifferentiabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 634 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentListSyntax.self)
 635 |   }
     :
 638 |   ///   - Parameter node: the node that is being visited
 639 |   ///   - Returns: the rewritten node
 640 |   open func visit(_ node: DifferentiabilityArgumentSyntax) -> DifferentiabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 641 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentSyntax.self)
 642 |   }
     :
 645 |   ///   - Parameter node: the node that is being visited
 646 |   ///   - Returns: the rewritten node
 647 |   open func visit(_ node: DifferentiabilityArgumentsSyntax) -> DifferentiabilityArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 648 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentsSyntax.self)
 649 |   }
     :
 652 |   ///   - Parameter node: the node that is being visited
 653 |   ///   - Returns: the rewritten node
 654 |   open func visit(_ node: DifferentiabilityWithRespectToArgumentSyntax) -> DifferentiabilityWithRespectToArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 655 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityWithRespectToArgumentSyntax.self)
 656 |   }
     :
 659 |   ///   - Parameter node: the node that is being visited
 660 |   ///   - Returns: the rewritten node
 661 |   open func visit(_ node: DifferentiableAttributeArgumentsSyntax) -> DifferentiableAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 662 |     return visitChildren(node._syntaxNode).cast(DifferentiableAttributeArgumentsSyntax.self)
 663 |   }
     :
 666 |   ///   - Parameter node: the node that is being visited
 667 |   ///   - Returns: the rewritten node
 668 |   open func visit(_ node: DiscardAssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 669 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DiscardAssignmentExprSyntax.self))
 670 |   }
     :
 673 |   ///   - Parameter node: the node that is being visited
 674 |   ///   - Returns: the rewritten node
 675 |   open func visit(_ node: DiscardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 676 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DiscardStmtSyntax.self))
 677 |   }
     :
 690 |   ///   - Parameter node: the node that is being visited
 691 |   ///   - Returns: the rewritten node
 692 |   open func visit(_ node: DoStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 693 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DoStmtSyntax.self))
 694 |   }
     :
 697 |   ///   - Parameter node: the node that is being visited
 698 |   ///   - Returns: the rewritten node
 699 |   open func visit(_ node: DocumentationAttributeArgumentListSyntax) -> DocumentationAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 700 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentListSyntax.self)
 701 |   }
     :
 704 |   ///   - Parameter node: the node that is being visited
 705 |   ///   - Returns: the rewritten node
 706 |   open func visit(_ node: DocumentationAttributeArgumentSyntax) -> DocumentationAttributeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 707 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentSyntax.self)
 708 |   }
     :
 711 |   ///   - Parameter node: the node that is being visited
 712 |   ///   - Returns: the rewritten node
 713 |   open func visit(_ node: DynamicReplacementAttributeArgumentsSyntax) -> DynamicReplacementAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 714 |     return visitChildren(node._syntaxNode).cast(DynamicReplacementAttributeArgumentsSyntax.self)
 715 |   }
     :
 718 |   ///   - Parameter node: the node that is being visited
 719 |   ///   - Returns: the rewritten node
 720 |   open func visit(_ node: EditorPlaceholderDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 721 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderDeclSyntax.self))
 722 |   }
     :
 725 |   ///   - Parameter node: the node that is being visited
 726 |   ///   - Returns: the rewritten node
 727 |   open func visit(_ node: EditorPlaceholderExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 728 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderExprSyntax.self))
 729 |   }
     :
 732 |   ///   - Parameter node: the node that is being visited
 733 |   ///   - Returns: the rewritten node
 734 |   open func visit(_ node: EffectsAttributeArgumentListSyntax) -> EffectsAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 735 |     return visitChildren(node._syntaxNode).cast(EffectsAttributeArgumentListSyntax.self)
 736 |   }
     :
 739 |   ///   - Parameter node: the node that is being visited
 740 |   ///   - Returns: the rewritten node
 741 |   open func visit(_ node: EnumCaseDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 742 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumCaseDeclSyntax.self))
 743 |   }
     :
 746 |   ///   - Parameter node: the node that is being visited
 747 |   ///   - Returns: the rewritten node
 748 |   open func visit(_ node: EnumCaseElementListSyntax) -> EnumCaseElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 749 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementListSyntax.self)
 750 |   }
     :
 753 |   ///   - Parameter node: the node that is being visited
 754 |   ///   - Returns: the rewritten node
 755 |   open func visit(_ node: EnumCaseElementSyntax) -> EnumCaseElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 756 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementSyntax.self)
 757 |   }
     :
 760 |   ///   - Parameter node: the node that is being visited
 761 |   ///   - Returns: the rewritten node
 762 |   open func visit(_ node: EnumCaseParameterClauseSyntax) -> EnumCaseParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 763 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterClauseSyntax.self)
 764 |   }
     :
 767 |   ///   - Parameter node: the node that is being visited
 768 |   ///   - Returns: the rewritten node
 769 |   open func visit(_ node: EnumCaseParameterListSyntax) -> EnumCaseParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 770 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterListSyntax.self)
 771 |   }
     :
 774 |   ///   - Parameter node: the node that is being visited
 775 |   ///   - Returns: the rewritten node
 776 |   open func visit(_ node: EnumCaseParameterSyntax) -> EnumCaseParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 777 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterSyntax.self)
 778 |   }
     :
 781 |   ///   - Parameter node: the node that is being visited
 782 |   ///   - Returns: the rewritten node
 783 |   open func visit(_ node: EnumDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 784 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumDeclSyntax.self))
 785 |   }
     :
 788 |   ///   - Parameter node: the node that is being visited
 789 |   ///   - Returns: the rewritten node
 790 |   open func visit(_ node: ExposeAttributeArgumentsSyntax) -> ExposeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 791 |     return visitChildren(node._syntaxNode).cast(ExposeAttributeArgumentsSyntax.self)
 792 |   }
     :
 795 |   ///   - Parameter node: the node that is being visited
 796 |   ///   - Returns: the rewritten node
 797 |   open func visit(_ node: ExprListSyntax) -> ExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 798 |     return visitChildren(node._syntaxNode).cast(ExprListSyntax.self)
 799 |   }
     :
 802 |   ///   - Parameter node: the node that is being visited
 803 |   ///   - Returns: the rewritten node
 804 |   open func visit(_ node: ExpressionPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 805 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ExpressionPatternSyntax.self))
 806 |   }
     :
 809 |   ///   - Parameter node: the node that is being visited
 810 |   ///   - Returns: the rewritten node
 811 |   open func visit(_ node: ExpressionSegmentSyntax) -> ExpressionSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 812 |     return visitChildren(node._syntaxNode).cast(ExpressionSegmentSyntax.self)
 813 |   }
     :
 816 |   ///   - Parameter node: the node that is being visited
 817 |   ///   - Returns: the rewritten node
 818 |   open func visit(_ node: ExpressionStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 819 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ExpressionStmtSyntax.self))
 820 |   }
     :
 823 |   ///   - Parameter node: the node that is being visited
 824 |   ///   - Returns: the rewritten node
 825 |   open func visit(_ node: ExtensionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 826 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ExtensionDeclSyntax.self))
 827 |   }
     :
 830 |   ///   - Parameter node: the node that is being visited
 831 |   ///   - Returns: the rewritten node
 832 |   open func visit(_ node: FallThroughStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 833 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(FallThroughStmtSyntax.self))
 834 |   }
     :
 837 |   ///   - Parameter node: the node that is being visited
 838 |   ///   - Returns: the rewritten node
 839 |   open func visit(_ node: FloatLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 840 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FloatLiteralExprSyntax.self))
 841 |   }
     :
 844 |   ///   - Parameter node: the node that is being visited
 845 |   ///   - Returns: the rewritten node
 846 |   open func visit(_ node: ForStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 847 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ForStmtSyntax.self))
 848 |   }
     :
 851 |   ///   - Parameter node: the node that is being visited
 852 |   ///   - Returns: the rewritten node
 853 |   open func visit(_ node: ForceUnwrapExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 854 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ForceUnwrapExprSyntax.self))
 855 |   }
     :
 858 |   ///   - Parameter node: the node that is being visited
 859 |   ///   - Returns: the rewritten node
 860 |   open func visit(_ node: FunctionCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 861 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FunctionCallExprSyntax.self))
 862 |   }
     :
 865 |   ///   - Parameter node: the node that is being visited
 866 |   ///   - Returns: the rewritten node
 867 |   open func visit(_ node: FunctionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 868 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(FunctionDeclSyntax.self))
 869 |   }
     :
 872 |   ///   - Parameter node: the node that is being visited
 873 |   ///   - Returns: the rewritten node
 874 |   open func visit(_ node: FunctionEffectSpecifiersSyntax) -> FunctionEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 875 |     return visitChildren(node._syntaxNode).cast(FunctionEffectSpecifiersSyntax.self)
 876 |   }
     :
 879 |   ///   - Parameter node: the node that is being visited
 880 |   ///   - Returns: the rewritten node
 881 |   open func visit(_ node: FunctionParameterClauseSyntax) -> FunctionParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 882 |     return visitChildren(node._syntaxNode).cast(FunctionParameterClauseSyntax.self)
 883 |   }
     :
 886 |   ///   - Parameter node: the node that is being visited
 887 |   ///   - Returns: the rewritten node
 888 |   open func visit(_ node: FunctionParameterListSyntax) -> FunctionParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 889 |     return visitChildren(node._syntaxNode).cast(FunctionParameterListSyntax.self)
 890 |   }
     :
 893 |   ///   - Parameter node: the node that is being visited
 894 |   ///   - Returns: the rewritten node
 895 |   open func visit(_ node: FunctionParameterSyntax) -> FunctionParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 896 |     return visitChildren(node._syntaxNode).cast(FunctionParameterSyntax.self)
 897 |   }
     :
 900 |   ///   - Parameter node: the node that is being visited
 901 |   ///   - Returns: the rewritten node
 902 |   open func visit(_ node: FunctionSignatureSyntax) -> FunctionSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 903 |     return visitChildren(node._syntaxNode).cast(FunctionSignatureSyntax.self)
 904 |   }
     :
 907 |   ///   - Parameter node: the node that is being visited
 908 |   ///   - Returns: the rewritten node
 909 |   open func visit(_ node: FunctionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 910 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(FunctionTypeSyntax.self))
 911 |   }
     :
 914 |   ///   - Parameter node: the node that is being visited
 915 |   ///   - Returns: the rewritten node
 916 |   open func visit(_ node: GenericArgumentClauseSyntax) -> GenericArgumentClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 917 |     return visitChildren(node._syntaxNode).cast(GenericArgumentClauseSyntax.self)
 918 |   }
     :
 921 |   ///   - Parameter node: the node that is being visited
 922 |   ///   - Returns: the rewritten node
 923 |   open func visit(_ node: GenericArgumentListSyntax) -> GenericArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 924 |     return visitChildren(node._syntaxNode).cast(GenericArgumentListSyntax.self)
 925 |   }
     :
 928 |   ///   - Parameter node: the node that is being visited
 929 |   ///   - Returns: the rewritten node
 930 |   open func visit(_ node: GenericArgumentSyntax) -> GenericArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 931 |     return visitChildren(node._syntaxNode).cast(GenericArgumentSyntax.self)
 932 |   }
     :
 935 |   ///   - Parameter node: the node that is being visited
 936 |   ///   - Returns: the rewritten node
 937 |   open func visit(_ node: GenericParameterClauseSyntax) -> GenericParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 938 |     return visitChildren(node._syntaxNode).cast(GenericParameterClauseSyntax.self)
 939 |   }
     :
 942 |   ///   - Parameter node: the node that is being visited
 943 |   ///   - Returns: the rewritten node
 944 |   open func visit(_ node: GenericParameterListSyntax) -> GenericParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 945 |     return visitChildren(node._syntaxNode).cast(GenericParameterListSyntax.self)
 946 |   }
     :
 949 |   ///   - Parameter node: the node that is being visited
 950 |   ///   - Returns: the rewritten node
 951 |   open func visit(_ node: GenericParameterSyntax) -> GenericParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 952 |     return visitChildren(node._syntaxNode).cast(GenericParameterSyntax.self)
 953 |   }
     :
 956 |   ///   - Parameter node: the node that is being visited
 957 |   ///   - Returns: the rewritten node
 958 |   open func visit(_ node: GenericRequirementListSyntax) -> GenericRequirementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 959 |     return visitChildren(node._syntaxNode).cast(GenericRequirementListSyntax.self)
 960 |   }
     :
 963 |   ///   - Parameter node: the node that is being visited
 964 |   ///   - Returns: the rewritten node
 965 |   open func visit(_ node: GenericRequirementSyntax) -> GenericRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 966 |     return visitChildren(node._syntaxNode).cast(GenericRequirementSyntax.self)
 967 |   }
     :
 970 |   ///   - Parameter node: the node that is being visited
 971 |   ///   - Returns: the rewritten node
 972 |   open func visit(_ node: GenericSpecializationExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 973 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(GenericSpecializationExprSyntax.self))
 974 |   }
     :
 977 |   ///   - Parameter node: the node that is being visited
 978 |   ///   - Returns: the rewritten node
 979 |   open func visit(_ node: GenericWhereClauseSyntax) -> GenericWhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 980 |     return visitChildren(node._syntaxNode).cast(GenericWhereClauseSyntax.self)
 981 |   }
     :
 984 |   ///   - Parameter node: the node that is being visited
 985 |   ///   - Returns: the rewritten node
 986 |   open func visit(_ node: GuardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 987 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(GuardStmtSyntax.self))
 988 |   }
     :
 991 |   ///   - Parameter node: the node that is being visited
 992 |   ///   - Returns: the rewritten node
 993 |   open func visit(_ node: IdentifierPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 994 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IdentifierPatternSyntax.self))
 995 |   }
     :
 998 |   ///   - Parameter node: the node that is being visited
 999 |   ///   - Returns: the rewritten node
1000 |   open func visit(_ node: IdentifierTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1001 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(IdentifierTypeSyntax.self))
1002 |   }
     :
1005 |   ///   - Parameter node: the node that is being visited
1006 |   ///   - Returns: the rewritten node
1007 |   open func visit(_ node: IfConfigClauseListSyntax) -> IfConfigClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1008 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseListSyntax.self)
1009 |   }
     :
1012 |   ///   - Parameter node: the node that is being visited
1013 |   ///   - Returns: the rewritten node
1014 |   open func visit(_ node: IfConfigClauseSyntax) -> IfConfigClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1015 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseSyntax.self)
1016 |   }
     :
1019 |   ///   - Parameter node: the node that is being visited
1020 |   ///   - Returns: the rewritten node
1021 |   open func visit(_ node: IfConfigDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1022 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(IfConfigDeclSyntax.self))
1023 |   }
     :
1026 |   ///   - Parameter node: the node that is being visited
1027 |   ///   - Returns: the rewritten node
1028 |   open func visit(_ node: IfExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1029 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IfExprSyntax.self))
1030 |   }
     :
1033 |   ///   - Parameter node: the node that is being visited
1034 |   ///   - Returns: the rewritten node
1035 |   open func visit(_ node: ImplementsAttributeArgumentsSyntax) -> ImplementsAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1036 |     return visitChildren(node._syntaxNode).cast(ImplementsAttributeArgumentsSyntax.self)
1037 |   }
     :
1040 |   ///   - Parameter node: the node that is being visited
1041 |   ///   - Returns: the rewritten node
1042 |   open func visit(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1043 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ImplicitlyUnwrappedOptionalTypeSyntax.self))
1044 |   }
     :
1047 |   ///   - Parameter node: the node that is being visited
1048 |   ///   - Returns: the rewritten node
1049 |   open func visit(_ node: ImportDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1050 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ImportDeclSyntax.self))
1051 |   }
     :
1054 |   ///   - Parameter node: the node that is being visited
1055 |   ///   - Returns: the rewritten node
1056 |   open func visit(_ node: ImportPathComponentListSyntax) -> ImportPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1057 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentListSyntax.self)
1058 |   }
     :
1061 |   ///   - Parameter node: the node that is being visited
1062 |   ///   - Returns: the rewritten node
1063 |   open func visit(_ node: ImportPathComponentSyntax) -> ImportPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1064 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentSyntax.self)
1065 |   }
     :
1068 |   ///   - Parameter node: the node that is being visited
1069 |   ///   - Returns: the rewritten node
1070 |   open func visit(_ node: InOutExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1071 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InOutExprSyntax.self))
1072 |   }
     :
1075 |   ///   - Parameter node: the node that is being visited
1076 |   ///   - Returns: the rewritten node
1077 |   open func visit(_ node: InfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1078 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InfixOperatorExprSyntax.self))
1079 |   }
     :
1082 |   ///   - Parameter node: the node that is being visited
1083 |   ///   - Returns: the rewritten node
1084 |   open func visit(_ node: InheritanceClauseSyntax) -> InheritanceClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1085 |     return visitChildren(node._syntaxNode).cast(InheritanceClauseSyntax.self)
1086 |   }
     :
1089 |   ///   - Parameter node: the node that is being visited
1090 |   ///   - Returns: the rewritten node
1091 |   open func visit(_ node: InheritedTypeListSyntax) -> InheritedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1092 |     return visitChildren(node._syntaxNode).cast(InheritedTypeListSyntax.self)
1093 |   }
     :
1096 |   ///   - Parameter node: the node that is being visited
1097 |   ///   - Returns: the rewritten node
1098 |   open func visit(_ node: InheritedTypeSyntax) -> InheritedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1099 |     return visitChildren(node._syntaxNode).cast(InheritedTypeSyntax.self)
1100 |   }
     :
1103 |   ///   - Parameter node: the node that is being visited
1104 |   ///   - Returns: the rewritten node
1105 |   open func visit(_ node: InitializerClauseSyntax) -> InitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1106 |     return visitChildren(node._syntaxNode).cast(InitializerClauseSyntax.self)
1107 |   }
     :
1110 |   ///   - Parameter node: the node that is being visited
1111 |   ///   - Returns: the rewritten node
1112 |   open func visit(_ node: InitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1113 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(InitializerDeclSyntax.self))
1114 |   }
     :
1117 |   ///   - Parameter node: the node that is being visited
1118 |   ///   - Returns: the rewritten node
1119 |   open func visit(_ node: IntegerLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1120 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IntegerLiteralExprSyntax.self))
1121 |   }
     :
1124 |   ///   - Parameter node: the node that is being visited
1125 |   ///   - Returns: the rewritten node
1126 |   open func visit(_ node: IsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1127 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IsExprSyntax.self))
1128 |   }
     :
1131 |   ///   - Parameter node: the node that is being visited
1132 |   ///   - Returns: the rewritten node
1133 |   open func visit(_ node: IsTypePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1134 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IsTypePatternSyntax.self))
1135 |   }
     :
1138 |   ///   - Parameter node: the node that is being visited
1139 |   ///   - Returns: the rewritten node
1140 |   open func visit(_ node: KeyPathComponentListSyntax) -> KeyPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1141 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentListSyntax.self)
1142 |   }
     :
1145 |   ///   - Parameter node: the node that is being visited
1146 |   ///   - Returns: the rewritten node
1147 |   open func visit(_ node: KeyPathComponentSyntax) -> KeyPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1148 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentSyntax.self)
1149 |   }
     :
1152 |   ///   - Parameter node: the node that is being visited
1153 |   ///   - Returns: the rewritten node
1154 |   open func visit(_ node: KeyPathExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1155 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(KeyPathExprSyntax.self))
1156 |   }
     :
1159 |   ///   - Parameter node: the node that is being visited
1160 |   ///   - Returns: the rewritten node
1161 |   open func visit(_ node: KeyPathOptionalComponentSyntax) -> KeyPathOptionalComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1162 |     return visitChildren(node._syntaxNode).cast(KeyPathOptionalComponentSyntax.self)
1163 |   }
     :
1166 |   ///   - Parameter node: the node that is being visited
1167 |   ///   - Returns: the rewritten node
1168 |   open func visit(_ node: KeyPathPropertyComponentSyntax) -> KeyPathPropertyComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1169 |     return visitChildren(node._syntaxNode).cast(KeyPathPropertyComponentSyntax.self)
1170 |   }
     :
1173 |   ///   - Parameter node: the node that is being visited
1174 |   ///   - Returns: the rewritten node
1175 |   open func visit(_ node: KeyPathSubscriptComponentSyntax) -> KeyPathSubscriptComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1176 |     return visitChildren(node._syntaxNode).cast(KeyPathSubscriptComponentSyntax.self)
1177 |   }
     :
1180 |   ///   - Parameter node: the node that is being visited
1181 |   ///   - Returns: the rewritten node
1182 |   open func visit(_ node: LabeledExprListSyntax) -> LabeledExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1183 |     return visitChildren(node._syntaxNode).cast(LabeledExprListSyntax.self)
1184 |   }
     :
1187 |   ///   - Parameter node: the node that is being visited
1188 |   ///   - Returns: the rewritten node
1189 |   open func visit(_ node: LabeledExprSyntax) -> LabeledExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1190 |     return visitChildren(node._syntaxNode).cast(LabeledExprSyntax.self)
1191 |   }
     :
1194 |   ///   - Parameter node: the node that is being visited
1195 |   ///   - Returns: the rewritten node
1196 |   open func visit(_ node: LabeledSpecializeArgumentSyntax) -> LabeledSpecializeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1197 |     return visitChildren(node._syntaxNode).cast(LabeledSpecializeArgumentSyntax.self)
1198 |   }
     :
1201 |   ///   - Parameter node: the node that is being visited
1202 |   ///   - Returns: the rewritten node
1203 |   open func visit(_ node: LabeledStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1204 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(LabeledStmtSyntax.self))
1205 |   }
     :
1208 |   ///   - Parameter node: the node that is being visited
1209 |   ///   - Returns: the rewritten node
1210 |   open func visit(_ node: LayoutRequirementSyntax) -> LayoutRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1211 |     return visitChildren(node._syntaxNode).cast(LayoutRequirementSyntax.self)
1212 |   }
     :
1245 |   ///   - Parameter node: the node that is being visited
1246 |   ///   - Returns: the rewritten node
1247 |   open func visit(_ node: MacroDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1248 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroDeclSyntax.self))
1249 |   }
     :
1252 |   ///   - Parameter node: the node that is being visited
1253 |   ///   - Returns: the rewritten node
1254 |   open func visit(_ node: MacroExpansionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1255 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionDeclSyntax.self))
1256 |   }
     :
1259 |   ///   - Parameter node: the node that is being visited
1260 |   ///   - Returns: the rewritten node
1261 |   open func visit(_ node: MacroExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1262 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionExprSyntax.self))
1263 |   }
     :
1266 |   ///   - Parameter node: the node that is being visited
1267 |   ///   - Returns: the rewritten node
1268 |   open func visit(_ node: MatchingPatternConditionSyntax) -> MatchingPatternConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1269 |     return visitChildren(node._syntaxNode).cast(MatchingPatternConditionSyntax.self)
1270 |   }
     :
1273 |   ///   - Parameter node: the node that is being visited
1274 |   ///   - Returns: the rewritten node
1275 |   open func visit(_ node: MemberAccessExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1276 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MemberAccessExprSyntax.self))
1277 |   }
     :
1280 |   ///   - Parameter node: the node that is being visited
1281 |   ///   - Returns: the rewritten node
1282 |   open func visit(_ node: MemberBlockItemListSyntax) -> MemberBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1283 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemListSyntax.self)
1284 |   }
     :
1287 |   ///   - Parameter node: the node that is being visited
1288 |   ///   - Returns: the rewritten node
1289 |   open func visit(_ node: MemberBlockItemSyntax) -> MemberBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1290 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemSyntax.self)
1291 |   }
     :
1294 |   ///   - Parameter node: the node that is being visited
1295 |   ///   - Returns: the rewritten node
1296 |   open func visit(_ node: MemberBlockSyntax) -> MemberBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
1297 |     return visitChildren(node._syntaxNode).cast(MemberBlockSyntax.self)
1298 |   }
     :
1301 |   ///   - Parameter node: the node that is being visited
1302 |   ///   - Returns: the rewritten node
1303 |   open func visit(_ node: MemberTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1304 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MemberTypeSyntax.self))
1305 |   }
     :
1308 |   ///   - Parameter node: the node that is being visited
1309 |   ///   - Returns: the rewritten node
1310 |   open func visit(_ node: MetatypeTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1311 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MetatypeTypeSyntax.self))
1312 |   }
     :
1315 |   ///   - Parameter node: the node that is being visited
1316 |   ///   - Returns: the rewritten node
1317 |   open func visit(_ node: MissingDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1318 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MissingDeclSyntax.self))
1319 |   }
     :
1322 |   ///   - Parameter node: the node that is being visited
1323 |   ///   - Returns: the rewritten node
1324 |   open func visit(_ node: MissingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1325 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MissingExprSyntax.self))
1326 |   }
     :
1329 |   ///   - Parameter node: the node that is being visited
1330 |   ///   - Returns: the rewritten node
1331 |   open func visit(_ node: MissingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1332 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(MissingPatternSyntax.self))
1333 |   }
     :
1336 |   ///   - Parameter node: the node that is being visited
1337 |   ///   - Returns: the rewritten node
1338 |   open func visit(_ node: MissingStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1339 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(MissingStmtSyntax.self))
1340 |   }
     :
1343 |   ///   - Parameter node: the node that is being visited
1344 |   ///   - Returns: the rewritten node
1345 |   open func visit(_ node: MissingSyntax) -> Syntax {
     |             `- note: potential overridden instance method 'visit' here
1346 |     return Syntax(visitChildren(node._syntaxNode).cast(MissingSyntax.self))
1347 |   }
     :
1350 |   ///   - Parameter node: the node that is being visited
1351 |   ///   - Returns: the rewritten node
1352 |   open func visit(_ node: MissingTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1353 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MissingTypeSyntax.self))
1354 |   }
     :
1357 |   ///   - Parameter node: the node that is being visited
1358 |   ///   - Returns: the rewritten node
1359 |   open func visit(_ node: MultipleTrailingClosureElementListSyntax) -> MultipleTrailingClosureElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1360 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementListSyntax.self)
1361 |   }
     :
1364 |   ///   - Parameter node: the node that is being visited
1365 |   ///   - Returns: the rewritten node
1366 |   open func visit(_ node: MultipleTrailingClosureElementSyntax) -> MultipleTrailingClosureElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1367 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementSyntax.self)
1368 |   }
     :
1371 |   ///   - Parameter node: the node that is being visited
1372 |   ///   - Returns: the rewritten node
1373 |   open func visit(_ node: NamedOpaqueReturnTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1374 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(NamedOpaqueReturnTypeSyntax.self))
1375 |   }
     :
1378 |   ///   - Parameter node: the node that is being visited
1379 |   ///   - Returns: the rewritten node
1380 |   open func visit(_ node: NilLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1381 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(NilLiteralExprSyntax.self))
1382 |   }
     :
1385 |   ///   - Parameter node: the node that is being visited
1386 |   ///   - Returns: the rewritten node
1387 |   open func visit(_ node: ObjCSelectorPieceListSyntax) -> ObjCSelectorPieceListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1388 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceListSyntax.self)
1389 |   }
     :
1392 |   ///   - Parameter node: the node that is being visited
1393 |   ///   - Returns: the rewritten node
1394 |   open func visit(_ node: ObjCSelectorPieceSyntax) -> ObjCSelectorPieceSyntax {
     |             `- note: potential overridden instance method 'visit' here
1395 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceSyntax.self)
1396 |   }
     :
1399 |   ///   - Parameter node: the node that is being visited
1400 |   ///   - Returns: the rewritten node
1401 |   open func visit(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) -> OpaqueReturnTypeOfAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1402 |     return visitChildren(node._syntaxNode).cast(OpaqueReturnTypeOfAttributeArgumentsSyntax.self)
1403 |   }
     :
1406 |   ///   - Parameter node: the node that is being visited
1407 |   ///   - Returns: the rewritten node
1408 |   open func visit(_ node: OperatorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1409 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(OperatorDeclSyntax.self))
1410 |   }
     :
1413 |   ///   - Parameter node: the node that is being visited
1414 |   ///   - Returns: the rewritten node
1415 |   open func visit(_ node: OperatorPrecedenceAndTypesSyntax) -> OperatorPrecedenceAndTypesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1416 |     return visitChildren(node._syntaxNode).cast(OperatorPrecedenceAndTypesSyntax.self)
1417 |   }
     :
1420 |   ///   - Parameter node: the node that is being visited
1421 |   ///   - Returns: the rewritten node
1422 |   open func visit(_ node: OptionalBindingConditionSyntax) -> OptionalBindingConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1423 |     return visitChildren(node._syntaxNode).cast(OptionalBindingConditionSyntax.self)
1424 |   }
     :
1427 |   ///   - Parameter node: the node that is being visited
1428 |   ///   - Returns: the rewritten node
1429 |   open func visit(_ node: OptionalChainingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1430 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(OptionalChainingExprSyntax.self))
1431 |   }
     :
1434 |   ///   - Parameter node: the node that is being visited
1435 |   ///   - Returns: the rewritten node
1436 |   open func visit(_ node: OptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1437 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(OptionalTypeSyntax.self))
1438 |   }
     :
1441 |   ///   - Parameter node: the node that is being visited
1442 |   ///   - Returns: the rewritten node
1443 |   open func visit(_ node: OriginallyDefinedInAttributeArgumentsSyntax) -> OriginallyDefinedInAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1444 |     return visitChildren(node._syntaxNode).cast(OriginallyDefinedInAttributeArgumentsSyntax.self)
1445 |   }
     :
1448 |   ///   - Parameter node: the node that is being visited
1449 |   ///   - Returns: the rewritten node
1450 |   open func visit(_ node: PackElementExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1451 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackElementExprSyntax.self))
1452 |   }
     :
1455 |   ///   - Parameter node: the node that is being visited
1456 |   ///   - Returns: the rewritten node
1457 |   open func visit(_ node: PackElementTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1458 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackElementTypeSyntax.self))
1459 |   }
     :
1462 |   ///   - Parameter node: the node that is being visited
1463 |   ///   - Returns: the rewritten node
1464 |   open func visit(_ node: PackExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1465 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackExpansionExprSyntax.self))
1466 |   }
     :
1469 |   ///   - Parameter node: the node that is being visited
1470 |   ///   - Returns: the rewritten node
1471 |   open func visit(_ node: PackExpansionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1472 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackExpansionTypeSyntax.self))
1473 |   }
     :
1476 |   ///   - Parameter node: the node that is being visited
1477 |   ///   - Returns: the rewritten node
1478 |   open func visit(_ node: PatternBindingListSyntax) -> PatternBindingListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1479 |     return visitChildren(node._syntaxNode).cast(PatternBindingListSyntax.self)
1480 |   }
     :
1483 |   ///   - Parameter node: the node that is being visited
1484 |   ///   - Returns: the rewritten node
1485 |   open func visit(_ node: PatternBindingSyntax) -> PatternBindingSyntax {
     |             `- note: potential overridden instance method 'visit' here
1486 |     return visitChildren(node._syntaxNode).cast(PatternBindingSyntax.self)
1487 |   }
     :
1490 |   ///   - Parameter node: the node that is being visited
1491 |   ///   - Returns: the rewritten node
1492 |   open func visit(_ node: PatternExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1493 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PatternExprSyntax.self))
1494 |   }
     :
1497 |   ///   - Parameter node: the node that is being visited
1498 |   ///   - Returns: the rewritten node
1499 |   open func visit(_ node: PlatformVersionItemListSyntax) -> PlatformVersionItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1500 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemListSyntax.self)
1501 |   }
     :
1504 |   ///   - Parameter node: the node that is being visited
1505 |   ///   - Returns: the rewritten node
1506 |   open func visit(_ node: PlatformVersionItemSyntax) -> PlatformVersionItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1507 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemSyntax.self)
1508 |   }
     :
1511 |   ///   - Parameter node: the node that is being visited
1512 |   ///   - Returns: the rewritten node
1513 |   open func visit(_ node: PlatformVersionSyntax) -> PlatformVersionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1514 |     return visitChildren(node._syntaxNode).cast(PlatformVersionSyntax.self)
1515 |   }
     :
1518 |   ///   - Parameter node: the node that is being visited
1519 |   ///   - Returns: the rewritten node
1520 |   open func visit(_ node: PostfixIfConfigExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1521 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixIfConfigExprSyntax.self))
1522 |   }
     :
1525 |   ///   - Parameter node: the node that is being visited
1526 |   ///   - Returns: the rewritten node
1527 |   open func visit(_ node: PostfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1528 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixOperatorExprSyntax.self))
1529 |   }
     :
1532 |   ///   - Parameter node: the node that is being visited
1533 |   ///   - Returns: the rewritten node
1534 |   open func visit(_ node: PoundSourceLocationArgumentsSyntax) -> PoundSourceLocationArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1535 |     return visitChildren(node._syntaxNode).cast(PoundSourceLocationArgumentsSyntax.self)
1536 |   }
     :
1539 |   ///   - Parameter node: the node that is being visited
1540 |   ///   - Returns: the rewritten node
1541 |   open func visit(_ node: PoundSourceLocationSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1542 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PoundSourceLocationSyntax.self))
1543 |   }
     :
1546 |   ///   - Parameter node: the node that is being visited
1547 |   ///   - Returns: the rewritten node
1548 |   open func visit(_ node: PrecedenceGroupAssignmentSyntax) -> PrecedenceGroupAssignmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1549 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssignmentSyntax.self)
1550 |   }
     :
1553 |   ///   - Parameter node: the node that is being visited
1554 |   ///   - Returns: the rewritten node
1555 |   open func visit(_ node: PrecedenceGroupAssociativitySyntax) -> PrecedenceGroupAssociativitySyntax {
     |             `- note: potential overridden instance method 'visit' here
1556 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssociativitySyntax.self)
1557 |   }
     :
1560 |   ///   - Parameter node: the node that is being visited
1561 |   ///   - Returns: the rewritten node
1562 |   open func visit(_ node: PrecedenceGroupAttributeListSyntax) -> PrecedenceGroupAttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1563 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAttributeListSyntax.self)
1564 |   }
     :
1567 |   ///   - Parameter node: the node that is being visited
1568 |   ///   - Returns: the rewritten node
1569 |   open func visit(_ node: PrecedenceGroupDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1570 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PrecedenceGroupDeclSyntax.self))
1571 |   }
     :
1574 |   ///   - Parameter node: the node that is being visited
1575 |   ///   - Returns: the rewritten node
1576 |   open func visit(_ node: PrecedenceGroupNameListSyntax) -> PrecedenceGroupNameListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1577 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameListSyntax.self)
1578 |   }
     :
1581 |   ///   - Parameter node: the node that is being visited
1582 |   ///   - Returns: the rewritten node
1583 |   open func visit(_ node: PrecedenceGroupNameSyntax) -> PrecedenceGroupNameSyntax {
     |             `- note: potential overridden instance method 'visit' here
1584 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameSyntax.self)
1585 |   }
     :
1588 |   ///   - Parameter node: the node that is being visited
1589 |   ///   - Returns: the rewritten node
1590 |   open func visit(_ node: PrecedenceGroupRelationSyntax) -> PrecedenceGroupRelationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1591 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupRelationSyntax.self)
1592 |   }
     :
1595 |   ///   - Parameter node: the node that is being visited
1596 |   ///   - Returns: the rewritten node
1597 |   open func visit(_ node: PrefixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1598 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PrefixOperatorExprSyntax.self))
1599 |   }
     :
1602 |   ///   - Parameter node: the node that is being visited
1603 |   ///   - Returns: the rewritten node
1604 |   open func visit(_ node: PrimaryAssociatedTypeClauseSyntax) -> PrimaryAssociatedTypeClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1605 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeClauseSyntax.self)
1606 |   }
     :
1609 |   ///   - Parameter node: the node that is being visited
1610 |   ///   - Returns: the rewritten node
1611 |   open func visit(_ node: PrimaryAssociatedTypeListSyntax) -> PrimaryAssociatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1612 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeListSyntax.self)
1613 |   }
     :
1616 |   ///   - Parameter node: the node that is being visited
1617 |   ///   - Returns: the rewritten node
1618 |   open func visit(_ node: PrimaryAssociatedTypeSyntax) -> PrimaryAssociatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1619 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeSyntax.self)
1620 |   }
     :
1623 |   ///   - Parameter node: the node that is being visited
1624 |   ///   - Returns: the rewritten node
1625 |   open func visit(_ node: ProtocolDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1626 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ProtocolDeclSyntax.self))
1627 |   }
     :
1630 |   ///   - Parameter node: the node that is being visited
1631 |   ///   - Returns: the rewritten node
1632 |   open func visit(_ node: RegexLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1633 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(RegexLiteralExprSyntax.self))
1634 |   }
     :
1637 |   ///   - Parameter node: the node that is being visited
1638 |   ///   - Returns: the rewritten node
1639 |   open func visit(_ node: RepeatStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1640 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(RepeatStmtSyntax.self))
1641 |   }
     :
1644 |   ///   - Parameter node: the node that is being visited
1645 |   ///   - Returns: the rewritten node
1646 |   open func visit(_ node: ReturnClauseSyntax) -> ReturnClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1647 |     return visitChildren(node._syntaxNode).cast(ReturnClauseSyntax.self)
1648 |   }
     :
1651 |   ///   - Parameter node: the node that is being visited
1652 |   ///   - Returns: the rewritten node
1653 |   open func visit(_ node: ReturnStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1654 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ReturnStmtSyntax.self))
1655 |   }
     :
1658 |   ///   - Parameter node: the node that is being visited
1659 |   ///   - Returns: the rewritten node
1660 |   open func visit(_ node: SameTypeRequirementSyntax) -> SameTypeRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1661 |     return visitChildren(node._syntaxNode).cast(SameTypeRequirementSyntax.self)
1662 |   }
     :
1665 |   ///   - Parameter node: the node that is being visited
1666 |   ///   - Returns: the rewritten node
1667 |   open func visit(_ node: SequenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1668 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SequenceExprSyntax.self))
1669 |   }
     :
1672 |   ///   - Parameter node: the node that is being visited
1673 |   ///   - Returns: the rewritten node
1674 |   open func visit(_ node: SimpleStringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1675 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SimpleStringLiteralExprSyntax.self))
1676 |   }
     :
1679 |   ///   - Parameter node: the node that is being visited
1680 |   ///   - Returns: the rewritten node
1681 |   open func visit(_ node: SimpleStringLiteralSegmentListSyntax) -> SimpleStringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1682 |     return visitChildren(node._syntaxNode).cast(SimpleStringLiteralSegmentListSyntax.self)
1683 |   }
     :
1686 |   ///   - Parameter node: the node that is being visited
1687 |   ///   - Returns: the rewritten node
1688 |   open func visit(_ node: SimpleTypeSpecifierSyntax) -> SimpleTypeSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
1689 |     return visitChildren(node._syntaxNode).cast(SimpleTypeSpecifierSyntax.self)
1690 |   }
     :
1693 |   ///   - Parameter node: the node that is being visited
1694 |   ///   - Returns: the rewritten node
1695 |   open func visit(_ node: SomeOrAnyTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1696 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SomeOrAnyTypeSyntax.self))
1697 |   }
     :
1700 |   ///   - Parameter node: the node that is being visited
1701 |   ///   - Returns: the rewritten node
1702 |   open func visit(_ node: SourceFileSyntax) -> SourceFileSyntax {
     |             `- note: potential overridden instance method 'visit' here
1703 |     return visitChildren(node._syntaxNode).cast(SourceFileSyntax.self)
1704 |   }
     :
1707 |   ///   - Parameter node: the node that is being visited
1708 |   ///   - Returns: the rewritten node
1709 |   open func visit(_ node: SpecializeAttributeArgumentListSyntax) -> SpecializeAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1710 |     return visitChildren(node._syntaxNode).cast(SpecializeAttributeArgumentListSyntax.self)
1711 |   }
     :
1714 |   ///   - Parameter node: the node that is being visited
1715 |   ///   - Returns: the rewritten node
1716 |   open func visit(_ node: SpecializeAvailabilityArgumentSyntax) -> SpecializeAvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1717 |     return visitChildren(node._syntaxNode).cast(SpecializeAvailabilityArgumentSyntax.self)
1718 |   }
     :
1721 |   ///   - Parameter node: the node that is being visited
1722 |   ///   - Returns: the rewritten node
1723 |   open func visit(_ node: SpecializeTargetFunctionArgumentSyntax) -> SpecializeTargetFunctionArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1724 |     return visitChildren(node._syntaxNode).cast(SpecializeTargetFunctionArgumentSyntax.self)
1725 |   }
     :
1728 |   ///   - Parameter node: the node that is being visited
1729 |   ///   - Returns: the rewritten node
1730 |   open func visit(_ node: StringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1731 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(StringLiteralExprSyntax.self))
1732 |   }
     :
1735 |   ///   - Parameter node: the node that is being visited
1736 |   ///   - Returns: the rewritten node
1737 |   open func visit(_ node: StringLiteralSegmentListSyntax) -> StringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1738 |     return visitChildren(node._syntaxNode).cast(StringLiteralSegmentListSyntax.self)
1739 |   }
     :
1742 |   ///   - Parameter node: the node that is being visited
1743 |   ///   - Returns: the rewritten node
1744 |   open func visit(_ node: StringSegmentSyntax) -> StringSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1745 |     return visitChildren(node._syntaxNode).cast(StringSegmentSyntax.self)
1746 |   }
     :
1749 |   ///   - Parameter node: the node that is being visited
1750 |   ///   - Returns: the rewritten node
1751 |   open func visit(_ node: StructDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1752 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(StructDeclSyntax.self))
1753 |   }
     :
1756 |   ///   - Parameter node: the node that is being visited
1757 |   ///   - Returns: the rewritten node
1758 |   open func visit(_ node: SubscriptCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1759 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SubscriptCallExprSyntax.self))
1760 |   }
     :
1763 |   ///   - Parameter node: the node that is being visited
1764 |   ///   - Returns: the rewritten node
1765 |   open func visit(_ node: SubscriptDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1766 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(SubscriptDeclSyntax.self))
1767 |   }
     :
1770 |   ///   - Parameter node: the node that is being visited
1771 |   ///   - Returns: the rewritten node
1772 |   open func visit(_ node: SuperExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1773 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SuperExprSyntax.self))
1774 |   }
     :
1777 |   ///   - Parameter node: the node that is being visited
1778 |   ///   - Returns: the rewritten node
1779 |   open func visit(_ node: SuppressedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1780 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SuppressedTypeSyntax.self))
1781 |   }
     :
1784 |   ///   - Parameter node: the node that is being visited
1785 |   ///   - Returns: the rewritten node
1786 |   open func visit(_ node: SwitchCaseItemListSyntax) -> SwitchCaseItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1787 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemListSyntax.self)
1788 |   }
     :
1791 |   ///   - Parameter node: the node that is being visited
1792 |   ///   - Returns: the rewritten node
1793 |   open func visit(_ node: SwitchCaseItemSyntax) -> SwitchCaseItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1794 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemSyntax.self)
1795 |   }
     :
1798 |   ///   - Parameter node: the node that is being visited
1799 |   ///   - Returns: the rewritten node
1800 |   open func visit(_ node: SwitchCaseLabelSyntax) -> SwitchCaseLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1801 |     return visitChildren(node._syntaxNode).cast(SwitchCaseLabelSyntax.self)
1802 |   }
     :
1805 |   ///   - Parameter node: the node that is being visited
1806 |   ///   - Returns: the rewritten node
1807 |   open func visit(_ node: SwitchCaseListSyntax) -> SwitchCaseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1808 |     return visitChildren(node._syntaxNode).cast(SwitchCaseListSyntax.self)
1809 |   }
     :
1812 |   ///   - Parameter node: the node that is being visited
1813 |   ///   - Returns: the rewritten node
1814 |   open func visit(_ node: SwitchCaseSyntax) -> SwitchCaseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1815 |     return visitChildren(node._syntaxNode).cast(SwitchCaseSyntax.self)
1816 |   }
     :
1819 |   ///   - Parameter node: the node that is being visited
1820 |   ///   - Returns: the rewritten node
1821 |   open func visit(_ node: SwitchDefaultLabelSyntax) -> SwitchDefaultLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1822 |     return visitChildren(node._syntaxNode).cast(SwitchDefaultLabelSyntax.self)
1823 |   }
     :
1826 |   ///   - Parameter node: the node that is being visited
1827 |   ///   - Returns: the rewritten node
1828 |   open func visit(_ node: SwitchExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1829 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SwitchExprSyntax.self))
1830 |   }
     :
1833 |   ///   - Parameter node: the node that is being visited
1834 |   ///   - Returns: the rewritten node
1835 |   open func visit(_ node: TernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1836 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TernaryExprSyntax.self))
1837 |   }
     :
1850 |   ///   - Parameter node: the node that is being visited
1851 |   ///   - Returns: the rewritten node
1852 |   open func visit(_ node: ThrowStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1853 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ThrowStmtSyntax.self))
1854 |   }
     :
1857 |   ///   - Parameter node: the node that is being visited
1858 |   ///   - Returns: the rewritten node
1859 |   open func visit(_ node: ThrowsClauseSyntax) -> ThrowsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1860 |     return visitChildren(node._syntaxNode).cast(ThrowsClauseSyntax.self)
1861 |   }
     :
1864 |   ///   - Parameter node: the node that is being visited
1865 |   ///   - Returns: the rewritten node
1866 |   open func visit(_ node: TryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1867 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TryExprSyntax.self))
1868 |   }
     :
1871 |   ///   - Parameter node: the node that is being visited
1872 |   ///   - Returns: the rewritten node
1873 |   open func visit(_ node: TupleExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1874 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TupleExprSyntax.self))
1875 |   }
     :
1878 |   ///   - Parameter node: the node that is being visited
1879 |   ///   - Returns: the rewritten node
1880 |   open func visit(_ node: TuplePatternElementListSyntax) -> TuplePatternElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1881 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementListSyntax.self)
1882 |   }
     :
1885 |   ///   - Parameter node: the node that is being visited
1886 |   ///   - Returns: the rewritten node
1887 |   open func visit(_ node: TuplePatternElementSyntax) -> TuplePatternElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1888 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementSyntax.self)
1889 |   }
     :
1892 |   ///   - Parameter node: the node that is being visited
1893 |   ///   - Returns: the rewritten node
1894 |   open func visit(_ node: TuplePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1895 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(TuplePatternSyntax.self))
1896 |   }
     :
1899 |   ///   - Parameter node: the node that is being visited
1900 |   ///   - Returns: the rewritten node
1901 |   open func visit(_ node: TupleTypeElementListSyntax) -> TupleTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1902 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementListSyntax.self)
1903 |   }
     :
1906 |   ///   - Parameter node: the node that is being visited
1907 |   ///   - Returns: the rewritten node
1908 |   open func visit(_ node: TupleTypeElementSyntax) -> TupleTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1909 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementSyntax.self)
1910 |   }
     :
1913 |   ///   - Parameter node: the node that is being visited
1914 |   ///   - Returns: the rewritten node
1915 |   open func visit(_ node: TupleTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1916 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(TupleTypeSyntax.self))
1917 |   }
     :
1920 |   ///   - Parameter node: the node that is being visited
1921 |   ///   - Returns: the rewritten node
1922 |   open func visit(_ node: TypeAliasDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1923 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(TypeAliasDeclSyntax.self))
1924 |   }
     :
1927 |   ///   - Parameter node: the node that is being visited
1928 |   ///   - Returns: the rewritten node
1929 |   open func visit(_ node: TypeAnnotationSyntax) -> TypeAnnotationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1930 |     return visitChildren(node._syntaxNode).cast(TypeAnnotationSyntax.self)
1931 |   }
     :
1934 |   ///   - Parameter node: the node that is being visited
1935 |   ///   - Returns: the rewritten node
1936 |   open func visit(_ node: TypeEffectSpecifiersSyntax) -> TypeEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
1937 |     return visitChildren(node._syntaxNode).cast(TypeEffectSpecifiersSyntax.self)
1938 |   }
     :
1941 |   ///   - Parameter node: the node that is being visited
1942 |   ///   - Returns: the rewritten node
1943 |   open func visit(_ node: TypeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1944 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TypeExprSyntax.self))
1945 |   }
     :
1948 |   ///   - Parameter node: the node that is being visited
1949 |   ///   - Returns: the rewritten node
1950 |   open func visit(_ node: TypeInitializerClauseSyntax) -> TypeInitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1951 |     return visitChildren(node._syntaxNode).cast(TypeInitializerClauseSyntax.self)
1952 |   }
     :
1955 |   ///   - Parameter node: the node that is being visited
1956 |   ///   - Returns: the rewritten node
1957 |   open func visit(_ node: TypeSpecifierListSyntax) -> TypeSpecifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1958 |     return visitChildren(node._syntaxNode).cast(TypeSpecifierListSyntax.self)
1959 |   }
     :
1962 |   ///   - Parameter node: the node that is being visited
1963 |   ///   - Returns: the rewritten node
1964 |   open func visit(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) -> UnavailableFromAsyncAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1965 |     return visitChildren(node._syntaxNode).cast(UnavailableFromAsyncAttributeArgumentsSyntax.self)
1966 |   }
     :
1969 |   ///   - Parameter node: the node that is being visited
1970 |   ///   - Returns: the rewritten node
1971 |   open func visit(_ node: UnderscorePrivateAttributeArgumentsSyntax) -> UnderscorePrivateAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1972 |     return visitChildren(node._syntaxNode).cast(UnderscorePrivateAttributeArgumentsSyntax.self)
1973 |   }
     :
1976 |   ///   - Parameter node: the node that is being visited
1977 |   ///   - Returns: the rewritten node
1978 |   open func visit(_ node: UnexpectedNodesSyntax) -> UnexpectedNodesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1979 |     return visitChildren(node._syntaxNode).cast(UnexpectedNodesSyntax.self)
1980 |   }
     :
1983 |   ///   - Parameter node: the node that is being visited
1984 |   ///   - Returns: the rewritten node
1985 |   open func visit(_ node: UnresolvedAsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1986 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedAsExprSyntax.self))
1987 |   }
     :
1990 |   ///   - Parameter node: the node that is being visited
1991 |   ///   - Returns: the rewritten node
1992 |   open func visit(_ node: UnresolvedIsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1993 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedIsExprSyntax.self))
1994 |   }
     :
1997 |   ///   - Parameter node: the node that is being visited
1998 |   ///   - Returns: the rewritten node
1999 |   open func visit(_ node: UnresolvedTernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
2000 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedTernaryExprSyntax.self))
2001 |   }
     :
2004 |   ///   - Parameter node: the node that is being visited
2005 |   ///   - Returns: the rewritten node
2006 |   open func visit(_ node: ValueBindingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2007 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ValueBindingPatternSyntax.self))
2008 |   }
     :
2011 |   ///   - Parameter node: the node that is being visited
2012 |   ///   - Returns: the rewritten node
2013 |   open func visit(_ node: VariableDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
2014 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(VariableDeclSyntax.self))
2015 |   }
     :
2018 |   ///   - Parameter node: the node that is being visited
2019 |   ///   - Returns: the rewritten node
2020 |   open func visit(_ node: VersionComponentListSyntax) -> VersionComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2021 |     return visitChildren(node._syntaxNode).cast(VersionComponentListSyntax.self)
2022 |   }
     :
2025 |   ///   - Parameter node: the node that is being visited
2026 |   ///   - Returns: the rewritten node
2027 |   open func visit(_ node: VersionComponentSyntax) -> VersionComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
2028 |     return visitChildren(node._syntaxNode).cast(VersionComponentSyntax.self)
2029 |   }
     :
2032 |   ///   - Parameter node: the node that is being visited
2033 |   ///   - Returns: the rewritten node
2034 |   open func visit(_ node: VersionTupleSyntax) -> VersionTupleSyntax {
     |             `- note: potential overridden instance method 'visit' here
2035 |     return visitChildren(node._syntaxNode).cast(VersionTupleSyntax.self)
2036 |   }
     :
2039 |   ///   - Parameter node: the node that is being visited
2040 |   ///   - Returns: the rewritten node
2041 |   open func visit(_ node: WhereClauseSyntax) -> WhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2042 |     return visitChildren(node._syntaxNode).cast(WhereClauseSyntax.self)
2043 |   }
     :
2046 |   ///   - Parameter node: the node that is being visited
2047 |   ///   - Returns: the rewritten node
2048 |   open func visit(_ node: WhileStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2049 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(WhileStmtSyntax.self))
2050 |   }
     :
2053 |   ///   - Parameter node: the node that is being visited
2054 |   ///   - Returns: the rewritten node
2055 |   open func visit(_ node: WildcardPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2056 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(WildcardPatternSyntax.self))
2057 |   }
     :
2060 |   ///   - Parameter node: the node that is being visited
2061 |   ///   - Returns: the rewritten node
2062 |   open func visit(_ node: YieldStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2063 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(YieldStmtSyntax.self))
2064 |   }
     :
2067 |   ///   - Parameter node: the node that is being visited
2068 |   ///   - Returns: the rewritten node
2069 |   open func visit(_ node: YieldedExpressionListSyntax) -> YieldedExpressionListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2070 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionListSyntax.self)
2071 |   }
     :
2074 |   ///   - Parameter node: the node that is being visited
2075 |   ///   - Returns: the rewritten node
2076 |   open func visit(_ node: YieldedExpressionSyntax) -> YieldedExpressionSyntax {
     |             `- note: potential overridden instance method 'visit' here
2077 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionSyntax.self)
2078 |   }
     :
2081 |   ///   - Parameter node: the node that is being visited
2082 |   ///   - Returns: the rewritten node
2083 |   open func visit(_ node: YieldedExpressionsClauseSyntax) -> YieldedExpressionsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2084 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionsClauseSyntax.self)
2085 |   }
     :
2088 |   ///   - Parameter node: the node that is being visited
2089 |   ///   - Returns: the rewritten node
2090 |   public func visit(_ node: DeclSyntax) -> DeclSyntax {
     |               `- note: potential overridden instance method 'visit' here
2091 |     var node: Syntax = Syntax(node)
2092 |     dispatchVisit(&node)
     :
2097 |   ///   - Parameter node: the node that is being visited
2098 |   ///   - Returns: the rewritten node
2099 |   public func visit(_ node: ExprSyntax) -> ExprSyntax {
     |               `- note: potential overridden instance method 'visit' here
2100 |     var node: Syntax = Syntax(node)
2101 |     dispatchVisit(&node)
     :
2106 |   ///   - Parameter node: the node that is being visited
2107 |   ///   - Returns: the rewritten node
2108 |   public func visit(_ node: PatternSyntax) -> PatternSyntax {
     |               `- note: potential overridden instance method 'visit' here
2109 |     var node: Syntax = Syntax(node)
2110 |     dispatchVisit(&node)
     :
2115 |   ///   - Parameter node: the node that is being visited
2116 |   ///   - Returns: the rewritten node
2117 |   public func visit(_ node: StmtSyntax) -> StmtSyntax {
     |               `- note: potential overridden instance method 'visit' here
2118 |     var node: Syntax = Syntax(node)
2119 |     dispatchVisit(&node)
     :
2124 |   ///   - Parameter node: the node that is being visited
2125 |   ///   - Returns: the rewritten node
2126 |   public func visit(_ node: TypeSyntax) -> TypeSyntax {
     |               `- note: potential overridden instance method 'visit' here
2127 |     var node: Syntax = Syntax(node)
2128 |     dispatchVisit(&node)

/Users/oliver/Developer/SAAE/Sources/SAAE/SyntaxTree.swift:773:19: error: method does not override any method from its superclass
771 |     }
772 | 
773 |     override func visit(_ token: TokenSyntax) -> Syntax {
    |                   `- error: method does not override any method from its superclass
774 |         currentIndex += 1
775 |         currentPath.append(currentIndex)

/Users/oliver/Developer/SAAE/.build/checkouts/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift:50:13: note: potential overridden instance method 'visit' here
  48 |   ///   - Parameter node: the node that is being visited
  49 |   ///   - Returns: the rewritten node
  50 |   open func visit(_ token: TokenSyntax) -> TokenSyntax {
     |             `- note: potential overridden instance method 'visit' here
  51 |     return token
  52 |   }
     :
  77 |   ///   - Returns: the rewritten node
  78 |   @available(*, deprecated, renamed: "rewrite(_:detach:)")
  79 |   public func visit(_ node: Syntax) -> Syntax {
     |               `- note: potential overridden instance method 'visit' here
  80 |     var rewritten = node
  81 |     dispatchVisit(&rewritten)
     :
  92 |   ///   - Parameter node: the node that is being visited
  93 |   ///   - Returns: the rewritten node
  94 |   open func visit(_ node: AccessorBlockSyntax) -> AccessorBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
  95 |     return visitChildren(node._syntaxNode).cast(AccessorBlockSyntax.self)
  96 |   }
     :
  99 |   ///   - Parameter node: the node that is being visited
 100 |   ///   - Returns: the rewritten node
 101 |   open func visit(_ node: AccessorDeclListSyntax) -> AccessorDeclListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 102 |     return visitChildren(node._syntaxNode).cast(AccessorDeclListSyntax.self)
 103 |   }
     :
 106 |   ///   - Parameter node: the node that is being visited
 107 |   ///   - Returns: the rewritten node
 108 |   open func visit(_ node: AccessorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 109 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AccessorDeclSyntax.self))
 110 |   }
     :
 113 |   ///   - Parameter node: the node that is being visited
 114 |   ///   - Returns: the rewritten node
 115 |   open func visit(_ node: AccessorEffectSpecifiersSyntax) -> AccessorEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 116 |     return visitChildren(node._syntaxNode).cast(AccessorEffectSpecifiersSyntax.self)
 117 |   }
     :
 120 |   ///   - Parameter node: the node that is being visited
 121 |   ///   - Returns: the rewritten node
 122 |   open func visit(_ node: AccessorParametersSyntax) -> AccessorParametersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 123 |     return visitChildren(node._syntaxNode).cast(AccessorParametersSyntax.self)
 124 |   }
     :
 127 |   ///   - Parameter node: the node that is being visited
 128 |   ///   - Returns: the rewritten node
 129 |   open func visit(_ node: ActorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 130 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ActorDeclSyntax.self))
 131 |   }
     :
 134 |   ///   - Parameter node: the node that is being visited
 135 |   ///   - Returns: the rewritten node
 136 |   open func visit(_ node: ArrayElementListSyntax) -> ArrayElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 137 |     return visitChildren(node._syntaxNode).cast(ArrayElementListSyntax.self)
 138 |   }
     :
 141 |   ///   - Parameter node: the node that is being visited
 142 |   ///   - Returns: the rewritten node
 143 |   open func visit(_ node: ArrayElementSyntax) -> ArrayElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 144 |     return visitChildren(node._syntaxNode).cast(ArrayElementSyntax.self)
 145 |   }
     :
 148 |   ///   - Parameter node: the node that is being visited
 149 |   ///   - Returns: the rewritten node
 150 |   open func visit(_ node: ArrayExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 151 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrayExprSyntax.self))
 152 |   }
     :
 155 |   ///   - Parameter node: the node that is being visited
 156 |   ///   - Returns: the rewritten node
 157 |   open func visit(_ node: ArrayTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 158 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ArrayTypeSyntax.self))
 159 |   }
     :
 162 |   ///   - Parameter node: the node that is being visited
 163 |   ///   - Returns: the rewritten node
 164 |   open func visit(_ node: ArrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 165 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ArrowExprSyntax.self))
 166 |   }
     :
 169 |   ///   - Parameter node: the node that is being visited
 170 |   ///   - Returns: the rewritten node
 171 |   open func visit(_ node: AsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 172 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AsExprSyntax.self))
 173 |   }
     :
 176 |   ///   - Parameter node: the node that is being visited
 177 |   ///   - Returns: the rewritten node
 178 |   open func visit(_ node: AssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 179 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AssignmentExprSyntax.self))
 180 |   }
     :
 183 |   ///   - Parameter node: the node that is being visited
 184 |   ///   - Returns: the rewritten node
 185 |   open func visit(_ node: AssociatedTypeDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 186 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(AssociatedTypeDeclSyntax.self))
 187 |   }
     :
 190 |   ///   - Parameter node: the node that is being visited
 191 |   ///   - Returns: the rewritten node
 192 |   open func visit(_ node: AttributeListSyntax) -> AttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 193 |     return visitChildren(node._syntaxNode).cast(AttributeListSyntax.self)
 194 |   }
     :
 197 |   ///   - Parameter node: the node that is being visited
 198 |   ///   - Returns: the rewritten node
 199 |   open func visit(_ node: AttributeSyntax) -> AttributeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 200 |     return visitChildren(node._syntaxNode).cast(AttributeSyntax.self)
 201 |   }
     :
 204 |   ///   - Parameter node: the node that is being visited
 205 |   ///   - Returns: the rewritten node
 206 |   open func visit(_ node: AttributedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 207 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(AttributedTypeSyntax.self))
 208 |   }
     :
 211 |   ///   - Parameter node: the node that is being visited
 212 |   ///   - Returns: the rewritten node
 213 |   open func visit(_ node: AvailabilityArgumentListSyntax) -> AvailabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 214 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentListSyntax.self)
 215 |   }
     :
 218 |   ///   - Parameter node: the node that is being visited
 219 |   ///   - Returns: the rewritten node
 220 |   open func visit(_ node: AvailabilityArgumentSyntax) -> AvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 221 |     return visitChildren(node._syntaxNode).cast(AvailabilityArgumentSyntax.self)
 222 |   }
     :
 225 |   ///   - Parameter node: the node that is being visited
 226 |   ///   - Returns: the rewritten node
 227 |   open func visit(_ node: AvailabilityConditionSyntax) -> AvailabilityConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
 228 |     return visitChildren(node._syntaxNode).cast(AvailabilityConditionSyntax.self)
 229 |   }
     :
 232 |   ///   - Parameter node: the node that is being visited
 233 |   ///   - Returns: the rewritten node
 234 |   open func visit(_ node: AvailabilityLabeledArgumentSyntax) -> AvailabilityLabeledArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 235 |     return visitChildren(node._syntaxNode).cast(AvailabilityLabeledArgumentSyntax.self)
 236 |   }
     :
 239 |   ///   - Parameter node: the node that is being visited
 240 |   ///   - Returns: the rewritten node
 241 |   open func visit(_ node: AwaitExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 242 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(AwaitExprSyntax.self))
 243 |   }
     :
 246 |   ///   - Parameter node: the node that is being visited
 247 |   ///   - Returns: the rewritten node
 248 |   open func visit(_ node: BackDeployedAttributeArgumentsSyntax) -> BackDeployedAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 249 |     return visitChildren(node._syntaxNode).cast(BackDeployedAttributeArgumentsSyntax.self)
 250 |   }
     :
 253 |   ///   - Parameter node: the node that is being visited
 254 |   ///   - Returns: the rewritten node
 255 |   open func visit(_ node: BinaryOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 256 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BinaryOperatorExprSyntax.self))
 257 |   }
     :
 260 |   ///   - Parameter node: the node that is being visited
 261 |   ///   - Returns: the rewritten node
 262 |   open func visit(_ node: BooleanLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 263 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BooleanLiteralExprSyntax.self))
 264 |   }
     :
 267 |   ///   - Parameter node: the node that is being visited
 268 |   ///   - Returns: the rewritten node
 269 |   open func visit(_ node: BorrowExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 270 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(BorrowExprSyntax.self))
 271 |   }
     :
 274 |   ///   - Parameter node: the node that is being visited
 275 |   ///   - Returns: the rewritten node
 276 |   open func visit(_ node: BreakStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 277 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(BreakStmtSyntax.self))
 278 |   }
     :
 281 |   ///   - Parameter node: the node that is being visited
 282 |   ///   - Returns: the rewritten node
 283 |   open func visit(_ node: _CanImportExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 284 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportExprSyntax.self))
 285 |   }
     :
 288 |   ///   - Parameter node: the node that is being visited
 289 |   ///   - Returns: the rewritten node
 290 |   open func visit(_ node: _CanImportVersionInfoSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 291 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(_CanImportVersionInfoSyntax.self))
 292 |   }
     :
 295 |   ///   - Parameter node: the node that is being visited
 296 |   ///   - Returns: the rewritten node
 297 |   open func visit(_ node: CatchClauseListSyntax) -> CatchClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 298 |     return visitChildren(node._syntaxNode).cast(CatchClauseListSyntax.self)
 299 |   }
     :
 302 |   ///   - Parameter node: the node that is being visited
 303 |   ///   - Returns: the rewritten node
 304 |   open func visit(_ node: CatchClauseSyntax) -> CatchClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 305 |     return visitChildren(node._syntaxNode).cast(CatchClauseSyntax.self)
 306 |   }
     :
 309 |   ///   - Parameter node: the node that is being visited
 310 |   ///   - Returns: the rewritten node
 311 |   open func visit(_ node: CatchItemListSyntax) -> CatchItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 312 |     return visitChildren(node._syntaxNode).cast(CatchItemListSyntax.self)
 313 |   }
     :
 316 |   ///   - Parameter node: the node that is being visited
 317 |   ///   - Returns: the rewritten node
 318 |   open func visit(_ node: CatchItemSyntax) -> CatchItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 319 |     return visitChildren(node._syntaxNode).cast(CatchItemSyntax.self)
 320 |   }
     :
 323 |   ///   - Parameter node: the node that is being visited
 324 |   ///   - Returns: the rewritten node
 325 |   open func visit(_ node: ClassDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 326 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ClassDeclSyntax.self))
 327 |   }
     :
 330 |   ///   - Parameter node: the node that is being visited
 331 |   ///   - Returns: the rewritten node
 332 |   open func visit(_ node: ClassRestrictionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 333 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ClassRestrictionTypeSyntax.self))
 334 |   }
     :
 337 |   ///   - Parameter node: the node that is being visited
 338 |   ///   - Returns: the rewritten node
 339 |   open func visit(_ node: ClosureCaptureClauseSyntax) -> ClosureCaptureClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 340 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureClauseSyntax.self)
 341 |   }
     :
 344 |   ///   - Parameter node: the node that is being visited
 345 |   ///   - Returns: the rewritten node
 346 |   open func visit(_ node: ClosureCaptureListSyntax) -> ClosureCaptureListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 347 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureListSyntax.self)
 348 |   }
     :
 351 |   ///   - Parameter node: the node that is being visited
 352 |   ///   - Returns: the rewritten node
 353 |   open func visit(_ node: ClosureCaptureSpecifierSyntax) -> ClosureCaptureSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 354 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSpecifierSyntax.self)
 355 |   }
     :
 358 |   ///   - Parameter node: the node that is being visited
 359 |   ///   - Returns: the rewritten node
 360 |   open func visit(_ node: ClosureCaptureSyntax) -> ClosureCaptureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 361 |     return visitChildren(node._syntaxNode).cast(ClosureCaptureSyntax.self)
 362 |   }
     :
 365 |   ///   - Parameter node: the node that is being visited
 366 |   ///   - Returns: the rewritten node
 367 |   open func visit(_ node: ClosureExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 368 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ClosureExprSyntax.self))
 369 |   }
     :
 372 |   ///   - Parameter node: the node that is being visited
 373 |   ///   - Returns: the rewritten node
 374 |   open func visit(_ node: ClosureParameterClauseSyntax) -> ClosureParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 375 |     return visitChildren(node._syntaxNode).cast(ClosureParameterClauseSyntax.self)
 376 |   }
     :
 379 |   ///   - Parameter node: the node that is being visited
 380 |   ///   - Returns: the rewritten node
 381 |   open func visit(_ node: ClosureParameterListSyntax) -> ClosureParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 382 |     return visitChildren(node._syntaxNode).cast(ClosureParameterListSyntax.self)
 383 |   }
     :
 386 |   ///   - Parameter node: the node that is being visited
 387 |   ///   - Returns: the rewritten node
 388 |   open func visit(_ node: ClosureParameterSyntax) -> ClosureParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 389 |     return visitChildren(node._syntaxNode).cast(ClosureParameterSyntax.self)
 390 |   }
     :
 393 |   ///   - Parameter node: the node that is being visited
 394 |   ///   - Returns: the rewritten node
 395 |   open func visit(_ node: ClosureShorthandParameterListSyntax) -> ClosureShorthandParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 396 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterListSyntax.self)
 397 |   }
     :
 400 |   ///   - Parameter node: the node that is being visited
 401 |   ///   - Returns: the rewritten node
 402 |   open func visit(_ node: ClosureShorthandParameterSyntax) -> ClosureShorthandParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 403 |     return visitChildren(node._syntaxNode).cast(ClosureShorthandParameterSyntax.self)
 404 |   }
     :
 407 |   ///   - Parameter node: the node that is being visited
 408 |   ///   - Returns: the rewritten node
 409 |   open func visit(_ node: ClosureSignatureSyntax) -> ClosureSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 410 |     return visitChildren(node._syntaxNode).cast(ClosureSignatureSyntax.self)
 411 |   }
     :
 414 |   ///   - Parameter node: the node that is being visited
 415 |   ///   - Returns: the rewritten node
 416 |   open func visit(_ node: CodeBlockItemListSyntax) -> CodeBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 417 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemListSyntax.self)
 418 |   }
     :
 421 |   ///   - Parameter node: the node that is being visited
 422 |   ///   - Returns: the rewritten node
 423 |   open func visit(_ node: CodeBlockItemSyntax) -> CodeBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
 424 |     return visitChildren(node._syntaxNode).cast(CodeBlockItemSyntax.self)
 425 |   }
     :
 428 |   ///   - Parameter node: the node that is being visited
 429 |   ///   - Returns: the rewritten node
 430 |   open func visit(_ node: CodeBlockSyntax) -> CodeBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
 431 |     return visitChildren(node._syntaxNode).cast(CodeBlockSyntax.self)
 432 |   }
     :
 435 |   ///   - Parameter node: the node that is being visited
 436 |   ///   - Returns: the rewritten node
 437 |   open func visit(_ node: CompositionTypeElementListSyntax) -> CompositionTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 438 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementListSyntax.self)
 439 |   }
     :
 442 |   ///   - Parameter node: the node that is being visited
 443 |   ///   - Returns: the rewritten node
 444 |   open func visit(_ node: CompositionTypeElementSyntax) -> CompositionTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 445 |     return visitChildren(node._syntaxNode).cast(CompositionTypeElementSyntax.self)
 446 |   }
     :
 449 |   ///   - Parameter node: the node that is being visited
 450 |   ///   - Returns: the rewritten node
 451 |   open func visit(_ node: CompositionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 452 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(CompositionTypeSyntax.self))
 453 |   }
     :
 456 |   ///   - Parameter node: the node that is being visited
 457 |   ///   - Returns: the rewritten node
 458 |   open func visit(_ node: ConditionElementListSyntax) -> ConditionElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 459 |     return visitChildren(node._syntaxNode).cast(ConditionElementListSyntax.self)
 460 |   }
     :
 463 |   ///   - Parameter node: the node that is being visited
 464 |   ///   - Returns: the rewritten node
 465 |   open func visit(_ node: ConditionElementSyntax) -> ConditionElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 466 |     return visitChildren(node._syntaxNode).cast(ConditionElementSyntax.self)
 467 |   }
     :
 470 |   ///   - Parameter node: the node that is being visited
 471 |   ///   - Returns: the rewritten node
 472 |   open func visit(_ node: ConformanceRequirementSyntax) -> ConformanceRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 473 |     return visitChildren(node._syntaxNode).cast(ConformanceRequirementSyntax.self)
 474 |   }
     :
 477 |   ///   - Parameter node: the node that is being visited
 478 |   ///   - Returns: the rewritten node
 479 |   open func visit(_ node: ConsumeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 480 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ConsumeExprSyntax.self))
 481 |   }
     :
 484 |   ///   - Parameter node: the node that is being visited
 485 |   ///   - Returns: the rewritten node
 486 |   open func visit(_ node: ContinueStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 487 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ContinueStmtSyntax.self))
 488 |   }
     :
 491 |   ///   - Parameter node: the node that is being visited
 492 |   ///   - Returns: the rewritten node
 493 |   open func visit(_ node: ConventionAttributeArgumentsSyntax) -> ConventionAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 494 |     return visitChildren(node._syntaxNode).cast(ConventionAttributeArgumentsSyntax.self)
 495 |   }
     :
 498 |   ///   - Parameter node: the node that is being visited
 499 |   ///   - Returns: the rewritten node
 500 |   open func visit(_ node: ConventionWitnessMethodAttributeArgumentsSyntax) -> ConventionWitnessMethodAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 501 |     return visitChildren(node._syntaxNode).cast(ConventionWitnessMethodAttributeArgumentsSyntax.self)
 502 |   }
     :
 505 |   ///   - Parameter node: the node that is being visited
 506 |   ///   - Returns: the rewritten node
 507 |   open func visit(_ node: CopyExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 508 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(CopyExprSyntax.self))
 509 |   }
     :
 512 |   ///   - Parameter node: the node that is being visited
 513 |   ///   - Returns: the rewritten node
 514 |   open func visit(_ node: DeclModifierDetailSyntax) -> DeclModifierDetailSyntax {
     |             `- note: potential overridden instance method 'visit' here
 515 |     return visitChildren(node._syntaxNode).cast(DeclModifierDetailSyntax.self)
 516 |   }
     :
 519 |   ///   - Parameter node: the node that is being visited
 520 |   ///   - Returns: the rewritten node
 521 |   open func visit(_ node: DeclModifierListSyntax) -> DeclModifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 522 |     return visitChildren(node._syntaxNode).cast(DeclModifierListSyntax.self)
 523 |   }
     :
 526 |   ///   - Parameter node: the node that is being visited
 527 |   ///   - Returns: the rewritten node
 528 |   open func visit(_ node: DeclModifierSyntax) -> DeclModifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
 529 |     return visitChildren(node._syntaxNode).cast(DeclModifierSyntax.self)
 530 |   }
     :
 533 |   ///   - Parameter node: the node that is being visited
 534 |   ///   - Returns: the rewritten node
 535 |   open func visit(_ node: DeclNameArgumentListSyntax) -> DeclNameArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 536 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentListSyntax.self)
 537 |   }
     :
 540 |   ///   - Parameter node: the node that is being visited
 541 |   ///   - Returns: the rewritten node
 542 |   open func visit(_ node: DeclNameArgumentSyntax) -> DeclNameArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 543 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentSyntax.self)
 544 |   }
     :
 547 |   ///   - Parameter node: the node that is being visited
 548 |   ///   - Returns: the rewritten node
 549 |   open func visit(_ node: DeclNameArgumentsSyntax) -> DeclNameArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 550 |     return visitChildren(node._syntaxNode).cast(DeclNameArgumentsSyntax.self)
 551 |   }
     :
 554 |   ///   - Parameter node: the node that is being visited
 555 |   ///   - Returns: the rewritten node
 556 |   open func visit(_ node: DeclReferenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 557 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DeclReferenceExprSyntax.self))
 558 |   }
     :
 561 |   ///   - Parameter node: the node that is being visited
 562 |   ///   - Returns: the rewritten node
 563 |   open func visit(_ node: DeferStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 564 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DeferStmtSyntax.self))
 565 |   }
     :
 568 |   ///   - Parameter node: the node that is being visited
 569 |   ///   - Returns: the rewritten node
 570 |   open func visit(_ node: DeinitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 571 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(DeinitializerDeclSyntax.self))
 572 |   }
     :
 575 |   ///   - Parameter node: the node that is being visited
 576 |   ///   - Returns: the rewritten node
 577 |   open func visit(_ node: DeinitializerEffectSpecifiersSyntax) -> DeinitializerEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 578 |     return visitChildren(node._syntaxNode).cast(DeinitializerEffectSpecifiersSyntax.self)
 579 |   }
     :
 582 |   ///   - Parameter node: the node that is being visited
 583 |   ///   - Returns: the rewritten node
 584 |   open func visit(_ node: DerivativeAttributeArgumentsSyntax) -> DerivativeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 585 |     return visitChildren(node._syntaxNode).cast(DerivativeAttributeArgumentsSyntax.self)
 586 |   }
     :
 589 |   ///   - Parameter node: the node that is being visited
 590 |   ///   - Returns: the rewritten node
 591 |   open func visit(_ node: DesignatedTypeListSyntax) -> DesignatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 592 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeListSyntax.self)
 593 |   }
     :
 596 |   ///   - Parameter node: the node that is being visited
 597 |   ///   - Returns: the rewritten node
 598 |   open func visit(_ node: DesignatedTypeSyntax) -> DesignatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 599 |     return visitChildren(node._syntaxNode).cast(DesignatedTypeSyntax.self)
 600 |   }
     :
 603 |   ///   - Parameter node: the node that is being visited
 604 |   ///   - Returns: the rewritten node
 605 |   open func visit(_ node: DictionaryElementListSyntax) -> DictionaryElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 606 |     return visitChildren(node._syntaxNode).cast(DictionaryElementListSyntax.self)
 607 |   }
     :
 610 |   ///   - Parameter node: the node that is being visited
 611 |   ///   - Returns: the rewritten node
 612 |   open func visit(_ node: DictionaryElementSyntax) -> DictionaryElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 613 |     return visitChildren(node._syntaxNode).cast(DictionaryElementSyntax.self)
 614 |   }
     :
 617 |   ///   - Parameter node: the node that is being visited
 618 |   ///   - Returns: the rewritten node
 619 |   open func visit(_ node: DictionaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 620 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DictionaryExprSyntax.self))
 621 |   }
     :
 624 |   ///   - Parameter node: the node that is being visited
 625 |   ///   - Returns: the rewritten node
 626 |   open func visit(_ node: DictionaryTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 627 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(DictionaryTypeSyntax.self))
 628 |   }
     :
 631 |   ///   - Parameter node: the node that is being visited
 632 |   ///   - Returns: the rewritten node
 633 |   open func visit(_ node: DifferentiabilityArgumentListSyntax) -> DifferentiabilityArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 634 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentListSyntax.self)
 635 |   }
     :
 638 |   ///   - Parameter node: the node that is being visited
 639 |   ///   - Returns: the rewritten node
 640 |   open func visit(_ node: DifferentiabilityArgumentSyntax) -> DifferentiabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 641 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentSyntax.self)
 642 |   }
     :
 645 |   ///   - Parameter node: the node that is being visited
 646 |   ///   - Returns: the rewritten node
 647 |   open func visit(_ node: DifferentiabilityArgumentsSyntax) -> DifferentiabilityArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 648 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityArgumentsSyntax.self)
 649 |   }
     :
 652 |   ///   - Parameter node: the node that is being visited
 653 |   ///   - Returns: the rewritten node
 654 |   open func visit(_ node: DifferentiabilityWithRespectToArgumentSyntax) -> DifferentiabilityWithRespectToArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 655 |     return visitChildren(node._syntaxNode).cast(DifferentiabilityWithRespectToArgumentSyntax.self)
 656 |   }
     :
 659 |   ///   - Parameter node: the node that is being visited
 660 |   ///   - Returns: the rewritten node
 661 |   open func visit(_ node: DifferentiableAttributeArgumentsSyntax) -> DifferentiableAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 662 |     return visitChildren(node._syntaxNode).cast(DifferentiableAttributeArgumentsSyntax.self)
 663 |   }
     :
 666 |   ///   - Parameter node: the node that is being visited
 667 |   ///   - Returns: the rewritten node
 668 |   open func visit(_ node: DiscardAssignmentExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 669 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(DiscardAssignmentExprSyntax.self))
 670 |   }
     :
 673 |   ///   - Parameter node: the node that is being visited
 674 |   ///   - Returns: the rewritten node
 675 |   open func visit(_ node: DiscardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 676 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DiscardStmtSyntax.self))
 677 |   }
     :
 690 |   ///   - Parameter node: the node that is being visited
 691 |   ///   - Returns: the rewritten node
 692 |   open func visit(_ node: DoStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 693 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(DoStmtSyntax.self))
 694 |   }
     :
 697 |   ///   - Parameter node: the node that is being visited
 698 |   ///   - Returns: the rewritten node
 699 |   open func visit(_ node: DocumentationAttributeArgumentListSyntax) -> DocumentationAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 700 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentListSyntax.self)
 701 |   }
     :
 704 |   ///   - Parameter node: the node that is being visited
 705 |   ///   - Returns: the rewritten node
 706 |   open func visit(_ node: DocumentationAttributeArgumentSyntax) -> DocumentationAttributeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 707 |     return visitChildren(node._syntaxNode).cast(DocumentationAttributeArgumentSyntax.self)
 708 |   }
     :
 711 |   ///   - Parameter node: the node that is being visited
 712 |   ///   - Returns: the rewritten node
 713 |   open func visit(_ node: DynamicReplacementAttributeArgumentsSyntax) -> DynamicReplacementAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 714 |     return visitChildren(node._syntaxNode).cast(DynamicReplacementAttributeArgumentsSyntax.self)
 715 |   }
     :
 718 |   ///   - Parameter node: the node that is being visited
 719 |   ///   - Returns: the rewritten node
 720 |   open func visit(_ node: EditorPlaceholderDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 721 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderDeclSyntax.self))
 722 |   }
     :
 725 |   ///   - Parameter node: the node that is being visited
 726 |   ///   - Returns: the rewritten node
 727 |   open func visit(_ node: EditorPlaceholderExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 728 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(EditorPlaceholderExprSyntax.self))
 729 |   }
     :
 732 |   ///   - Parameter node: the node that is being visited
 733 |   ///   - Returns: the rewritten node
 734 |   open func visit(_ node: EffectsAttributeArgumentListSyntax) -> EffectsAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 735 |     return visitChildren(node._syntaxNode).cast(EffectsAttributeArgumentListSyntax.self)
 736 |   }
     :
 739 |   ///   - Parameter node: the node that is being visited
 740 |   ///   - Returns: the rewritten node
 741 |   open func visit(_ node: EnumCaseDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 742 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumCaseDeclSyntax.self))
 743 |   }
     :
 746 |   ///   - Parameter node: the node that is being visited
 747 |   ///   - Returns: the rewritten node
 748 |   open func visit(_ node: EnumCaseElementListSyntax) -> EnumCaseElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 749 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementListSyntax.self)
 750 |   }
     :
 753 |   ///   - Parameter node: the node that is being visited
 754 |   ///   - Returns: the rewritten node
 755 |   open func visit(_ node: EnumCaseElementSyntax) -> EnumCaseElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 756 |     return visitChildren(node._syntaxNode).cast(EnumCaseElementSyntax.self)
 757 |   }
     :
 760 |   ///   - Parameter node: the node that is being visited
 761 |   ///   - Returns: the rewritten node
 762 |   open func visit(_ node: EnumCaseParameterClauseSyntax) -> EnumCaseParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 763 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterClauseSyntax.self)
 764 |   }
     :
 767 |   ///   - Parameter node: the node that is being visited
 768 |   ///   - Returns: the rewritten node
 769 |   open func visit(_ node: EnumCaseParameterListSyntax) -> EnumCaseParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 770 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterListSyntax.self)
 771 |   }
     :
 774 |   ///   - Parameter node: the node that is being visited
 775 |   ///   - Returns: the rewritten node
 776 |   open func visit(_ node: EnumCaseParameterSyntax) -> EnumCaseParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 777 |     return visitChildren(node._syntaxNode).cast(EnumCaseParameterSyntax.self)
 778 |   }
     :
 781 |   ///   - Parameter node: the node that is being visited
 782 |   ///   - Returns: the rewritten node
 783 |   open func visit(_ node: EnumDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 784 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(EnumDeclSyntax.self))
 785 |   }
     :
 788 |   ///   - Parameter node: the node that is being visited
 789 |   ///   - Returns: the rewritten node
 790 |   open func visit(_ node: ExposeAttributeArgumentsSyntax) -> ExposeAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
 791 |     return visitChildren(node._syntaxNode).cast(ExposeAttributeArgumentsSyntax.self)
 792 |   }
     :
 795 |   ///   - Parameter node: the node that is being visited
 796 |   ///   - Returns: the rewritten node
 797 |   open func visit(_ node: ExprListSyntax) -> ExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 798 |     return visitChildren(node._syntaxNode).cast(ExprListSyntax.self)
 799 |   }
     :
 802 |   ///   - Parameter node: the node that is being visited
 803 |   ///   - Returns: the rewritten node
 804 |   open func visit(_ node: ExpressionPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 805 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ExpressionPatternSyntax.self))
 806 |   }
     :
 809 |   ///   - Parameter node: the node that is being visited
 810 |   ///   - Returns: the rewritten node
 811 |   open func visit(_ node: ExpressionSegmentSyntax) -> ExpressionSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 812 |     return visitChildren(node._syntaxNode).cast(ExpressionSegmentSyntax.self)
 813 |   }
     :
 816 |   ///   - Parameter node: the node that is being visited
 817 |   ///   - Returns: the rewritten node
 818 |   open func visit(_ node: ExpressionStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 819 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ExpressionStmtSyntax.self))
 820 |   }
     :
 823 |   ///   - Parameter node: the node that is being visited
 824 |   ///   - Returns: the rewritten node
 825 |   open func visit(_ node: ExtensionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 826 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ExtensionDeclSyntax.self))
 827 |   }
     :
 830 |   ///   - Parameter node: the node that is being visited
 831 |   ///   - Returns: the rewritten node
 832 |   open func visit(_ node: FallThroughStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 833 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(FallThroughStmtSyntax.self))
 834 |   }
     :
 837 |   ///   - Parameter node: the node that is being visited
 838 |   ///   - Returns: the rewritten node
 839 |   open func visit(_ node: FloatLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 840 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FloatLiteralExprSyntax.self))
 841 |   }
     :
 844 |   ///   - Parameter node: the node that is being visited
 845 |   ///   - Returns: the rewritten node
 846 |   open func visit(_ node: ForStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 847 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ForStmtSyntax.self))
 848 |   }
     :
 851 |   ///   - Parameter node: the node that is being visited
 852 |   ///   - Returns: the rewritten node
 853 |   open func visit(_ node: ForceUnwrapExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 854 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(ForceUnwrapExprSyntax.self))
 855 |   }
     :
 858 |   ///   - Parameter node: the node that is being visited
 859 |   ///   - Returns: the rewritten node
 860 |   open func visit(_ node: FunctionCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 861 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(FunctionCallExprSyntax.self))
 862 |   }
     :
 865 |   ///   - Parameter node: the node that is being visited
 866 |   ///   - Returns: the rewritten node
 867 |   open func visit(_ node: FunctionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
 868 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(FunctionDeclSyntax.self))
 869 |   }
     :
 872 |   ///   - Parameter node: the node that is being visited
 873 |   ///   - Returns: the rewritten node
 874 |   open func visit(_ node: FunctionEffectSpecifiersSyntax) -> FunctionEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
 875 |     return visitChildren(node._syntaxNode).cast(FunctionEffectSpecifiersSyntax.self)
 876 |   }
     :
 879 |   ///   - Parameter node: the node that is being visited
 880 |   ///   - Returns: the rewritten node
 881 |   open func visit(_ node: FunctionParameterClauseSyntax) -> FunctionParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 882 |     return visitChildren(node._syntaxNode).cast(FunctionParameterClauseSyntax.self)
 883 |   }
     :
 886 |   ///   - Parameter node: the node that is being visited
 887 |   ///   - Returns: the rewritten node
 888 |   open func visit(_ node: FunctionParameterListSyntax) -> FunctionParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 889 |     return visitChildren(node._syntaxNode).cast(FunctionParameterListSyntax.self)
 890 |   }
     :
 893 |   ///   - Parameter node: the node that is being visited
 894 |   ///   - Returns: the rewritten node
 895 |   open func visit(_ node: FunctionParameterSyntax) -> FunctionParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 896 |     return visitChildren(node._syntaxNode).cast(FunctionParameterSyntax.self)
 897 |   }
     :
 900 |   ///   - Parameter node: the node that is being visited
 901 |   ///   - Returns: the rewritten node
 902 |   open func visit(_ node: FunctionSignatureSyntax) -> FunctionSignatureSyntax {
     |             `- note: potential overridden instance method 'visit' here
 903 |     return visitChildren(node._syntaxNode).cast(FunctionSignatureSyntax.self)
 904 |   }
     :
 907 |   ///   - Parameter node: the node that is being visited
 908 |   ///   - Returns: the rewritten node
 909 |   open func visit(_ node: FunctionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
 910 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(FunctionTypeSyntax.self))
 911 |   }
     :
 914 |   ///   - Parameter node: the node that is being visited
 915 |   ///   - Returns: the rewritten node
 916 |   open func visit(_ node: GenericArgumentClauseSyntax) -> GenericArgumentClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 917 |     return visitChildren(node._syntaxNode).cast(GenericArgumentClauseSyntax.self)
 918 |   }
     :
 921 |   ///   - Parameter node: the node that is being visited
 922 |   ///   - Returns: the rewritten node
 923 |   open func visit(_ node: GenericArgumentListSyntax) -> GenericArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 924 |     return visitChildren(node._syntaxNode).cast(GenericArgumentListSyntax.self)
 925 |   }
     :
 928 |   ///   - Parameter node: the node that is being visited
 929 |   ///   - Returns: the rewritten node
 930 |   open func visit(_ node: GenericArgumentSyntax) -> GenericArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
 931 |     return visitChildren(node._syntaxNode).cast(GenericArgumentSyntax.self)
 932 |   }
     :
 935 |   ///   - Parameter node: the node that is being visited
 936 |   ///   - Returns: the rewritten node
 937 |   open func visit(_ node: GenericParameterClauseSyntax) -> GenericParameterClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 938 |     return visitChildren(node._syntaxNode).cast(GenericParameterClauseSyntax.self)
 939 |   }
     :
 942 |   ///   - Parameter node: the node that is being visited
 943 |   ///   - Returns: the rewritten node
 944 |   open func visit(_ node: GenericParameterListSyntax) -> GenericParameterListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 945 |     return visitChildren(node._syntaxNode).cast(GenericParameterListSyntax.self)
 946 |   }
     :
 949 |   ///   - Parameter node: the node that is being visited
 950 |   ///   - Returns: the rewritten node
 951 |   open func visit(_ node: GenericParameterSyntax) -> GenericParameterSyntax {
     |             `- note: potential overridden instance method 'visit' here
 952 |     return visitChildren(node._syntaxNode).cast(GenericParameterSyntax.self)
 953 |   }
     :
 956 |   ///   - Parameter node: the node that is being visited
 957 |   ///   - Returns: the rewritten node
 958 |   open func visit(_ node: GenericRequirementListSyntax) -> GenericRequirementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
 959 |     return visitChildren(node._syntaxNode).cast(GenericRequirementListSyntax.self)
 960 |   }
     :
 963 |   ///   - Parameter node: the node that is being visited
 964 |   ///   - Returns: the rewritten node
 965 |   open func visit(_ node: GenericRequirementSyntax) -> GenericRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
 966 |     return visitChildren(node._syntaxNode).cast(GenericRequirementSyntax.self)
 967 |   }
     :
 970 |   ///   - Parameter node: the node that is being visited
 971 |   ///   - Returns: the rewritten node
 972 |   open func visit(_ node: GenericSpecializationExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
 973 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(GenericSpecializationExprSyntax.self))
 974 |   }
     :
 977 |   ///   - Parameter node: the node that is being visited
 978 |   ///   - Returns: the rewritten node
 979 |   open func visit(_ node: GenericWhereClauseSyntax) -> GenericWhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
 980 |     return visitChildren(node._syntaxNode).cast(GenericWhereClauseSyntax.self)
 981 |   }
     :
 984 |   ///   - Parameter node: the node that is being visited
 985 |   ///   - Returns: the rewritten node
 986 |   open func visit(_ node: GuardStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
 987 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(GuardStmtSyntax.self))
 988 |   }
     :
 991 |   ///   - Parameter node: the node that is being visited
 992 |   ///   - Returns: the rewritten node
 993 |   open func visit(_ node: IdentifierPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
 994 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IdentifierPatternSyntax.self))
 995 |   }
     :
 998 |   ///   - Parameter node: the node that is being visited
 999 |   ///   - Returns: the rewritten node
1000 |   open func visit(_ node: IdentifierTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1001 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(IdentifierTypeSyntax.self))
1002 |   }
     :
1005 |   ///   - Parameter node: the node that is being visited
1006 |   ///   - Returns: the rewritten node
1007 |   open func visit(_ node: IfConfigClauseListSyntax) -> IfConfigClauseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1008 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseListSyntax.self)
1009 |   }
     :
1012 |   ///   - Parameter node: the node that is being visited
1013 |   ///   - Returns: the rewritten node
1014 |   open func visit(_ node: IfConfigClauseSyntax) -> IfConfigClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1015 |     return visitChildren(node._syntaxNode).cast(IfConfigClauseSyntax.self)
1016 |   }
     :
1019 |   ///   - Parameter node: the node that is being visited
1020 |   ///   - Returns: the rewritten node
1021 |   open func visit(_ node: IfConfigDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1022 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(IfConfigDeclSyntax.self))
1023 |   }
     :
1026 |   ///   - Parameter node: the node that is being visited
1027 |   ///   - Returns: the rewritten node
1028 |   open func visit(_ node: IfExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1029 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IfExprSyntax.self))
1030 |   }
     :
1033 |   ///   - Parameter node: the node that is being visited
1034 |   ///   - Returns: the rewritten node
1035 |   open func visit(_ node: ImplementsAttributeArgumentsSyntax) -> ImplementsAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1036 |     return visitChildren(node._syntaxNode).cast(ImplementsAttributeArgumentsSyntax.self)
1037 |   }
     :
1040 |   ///   - Parameter node: the node that is being visited
1041 |   ///   - Returns: the rewritten node
1042 |   open func visit(_ node: ImplicitlyUnwrappedOptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1043 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(ImplicitlyUnwrappedOptionalTypeSyntax.self))
1044 |   }
     :
1047 |   ///   - Parameter node: the node that is being visited
1048 |   ///   - Returns: the rewritten node
1049 |   open func visit(_ node: ImportDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1050 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ImportDeclSyntax.self))
1051 |   }
     :
1054 |   ///   - Parameter node: the node that is being visited
1055 |   ///   - Returns: the rewritten node
1056 |   open func visit(_ node: ImportPathComponentListSyntax) -> ImportPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1057 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentListSyntax.self)
1058 |   }
     :
1061 |   ///   - Parameter node: the node that is being visited
1062 |   ///   - Returns: the rewritten node
1063 |   open func visit(_ node: ImportPathComponentSyntax) -> ImportPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1064 |     return visitChildren(node._syntaxNode).cast(ImportPathComponentSyntax.self)
1065 |   }
     :
1068 |   ///   - Parameter node: the node that is being visited
1069 |   ///   - Returns: the rewritten node
1070 |   open func visit(_ node: InOutExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1071 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InOutExprSyntax.self))
1072 |   }
     :
1075 |   ///   - Parameter node: the node that is being visited
1076 |   ///   - Returns: the rewritten node
1077 |   open func visit(_ node: InfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1078 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(InfixOperatorExprSyntax.self))
1079 |   }
     :
1082 |   ///   - Parameter node: the node that is being visited
1083 |   ///   - Returns: the rewritten node
1084 |   open func visit(_ node: InheritanceClauseSyntax) -> InheritanceClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1085 |     return visitChildren(node._syntaxNode).cast(InheritanceClauseSyntax.self)
1086 |   }
     :
1089 |   ///   - Parameter node: the node that is being visited
1090 |   ///   - Returns: the rewritten node
1091 |   open func visit(_ node: InheritedTypeListSyntax) -> InheritedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1092 |     return visitChildren(node._syntaxNode).cast(InheritedTypeListSyntax.self)
1093 |   }
     :
1096 |   ///   - Parameter node: the node that is being visited
1097 |   ///   - Returns: the rewritten node
1098 |   open func visit(_ node: InheritedTypeSyntax) -> InheritedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1099 |     return visitChildren(node._syntaxNode).cast(InheritedTypeSyntax.self)
1100 |   }
     :
1103 |   ///   - Parameter node: the node that is being visited
1104 |   ///   - Returns: the rewritten node
1105 |   open func visit(_ node: InitializerClauseSyntax) -> InitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1106 |     return visitChildren(node._syntaxNode).cast(InitializerClauseSyntax.self)
1107 |   }
     :
1110 |   ///   - Parameter node: the node that is being visited
1111 |   ///   - Returns: the rewritten node
1112 |   open func visit(_ node: InitializerDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1113 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(InitializerDeclSyntax.self))
1114 |   }
     :
1117 |   ///   - Parameter node: the node that is being visited
1118 |   ///   - Returns: the rewritten node
1119 |   open func visit(_ node: IntegerLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1120 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IntegerLiteralExprSyntax.self))
1121 |   }
     :
1124 |   ///   - Parameter node: the node that is being visited
1125 |   ///   - Returns: the rewritten node
1126 |   open func visit(_ node: IsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1127 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(IsExprSyntax.self))
1128 |   }
     :
1131 |   ///   - Parameter node: the node that is being visited
1132 |   ///   - Returns: the rewritten node
1133 |   open func visit(_ node: IsTypePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1134 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(IsTypePatternSyntax.self))
1135 |   }
     :
1138 |   ///   - Parameter node: the node that is being visited
1139 |   ///   - Returns: the rewritten node
1140 |   open func visit(_ node: KeyPathComponentListSyntax) -> KeyPathComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1141 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentListSyntax.self)
1142 |   }
     :
1145 |   ///   - Parameter node: the node that is being visited
1146 |   ///   - Returns: the rewritten node
1147 |   open func visit(_ node: KeyPathComponentSyntax) -> KeyPathComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1148 |     return visitChildren(node._syntaxNode).cast(KeyPathComponentSyntax.self)
1149 |   }
     :
1152 |   ///   - Parameter node: the node that is being visited
1153 |   ///   - Returns: the rewritten node
1154 |   open func visit(_ node: KeyPathExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1155 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(KeyPathExprSyntax.self))
1156 |   }
     :
1159 |   ///   - Parameter node: the node that is being visited
1160 |   ///   - Returns: the rewritten node
1161 |   open func visit(_ node: KeyPathOptionalComponentSyntax) -> KeyPathOptionalComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1162 |     return visitChildren(node._syntaxNode).cast(KeyPathOptionalComponentSyntax.self)
1163 |   }
     :
1166 |   ///   - Parameter node: the node that is being visited
1167 |   ///   - Returns: the rewritten node
1168 |   open func visit(_ node: KeyPathPropertyComponentSyntax) -> KeyPathPropertyComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1169 |     return visitChildren(node._syntaxNode).cast(KeyPathPropertyComponentSyntax.self)
1170 |   }
     :
1173 |   ///   - Parameter node: the node that is being visited
1174 |   ///   - Returns: the rewritten node
1175 |   open func visit(_ node: KeyPathSubscriptComponentSyntax) -> KeyPathSubscriptComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1176 |     return visitChildren(node._syntaxNode).cast(KeyPathSubscriptComponentSyntax.self)
1177 |   }
     :
1180 |   ///   - Parameter node: the node that is being visited
1181 |   ///   - Returns: the rewritten node
1182 |   open func visit(_ node: LabeledExprListSyntax) -> LabeledExprListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1183 |     return visitChildren(node._syntaxNode).cast(LabeledExprListSyntax.self)
1184 |   }
     :
1187 |   ///   - Parameter node: the node that is being visited
1188 |   ///   - Returns: the rewritten node
1189 |   open func visit(_ node: LabeledExprSyntax) -> LabeledExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1190 |     return visitChildren(node._syntaxNode).cast(LabeledExprSyntax.self)
1191 |   }
     :
1194 |   ///   - Parameter node: the node that is being visited
1195 |   ///   - Returns: the rewritten node
1196 |   open func visit(_ node: LabeledSpecializeArgumentSyntax) -> LabeledSpecializeArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1197 |     return visitChildren(node._syntaxNode).cast(LabeledSpecializeArgumentSyntax.self)
1198 |   }
     :
1201 |   ///   - Parameter node: the node that is being visited
1202 |   ///   - Returns: the rewritten node
1203 |   open func visit(_ node: LabeledStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1204 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(LabeledStmtSyntax.self))
1205 |   }
     :
1208 |   ///   - Parameter node: the node that is being visited
1209 |   ///   - Returns: the rewritten node
1210 |   open func visit(_ node: LayoutRequirementSyntax) -> LayoutRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1211 |     return visitChildren(node._syntaxNode).cast(LayoutRequirementSyntax.self)
1212 |   }
     :
1245 |   ///   - Parameter node: the node that is being visited
1246 |   ///   - Returns: the rewritten node
1247 |   open func visit(_ node: MacroDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1248 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroDeclSyntax.self))
1249 |   }
     :
1252 |   ///   - Parameter node: the node that is being visited
1253 |   ///   - Returns: the rewritten node
1254 |   open func visit(_ node: MacroExpansionDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1255 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionDeclSyntax.self))
1256 |   }
     :
1259 |   ///   - Parameter node: the node that is being visited
1260 |   ///   - Returns: the rewritten node
1261 |   open func visit(_ node: MacroExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1262 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MacroExpansionExprSyntax.self))
1263 |   }
     :
1266 |   ///   - Parameter node: the node that is being visited
1267 |   ///   - Returns: the rewritten node
1268 |   open func visit(_ node: MatchingPatternConditionSyntax) -> MatchingPatternConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1269 |     return visitChildren(node._syntaxNode).cast(MatchingPatternConditionSyntax.self)
1270 |   }
     :
1273 |   ///   - Parameter node: the node that is being visited
1274 |   ///   - Returns: the rewritten node
1275 |   open func visit(_ node: MemberAccessExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1276 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MemberAccessExprSyntax.self))
1277 |   }
     :
1280 |   ///   - Parameter node: the node that is being visited
1281 |   ///   - Returns: the rewritten node
1282 |   open func visit(_ node: MemberBlockItemListSyntax) -> MemberBlockItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1283 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemListSyntax.self)
1284 |   }
     :
1287 |   ///   - Parameter node: the node that is being visited
1288 |   ///   - Returns: the rewritten node
1289 |   open func visit(_ node: MemberBlockItemSyntax) -> MemberBlockItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1290 |     return visitChildren(node._syntaxNode).cast(MemberBlockItemSyntax.self)
1291 |   }
     :
1294 |   ///   - Parameter node: the node that is being visited
1295 |   ///   - Returns: the rewritten node
1296 |   open func visit(_ node: MemberBlockSyntax) -> MemberBlockSyntax {
     |             `- note: potential overridden instance method 'visit' here
1297 |     return visitChildren(node._syntaxNode).cast(MemberBlockSyntax.self)
1298 |   }
     :
1301 |   ///   - Parameter node: the node that is being visited
1302 |   ///   - Returns: the rewritten node
1303 |   open func visit(_ node: MemberTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1304 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MemberTypeSyntax.self))
1305 |   }
     :
1308 |   ///   - Parameter node: the node that is being visited
1309 |   ///   - Returns: the rewritten node
1310 |   open func visit(_ node: MetatypeTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1311 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MetatypeTypeSyntax.self))
1312 |   }
     :
1315 |   ///   - Parameter node: the node that is being visited
1316 |   ///   - Returns: the rewritten node
1317 |   open func visit(_ node: MissingDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1318 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(MissingDeclSyntax.self))
1319 |   }
     :
1322 |   ///   - Parameter node: the node that is being visited
1323 |   ///   - Returns: the rewritten node
1324 |   open func visit(_ node: MissingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1325 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(MissingExprSyntax.self))
1326 |   }
     :
1329 |   ///   - Parameter node: the node that is being visited
1330 |   ///   - Returns: the rewritten node
1331 |   open func visit(_ node: MissingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1332 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(MissingPatternSyntax.self))
1333 |   }
     :
1336 |   ///   - Parameter node: the node that is being visited
1337 |   ///   - Returns: the rewritten node
1338 |   open func visit(_ node: MissingStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1339 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(MissingStmtSyntax.self))
1340 |   }
     :
1343 |   ///   - Parameter node: the node that is being visited
1344 |   ///   - Returns: the rewritten node
1345 |   open func visit(_ node: MissingSyntax) -> Syntax {
     |             `- note: potential overridden instance method 'visit' here
1346 |     return Syntax(visitChildren(node._syntaxNode).cast(MissingSyntax.self))
1347 |   }
     :
1350 |   ///   - Parameter node: the node that is being visited
1351 |   ///   - Returns: the rewritten node
1352 |   open func visit(_ node: MissingTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1353 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(MissingTypeSyntax.self))
1354 |   }
     :
1357 |   ///   - Parameter node: the node that is being visited
1358 |   ///   - Returns: the rewritten node
1359 |   open func visit(_ node: MultipleTrailingClosureElementListSyntax) -> MultipleTrailingClosureElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1360 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementListSyntax.self)
1361 |   }
     :
1364 |   ///   - Parameter node: the node that is being visited
1365 |   ///   - Returns: the rewritten node
1366 |   open func visit(_ node: MultipleTrailingClosureElementSyntax) -> MultipleTrailingClosureElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1367 |     return visitChildren(node._syntaxNode).cast(MultipleTrailingClosureElementSyntax.self)
1368 |   }
     :
1371 |   ///   - Parameter node: the node that is being visited
1372 |   ///   - Returns: the rewritten node
1373 |   open func visit(_ node: NamedOpaqueReturnTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1374 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(NamedOpaqueReturnTypeSyntax.self))
1375 |   }
     :
1378 |   ///   - Parameter node: the node that is being visited
1379 |   ///   - Returns: the rewritten node
1380 |   open func visit(_ node: NilLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1381 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(NilLiteralExprSyntax.self))
1382 |   }
     :
1385 |   ///   - Parameter node: the node that is being visited
1386 |   ///   - Returns: the rewritten node
1387 |   open func visit(_ node: ObjCSelectorPieceListSyntax) -> ObjCSelectorPieceListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1388 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceListSyntax.self)
1389 |   }
     :
1392 |   ///   - Parameter node: the node that is being visited
1393 |   ///   - Returns: the rewritten node
1394 |   open func visit(_ node: ObjCSelectorPieceSyntax) -> ObjCSelectorPieceSyntax {
     |             `- note: potential overridden instance method 'visit' here
1395 |     return visitChildren(node._syntaxNode).cast(ObjCSelectorPieceSyntax.self)
1396 |   }
     :
1399 |   ///   - Parameter node: the node that is being visited
1400 |   ///   - Returns: the rewritten node
1401 |   open func visit(_ node: OpaqueReturnTypeOfAttributeArgumentsSyntax) -> OpaqueReturnTypeOfAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1402 |     return visitChildren(node._syntaxNode).cast(OpaqueReturnTypeOfAttributeArgumentsSyntax.self)
1403 |   }
     :
1406 |   ///   - Parameter node: the node that is being visited
1407 |   ///   - Returns: the rewritten node
1408 |   open func visit(_ node: OperatorDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1409 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(OperatorDeclSyntax.self))
1410 |   }
     :
1413 |   ///   - Parameter node: the node that is being visited
1414 |   ///   - Returns: the rewritten node
1415 |   open func visit(_ node: OperatorPrecedenceAndTypesSyntax) -> OperatorPrecedenceAndTypesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1416 |     return visitChildren(node._syntaxNode).cast(OperatorPrecedenceAndTypesSyntax.self)
1417 |   }
     :
1420 |   ///   - Parameter node: the node that is being visited
1421 |   ///   - Returns: the rewritten node
1422 |   open func visit(_ node: OptionalBindingConditionSyntax) -> OptionalBindingConditionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1423 |     return visitChildren(node._syntaxNode).cast(OptionalBindingConditionSyntax.self)
1424 |   }
     :
1427 |   ///   - Parameter node: the node that is being visited
1428 |   ///   - Returns: the rewritten node
1429 |   open func visit(_ node: OptionalChainingExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1430 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(OptionalChainingExprSyntax.self))
1431 |   }
     :
1434 |   ///   - Parameter node: the node that is being visited
1435 |   ///   - Returns: the rewritten node
1436 |   open func visit(_ node: OptionalTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1437 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(OptionalTypeSyntax.self))
1438 |   }
     :
1441 |   ///   - Parameter node: the node that is being visited
1442 |   ///   - Returns: the rewritten node
1443 |   open func visit(_ node: OriginallyDefinedInAttributeArgumentsSyntax) -> OriginallyDefinedInAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1444 |     return visitChildren(node._syntaxNode).cast(OriginallyDefinedInAttributeArgumentsSyntax.self)
1445 |   }
     :
1448 |   ///   - Parameter node: the node that is being visited
1449 |   ///   - Returns: the rewritten node
1450 |   open func visit(_ node: PackElementExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1451 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackElementExprSyntax.self))
1452 |   }
     :
1455 |   ///   - Parameter node: the node that is being visited
1456 |   ///   - Returns: the rewritten node
1457 |   open func visit(_ node: PackElementTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1458 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackElementTypeSyntax.self))
1459 |   }
     :
1462 |   ///   - Parameter node: the node that is being visited
1463 |   ///   - Returns: the rewritten node
1464 |   open func visit(_ node: PackExpansionExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1465 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PackExpansionExprSyntax.self))
1466 |   }
     :
1469 |   ///   - Parameter node: the node that is being visited
1470 |   ///   - Returns: the rewritten node
1471 |   open func visit(_ node: PackExpansionTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1472 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(PackExpansionTypeSyntax.self))
1473 |   }
     :
1476 |   ///   - Parameter node: the node that is being visited
1477 |   ///   - Returns: the rewritten node
1478 |   open func visit(_ node: PatternBindingListSyntax) -> PatternBindingListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1479 |     return visitChildren(node._syntaxNode).cast(PatternBindingListSyntax.self)
1480 |   }
     :
1483 |   ///   - Parameter node: the node that is being visited
1484 |   ///   - Returns: the rewritten node
1485 |   open func visit(_ node: PatternBindingSyntax) -> PatternBindingSyntax {
     |             `- note: potential overridden instance method 'visit' here
1486 |     return visitChildren(node._syntaxNode).cast(PatternBindingSyntax.self)
1487 |   }
     :
1490 |   ///   - Parameter node: the node that is being visited
1491 |   ///   - Returns: the rewritten node
1492 |   open func visit(_ node: PatternExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1493 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PatternExprSyntax.self))
1494 |   }
     :
1497 |   ///   - Parameter node: the node that is being visited
1498 |   ///   - Returns: the rewritten node
1499 |   open func visit(_ node: PlatformVersionItemListSyntax) -> PlatformVersionItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1500 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemListSyntax.self)
1501 |   }
     :
1504 |   ///   - Parameter node: the node that is being visited
1505 |   ///   - Returns: the rewritten node
1506 |   open func visit(_ node: PlatformVersionItemSyntax) -> PlatformVersionItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1507 |     return visitChildren(node._syntaxNode).cast(PlatformVersionItemSyntax.self)
1508 |   }
     :
1511 |   ///   - Parameter node: the node that is being visited
1512 |   ///   - Returns: the rewritten node
1513 |   open func visit(_ node: PlatformVersionSyntax) -> PlatformVersionSyntax {
     |             `- note: potential overridden instance method 'visit' here
1514 |     return visitChildren(node._syntaxNode).cast(PlatformVersionSyntax.self)
1515 |   }
     :
1518 |   ///   - Parameter node: the node that is being visited
1519 |   ///   - Returns: the rewritten node
1520 |   open func visit(_ node: PostfixIfConfigExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1521 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixIfConfigExprSyntax.self))
1522 |   }
     :
1525 |   ///   - Parameter node: the node that is being visited
1526 |   ///   - Returns: the rewritten node
1527 |   open func visit(_ node: PostfixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1528 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PostfixOperatorExprSyntax.self))
1529 |   }
     :
1532 |   ///   - Parameter node: the node that is being visited
1533 |   ///   - Returns: the rewritten node
1534 |   open func visit(_ node: PoundSourceLocationArgumentsSyntax) -> PoundSourceLocationArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1535 |     return visitChildren(node._syntaxNode).cast(PoundSourceLocationArgumentsSyntax.self)
1536 |   }
     :
1539 |   ///   - Parameter node: the node that is being visited
1540 |   ///   - Returns: the rewritten node
1541 |   open func visit(_ node: PoundSourceLocationSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1542 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PoundSourceLocationSyntax.self))
1543 |   }
     :
1546 |   ///   - Parameter node: the node that is being visited
1547 |   ///   - Returns: the rewritten node
1548 |   open func visit(_ node: PrecedenceGroupAssignmentSyntax) -> PrecedenceGroupAssignmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1549 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssignmentSyntax.self)
1550 |   }
     :
1553 |   ///   - Parameter node: the node that is being visited
1554 |   ///   - Returns: the rewritten node
1555 |   open func visit(_ node: PrecedenceGroupAssociativitySyntax) -> PrecedenceGroupAssociativitySyntax {
     |             `- note: potential overridden instance method 'visit' here
1556 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAssociativitySyntax.self)
1557 |   }
     :
1560 |   ///   - Parameter node: the node that is being visited
1561 |   ///   - Returns: the rewritten node
1562 |   open func visit(_ node: PrecedenceGroupAttributeListSyntax) -> PrecedenceGroupAttributeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1563 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupAttributeListSyntax.self)
1564 |   }
     :
1567 |   ///   - Parameter node: the node that is being visited
1568 |   ///   - Returns: the rewritten node
1569 |   open func visit(_ node: PrecedenceGroupDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1570 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(PrecedenceGroupDeclSyntax.self))
1571 |   }
     :
1574 |   ///   - Parameter node: the node that is being visited
1575 |   ///   - Returns: the rewritten node
1576 |   open func visit(_ node: PrecedenceGroupNameListSyntax) -> PrecedenceGroupNameListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1577 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameListSyntax.self)
1578 |   }
     :
1581 |   ///   - Parameter node: the node that is being visited
1582 |   ///   - Returns: the rewritten node
1583 |   open func visit(_ node: PrecedenceGroupNameSyntax) -> PrecedenceGroupNameSyntax {
     |             `- note: potential overridden instance method 'visit' here
1584 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupNameSyntax.self)
1585 |   }
     :
1588 |   ///   - Parameter node: the node that is being visited
1589 |   ///   - Returns: the rewritten node
1590 |   open func visit(_ node: PrecedenceGroupRelationSyntax) -> PrecedenceGroupRelationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1591 |     return visitChildren(node._syntaxNode).cast(PrecedenceGroupRelationSyntax.self)
1592 |   }
     :
1595 |   ///   - Parameter node: the node that is being visited
1596 |   ///   - Returns: the rewritten node
1597 |   open func visit(_ node: PrefixOperatorExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1598 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(PrefixOperatorExprSyntax.self))
1599 |   }
     :
1602 |   ///   - Parameter node: the node that is being visited
1603 |   ///   - Returns: the rewritten node
1604 |   open func visit(_ node: PrimaryAssociatedTypeClauseSyntax) -> PrimaryAssociatedTypeClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1605 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeClauseSyntax.self)
1606 |   }
     :
1609 |   ///   - Parameter node: the node that is being visited
1610 |   ///   - Returns: the rewritten node
1611 |   open func visit(_ node: PrimaryAssociatedTypeListSyntax) -> PrimaryAssociatedTypeListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1612 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeListSyntax.self)
1613 |   }
     :
1616 |   ///   - Parameter node: the node that is being visited
1617 |   ///   - Returns: the rewritten node
1618 |   open func visit(_ node: PrimaryAssociatedTypeSyntax) -> PrimaryAssociatedTypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1619 |     return visitChildren(node._syntaxNode).cast(PrimaryAssociatedTypeSyntax.self)
1620 |   }
     :
1623 |   ///   - Parameter node: the node that is being visited
1624 |   ///   - Returns: the rewritten node
1625 |   open func visit(_ node: ProtocolDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1626 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(ProtocolDeclSyntax.self))
1627 |   }
     :
1630 |   ///   - Parameter node: the node that is being visited
1631 |   ///   - Returns: the rewritten node
1632 |   open func visit(_ node: RegexLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1633 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(RegexLiteralExprSyntax.self))
1634 |   }
     :
1637 |   ///   - Parameter node: the node that is being visited
1638 |   ///   - Returns: the rewritten node
1639 |   open func visit(_ node: RepeatStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1640 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(RepeatStmtSyntax.self))
1641 |   }
     :
1644 |   ///   - Parameter node: the node that is being visited
1645 |   ///   - Returns: the rewritten node
1646 |   open func visit(_ node: ReturnClauseSyntax) -> ReturnClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1647 |     return visitChildren(node._syntaxNode).cast(ReturnClauseSyntax.self)
1648 |   }
     :
1651 |   ///   - Parameter node: the node that is being visited
1652 |   ///   - Returns: the rewritten node
1653 |   open func visit(_ node: ReturnStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1654 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ReturnStmtSyntax.self))
1655 |   }
     :
1658 |   ///   - Parameter node: the node that is being visited
1659 |   ///   - Returns: the rewritten node
1660 |   open func visit(_ node: SameTypeRequirementSyntax) -> SameTypeRequirementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1661 |     return visitChildren(node._syntaxNode).cast(SameTypeRequirementSyntax.self)
1662 |   }
     :
1665 |   ///   - Parameter node: the node that is being visited
1666 |   ///   - Returns: the rewritten node
1667 |   open func visit(_ node: SequenceExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1668 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SequenceExprSyntax.self))
1669 |   }
     :
1672 |   ///   - Parameter node: the node that is being visited
1673 |   ///   - Returns: the rewritten node
1674 |   open func visit(_ node: SimpleStringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1675 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SimpleStringLiteralExprSyntax.self))
1676 |   }
     :
1679 |   ///   - Parameter node: the node that is being visited
1680 |   ///   - Returns: the rewritten node
1681 |   open func visit(_ node: SimpleStringLiteralSegmentListSyntax) -> SimpleStringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1682 |     return visitChildren(node._syntaxNode).cast(SimpleStringLiteralSegmentListSyntax.self)
1683 |   }
     :
1686 |   ///   - Parameter node: the node that is being visited
1687 |   ///   - Returns: the rewritten node
1688 |   open func visit(_ node: SimpleTypeSpecifierSyntax) -> SimpleTypeSpecifierSyntax {
     |             `- note: potential overridden instance method 'visit' here
1689 |     return visitChildren(node._syntaxNode).cast(SimpleTypeSpecifierSyntax.self)
1690 |   }
     :
1693 |   ///   - Parameter node: the node that is being visited
1694 |   ///   - Returns: the rewritten node
1695 |   open func visit(_ node: SomeOrAnyTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1696 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SomeOrAnyTypeSyntax.self))
1697 |   }
     :
1700 |   ///   - Parameter node: the node that is being visited
1701 |   ///   - Returns: the rewritten node
1702 |   open func visit(_ node: SourceFileSyntax) -> SourceFileSyntax {
     |             `- note: potential overridden instance method 'visit' here
1703 |     return visitChildren(node._syntaxNode).cast(SourceFileSyntax.self)
1704 |   }
     :
1707 |   ///   - Parameter node: the node that is being visited
1708 |   ///   - Returns: the rewritten node
1709 |   open func visit(_ node: SpecializeAttributeArgumentListSyntax) -> SpecializeAttributeArgumentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1710 |     return visitChildren(node._syntaxNode).cast(SpecializeAttributeArgumentListSyntax.self)
1711 |   }
     :
1714 |   ///   - Parameter node: the node that is being visited
1715 |   ///   - Returns: the rewritten node
1716 |   open func visit(_ node: SpecializeAvailabilityArgumentSyntax) -> SpecializeAvailabilityArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1717 |     return visitChildren(node._syntaxNode).cast(SpecializeAvailabilityArgumentSyntax.self)
1718 |   }
     :
1721 |   ///   - Parameter node: the node that is being visited
1722 |   ///   - Returns: the rewritten node
1723 |   open func visit(_ node: SpecializeTargetFunctionArgumentSyntax) -> SpecializeTargetFunctionArgumentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1724 |     return visitChildren(node._syntaxNode).cast(SpecializeTargetFunctionArgumentSyntax.self)
1725 |   }
     :
1728 |   ///   - Parameter node: the node that is being visited
1729 |   ///   - Returns: the rewritten node
1730 |   open func visit(_ node: StringLiteralExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1731 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(StringLiteralExprSyntax.self))
1732 |   }
     :
1735 |   ///   - Parameter node: the node that is being visited
1736 |   ///   - Returns: the rewritten node
1737 |   open func visit(_ node: StringLiteralSegmentListSyntax) -> StringLiteralSegmentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1738 |     return visitChildren(node._syntaxNode).cast(StringLiteralSegmentListSyntax.self)
1739 |   }
     :
1742 |   ///   - Parameter node: the node that is being visited
1743 |   ///   - Returns: the rewritten node
1744 |   open func visit(_ node: StringSegmentSyntax) -> StringSegmentSyntax {
     |             `- note: potential overridden instance method 'visit' here
1745 |     return visitChildren(node._syntaxNode).cast(StringSegmentSyntax.self)
1746 |   }
     :
1749 |   ///   - Parameter node: the node that is being visited
1750 |   ///   - Returns: the rewritten node
1751 |   open func visit(_ node: StructDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1752 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(StructDeclSyntax.self))
1753 |   }
     :
1756 |   ///   - Parameter node: the node that is being visited
1757 |   ///   - Returns: the rewritten node
1758 |   open func visit(_ node: SubscriptCallExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1759 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SubscriptCallExprSyntax.self))
1760 |   }
     :
1763 |   ///   - Parameter node: the node that is being visited
1764 |   ///   - Returns: the rewritten node
1765 |   open func visit(_ node: SubscriptDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1766 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(SubscriptDeclSyntax.self))
1767 |   }
     :
1770 |   ///   - Parameter node: the node that is being visited
1771 |   ///   - Returns: the rewritten node
1772 |   open func visit(_ node: SuperExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1773 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SuperExprSyntax.self))
1774 |   }
     :
1777 |   ///   - Parameter node: the node that is being visited
1778 |   ///   - Returns: the rewritten node
1779 |   open func visit(_ node: SuppressedTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1780 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(SuppressedTypeSyntax.self))
1781 |   }
     :
1784 |   ///   - Parameter node: the node that is being visited
1785 |   ///   - Returns: the rewritten node
1786 |   open func visit(_ node: SwitchCaseItemListSyntax) -> SwitchCaseItemListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1787 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemListSyntax.self)
1788 |   }
     :
1791 |   ///   - Parameter node: the node that is being visited
1792 |   ///   - Returns: the rewritten node
1793 |   open func visit(_ node: SwitchCaseItemSyntax) -> SwitchCaseItemSyntax {
     |             `- note: potential overridden instance method 'visit' here
1794 |     return visitChildren(node._syntaxNode).cast(SwitchCaseItemSyntax.self)
1795 |   }
     :
1798 |   ///   - Parameter node: the node that is being visited
1799 |   ///   - Returns: the rewritten node
1800 |   open func visit(_ node: SwitchCaseLabelSyntax) -> SwitchCaseLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1801 |     return visitChildren(node._syntaxNode).cast(SwitchCaseLabelSyntax.self)
1802 |   }
     :
1805 |   ///   - Parameter node: the node that is being visited
1806 |   ///   - Returns: the rewritten node
1807 |   open func visit(_ node: SwitchCaseListSyntax) -> SwitchCaseListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1808 |     return visitChildren(node._syntaxNode).cast(SwitchCaseListSyntax.self)
1809 |   }
     :
1812 |   ///   - Parameter node: the node that is being visited
1813 |   ///   - Returns: the rewritten node
1814 |   open func visit(_ node: SwitchCaseSyntax) -> SwitchCaseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1815 |     return visitChildren(node._syntaxNode).cast(SwitchCaseSyntax.self)
1816 |   }
     :
1819 |   ///   - Parameter node: the node that is being visited
1820 |   ///   - Returns: the rewritten node
1821 |   open func visit(_ node: SwitchDefaultLabelSyntax) -> SwitchDefaultLabelSyntax {
     |             `- note: potential overridden instance method 'visit' here
1822 |     return visitChildren(node._syntaxNode).cast(SwitchDefaultLabelSyntax.self)
1823 |   }
     :
1826 |   ///   - Parameter node: the node that is being visited
1827 |   ///   - Returns: the rewritten node
1828 |   open func visit(_ node: SwitchExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1829 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(SwitchExprSyntax.self))
1830 |   }
     :
1833 |   ///   - Parameter node: the node that is being visited
1834 |   ///   - Returns: the rewritten node
1835 |   open func visit(_ node: TernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1836 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TernaryExprSyntax.self))
1837 |   }
     :
1850 |   ///   - Parameter node: the node that is being visited
1851 |   ///   - Returns: the rewritten node
1852 |   open func visit(_ node: ThrowStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
1853 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(ThrowStmtSyntax.self))
1854 |   }
     :
1857 |   ///   - Parameter node: the node that is being visited
1858 |   ///   - Returns: the rewritten node
1859 |   open func visit(_ node: ThrowsClauseSyntax) -> ThrowsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1860 |     return visitChildren(node._syntaxNode).cast(ThrowsClauseSyntax.self)
1861 |   }
     :
1864 |   ///   - Parameter node: the node that is being visited
1865 |   ///   - Returns: the rewritten node
1866 |   open func visit(_ node: TryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1867 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TryExprSyntax.self))
1868 |   }
     :
1871 |   ///   - Parameter node: the node that is being visited
1872 |   ///   - Returns: the rewritten node
1873 |   open func visit(_ node: TupleExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1874 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TupleExprSyntax.self))
1875 |   }
     :
1878 |   ///   - Parameter node: the node that is being visited
1879 |   ///   - Returns: the rewritten node
1880 |   open func visit(_ node: TuplePatternElementListSyntax) -> TuplePatternElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1881 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementListSyntax.self)
1882 |   }
     :
1885 |   ///   - Parameter node: the node that is being visited
1886 |   ///   - Returns: the rewritten node
1887 |   open func visit(_ node: TuplePatternElementSyntax) -> TuplePatternElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1888 |     return visitChildren(node._syntaxNode).cast(TuplePatternElementSyntax.self)
1889 |   }
     :
1892 |   ///   - Parameter node: the node that is being visited
1893 |   ///   - Returns: the rewritten node
1894 |   open func visit(_ node: TuplePatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
1895 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(TuplePatternSyntax.self))
1896 |   }
     :
1899 |   ///   - Parameter node: the node that is being visited
1900 |   ///   - Returns: the rewritten node
1901 |   open func visit(_ node: TupleTypeElementListSyntax) -> TupleTypeElementListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1902 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementListSyntax.self)
1903 |   }
     :
1906 |   ///   - Parameter node: the node that is being visited
1907 |   ///   - Returns: the rewritten node
1908 |   open func visit(_ node: TupleTypeElementSyntax) -> TupleTypeElementSyntax {
     |             `- note: potential overridden instance method 'visit' here
1909 |     return visitChildren(node._syntaxNode).cast(TupleTypeElementSyntax.self)
1910 |   }
     :
1913 |   ///   - Parameter node: the node that is being visited
1914 |   ///   - Returns: the rewritten node
1915 |   open func visit(_ node: TupleTypeSyntax) -> TypeSyntax {
     |             `- note: potential overridden instance method 'visit' here
1916 |     return TypeSyntax(visitChildren(node._syntaxNode).cast(TupleTypeSyntax.self))
1917 |   }
     :
1920 |   ///   - Parameter node: the node that is being visited
1921 |   ///   - Returns: the rewritten node
1922 |   open func visit(_ node: TypeAliasDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
1923 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(TypeAliasDeclSyntax.self))
1924 |   }
     :
1927 |   ///   - Parameter node: the node that is being visited
1928 |   ///   - Returns: the rewritten node
1929 |   open func visit(_ node: TypeAnnotationSyntax) -> TypeAnnotationSyntax {
     |             `- note: potential overridden instance method 'visit' here
1930 |     return visitChildren(node._syntaxNode).cast(TypeAnnotationSyntax.self)
1931 |   }
     :
1934 |   ///   - Parameter node: the node that is being visited
1935 |   ///   - Returns: the rewritten node
1936 |   open func visit(_ node: TypeEffectSpecifiersSyntax) -> TypeEffectSpecifiersSyntax {
     |             `- note: potential overridden instance method 'visit' here
1937 |     return visitChildren(node._syntaxNode).cast(TypeEffectSpecifiersSyntax.self)
1938 |   }
     :
1941 |   ///   - Parameter node: the node that is being visited
1942 |   ///   - Returns: the rewritten node
1943 |   open func visit(_ node: TypeExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1944 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(TypeExprSyntax.self))
1945 |   }
     :
1948 |   ///   - Parameter node: the node that is being visited
1949 |   ///   - Returns: the rewritten node
1950 |   open func visit(_ node: TypeInitializerClauseSyntax) -> TypeInitializerClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
1951 |     return visitChildren(node._syntaxNode).cast(TypeInitializerClauseSyntax.self)
1952 |   }
     :
1955 |   ///   - Parameter node: the node that is being visited
1956 |   ///   - Returns: the rewritten node
1957 |   open func visit(_ node: TypeSpecifierListSyntax) -> TypeSpecifierListSyntax {
     |             `- note: potential overridden instance method 'visit' here
1958 |     return visitChildren(node._syntaxNode).cast(TypeSpecifierListSyntax.self)
1959 |   }
     :
1962 |   ///   - Parameter node: the node that is being visited
1963 |   ///   - Returns: the rewritten node
1964 |   open func visit(_ node: UnavailableFromAsyncAttributeArgumentsSyntax) -> UnavailableFromAsyncAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1965 |     return visitChildren(node._syntaxNode).cast(UnavailableFromAsyncAttributeArgumentsSyntax.self)
1966 |   }
     :
1969 |   ///   - Parameter node: the node that is being visited
1970 |   ///   - Returns: the rewritten node
1971 |   open func visit(_ node: UnderscorePrivateAttributeArgumentsSyntax) -> UnderscorePrivateAttributeArgumentsSyntax {
     |             `- note: potential overridden instance method 'visit' here
1972 |     return visitChildren(node._syntaxNode).cast(UnderscorePrivateAttributeArgumentsSyntax.self)
1973 |   }
     :
1976 |   ///   - Parameter node: the node that is being visited
1977 |   ///   - Returns: the rewritten node
1978 |   open func visit(_ node: UnexpectedNodesSyntax) -> UnexpectedNodesSyntax {
     |             `- note: potential overridden instance method 'visit' here
1979 |     return visitChildren(node._syntaxNode).cast(UnexpectedNodesSyntax.self)
1980 |   }
     :
1983 |   ///   - Parameter node: the node that is being visited
1984 |   ///   - Returns: the rewritten node
1985 |   open func visit(_ node: UnresolvedAsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1986 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedAsExprSyntax.self))
1987 |   }
     :
1990 |   ///   - Parameter node: the node that is being visited
1991 |   ///   - Returns: the rewritten node
1992 |   open func visit(_ node: UnresolvedIsExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
1993 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedIsExprSyntax.self))
1994 |   }
     :
1997 |   ///   - Parameter node: the node that is being visited
1998 |   ///   - Returns: the rewritten node
1999 |   open func visit(_ node: UnresolvedTernaryExprSyntax) -> ExprSyntax {
     |             `- note: potential overridden instance method 'visit' here
2000 |     return ExprSyntax(visitChildren(node._syntaxNode).cast(UnresolvedTernaryExprSyntax.self))
2001 |   }
     :
2004 |   ///   - Parameter node: the node that is being visited
2005 |   ///   - Returns: the rewritten node
2006 |   open func visit(_ node: ValueBindingPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2007 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(ValueBindingPatternSyntax.self))
2008 |   }
     :
2011 |   ///   - Parameter node: the node that is being visited
2012 |   ///   - Returns: the rewritten node
2013 |   open func visit(_ node: VariableDeclSyntax) -> DeclSyntax {
     |             `- note: potential overridden instance method 'visit' here
2014 |     return DeclSyntax(visitChildren(node._syntaxNode).cast(VariableDeclSyntax.self))
2015 |   }
     :
2018 |   ///   - Parameter node: the node that is being visited
2019 |   ///   - Returns: the rewritten node
2020 |   open func visit(_ node: VersionComponentListSyntax) -> VersionComponentListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2021 |     return visitChildren(node._syntaxNode).cast(VersionComponentListSyntax.self)
2022 |   }
     :
2025 |   ///   - Parameter node: the node that is being visited
2026 |   ///   - Returns: the rewritten node
2027 |   open func visit(_ node: VersionComponentSyntax) -> VersionComponentSyntax {
     |             `- note: potential overridden instance method 'visit' here
2028 |     return visitChildren(node._syntaxNode).cast(VersionComponentSyntax.self)
2029 |   }
     :
2032 |   ///   - Parameter node: the node that is being visited
2033 |   ///   - Returns: the rewritten node
2034 |   open func visit(_ node: VersionTupleSyntax) -> VersionTupleSyntax {
     |             `- note: potential overridden instance method 'visit' here
2035 |     return visitChildren(node._syntaxNode).cast(VersionTupleSyntax.self)
2036 |   }
     :
2039 |   ///   - Parameter node: the node that is being visited
2040 |   ///   - Returns: the rewritten node
2041 |   open func visit(_ node: WhereClauseSyntax) -> WhereClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2042 |     return visitChildren(node._syntaxNode).cast(WhereClauseSyntax.self)
2043 |   }
     :
2046 |   ///   - Parameter node: the node that is being visited
2047 |   ///   - Returns: the rewritten node
2048 |   open func visit(_ node: WhileStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2049 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(WhileStmtSyntax.self))
2050 |   }
     :
2053 |   ///   - Parameter node: the node that is being visited
2054 |   ///   - Returns: the rewritten node
2055 |   open func visit(_ node: WildcardPatternSyntax) -> PatternSyntax {
     |             `- note: potential overridden instance method 'visit' here
2056 |     return PatternSyntax(visitChildren(node._syntaxNode).cast(WildcardPatternSyntax.self))
2057 |   }
     :
2060 |   ///   - Parameter node: the node that is being visited
2061 |   ///   - Returns: the rewritten node
2062 |   open func visit(_ node: YieldStmtSyntax) -> StmtSyntax {
     |             `- note: potential overridden instance method 'visit' here
2063 |     return StmtSyntax(visitChildren(node._syntaxNode).cast(YieldStmtSyntax.self))
2064 |   }
     :
2067 |   ///   - Parameter node: the node that is being visited
2068 |   ///   - Returns: the rewritten node
2069 |   open func visit(_ node: YieldedExpressionListSyntax) -> YieldedExpressionListSyntax {
     |             `- note: potential overridden instance method 'visit' here
2070 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionListSyntax.self)
2071 |   }
     :
2074 |   ///   - Parameter node: the node that is being visited
2075 |   ///   - Returns: the rewritten node
2076 |   open func visit(_ node: YieldedExpressionSyntax) -> YieldedExpressionSyntax {
     |             `- note: potential overridden instance method 'visit' here
2077 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionSyntax.self)
2078 |   }
     :
2081 |   ///   - Parameter node: the node that is being visited
2082 |   ///   - Returns: the rewritten node
2083 |   open func visit(_ node: YieldedExpressionsClauseSyntax) -> YieldedExpressionsClauseSyntax {
     |             `- note: potential overridden instance method 'visit' here
2084 |     return visitChildren(node._syntaxNode).cast(YieldedExpressionsClauseSyntax.self)
2085 |   }
     :
2088 |   ///   - Parameter node: the node that is being visited
2089 |   ///   - Returns: the rewritten node
2090 |   public func visit(_ node: DeclSyntax) -> DeclSyntax {
     |               `- note: potential overridden instance method 'visit' here
2091 |     var node: Syntax = Syntax(node)
2092 |     dispatchVisit(&node)
     :
2097 |   ///   - Parameter node: the node that is being visited
2098 |   ///   - Returns: the rewritten node
2099 |   public func visit(_ node: ExprSyntax) -> ExprSyntax {
     |               `- note: potential overridden instance method 'visit' here
2100 |     var node: Syntax = Syntax(node)
2101 |     dispatchVisit(&node)
     :
2106 |   ///   - Parameter node: the node that is being visited
2107 |   ///   - Returns: the rewritten node
2108 |   public func visit(_ node: PatternSyntax) -> PatternSyntax {
     |               `- note: potential overridden instance method 'visit' here
2109 |     var node: Syntax = Syntax(node)
2110 |     dispatchVisit(&node)
     :
2115 |   ///   - Parameter node: the node that is being visited
2116 |   ///   - Returns: the rewritten node
2117 |   public func visit(_ node: StmtSyntax) -> StmtSyntax {
     |               `- note: potential overridden instance method 'visit' here
2118 |     var node: Syntax = Syntax(node)
2119 |     dispatchVisit(&node)
     :
2124 |   ///   - Parameter node: the node that is being visited
2125 |   ///   - Returns: the rewritten node
2126 |   public func visit(_ node: TypeSyntax) -> TypeSyntax {
     |               `- note: potential overridden instance method 'visit' here
2127 |     var node: Syntax = Syntax(node)
2128 |     dispatchVisit(&node)
Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
Target: arm64-apple-macosx10.15
error: fatalError
